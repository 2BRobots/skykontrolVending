

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 17:02:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1847
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1847 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0219                     	;# 
   161  021A                     	;# 
   162  021B                     	;# 
   163  021C                     	;# 
   164  021D                     	;# 
   165  021E                     	;# 
   166  021F                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0294                     	;# 
   172  0295                     	;# 
   173  0295                     	;# 
   174  0296                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  029B                     	;# 
   180  029C                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  029E                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  0394                     	;# 
   194  0395                     	;# 
   195  0396                     	;# 
   196  039A                     	;# 
   197  039C                     	;# 
   198  039D                     	;# 
   199  039E                     	;# 
   200  039F                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218                           
   219                           	psect	eeprom_data
   220  0000  003F 0000 0001 00B8 000B 00FF 00FF 00FF 	db	63,0,1,184,11,255,255,255	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011A                     	;# 
   279  011B                     	;# 
   280  011D                     	;# 
   281  011E                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0191                     	;# 
   285  0191                     	;# 
   286  0192                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0199                     	;# 
   294  019A                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019C                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  0211                     	;# 
   307  0211                     	;# 
   308  0212                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0213                     	;# 
   312  0214                     	;# 
   313  0214                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0219                     	;# 
   322  021A                     	;# 
   323  021B                     	;# 
   324  021C                     	;# 
   325  021D                     	;# 
   326  021E                     	;# 
   327  021F                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  029E                     	;# 
   346  0311                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0318                     	;# 
   351  0318                     	;# 
   352  0319                     	;# 
   353  031A                     	;# 
   354  0394                     	;# 
   355  0395                     	;# 
   356  0396                     	;# 
   357  039A                     	;# 
   358  039C                     	;# 
   359  039D                     	;# 
   360  039E                     	;# 
   361  039F                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  0111                     	;# 
   428  0112                     	;# 
   429  0113                     	;# 
   430  0114                     	;# 
   431  0115                     	;# 
   432  0116                     	;# 
   433  0117                     	;# 
   434  0118                     	;# 
   435  0119                     	;# 
   436  011A                     	;# 
   437  011B                     	;# 
   438  011D                     	;# 
   439  011E                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0191                     	;# 
   443  0191                     	;# 
   444  0192                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0194                     	;# 
   449  0195                     	;# 
   450  0196                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019C                     	;# 
   458  019C                     	;# 
   459  019D                     	;# 
   460  019E                     	;# 
   461  019F                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  0211                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0213                     	;# 
   470  0214                     	;# 
   471  0214                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0216                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0217                     	;# 
   479  0219                     	;# 
   480  021A                     	;# 
   481  021B                     	;# 
   482  021C                     	;# 
   483  021D                     	;# 
   484  021E                     	;# 
   485  021F                     	;# 
   486  0291                     	;# 
   487  0291                     	;# 
   488  0292                     	;# 
   489  0293                     	;# 
   490  0294                     	;# 
   491  0295                     	;# 
   492  0295                     	;# 
   493  0296                     	;# 
   494  0298                     	;# 
   495  0298                     	;# 
   496  0299                     	;# 
   497  029A                     	;# 
   498  029B                     	;# 
   499  029C                     	;# 
   500  029C                     	;# 
   501  029D                     	;# 
   502  029E                     	;# 
   503  029E                     	;# 
   504  0311                     	;# 
   505  0311                     	;# 
   506  0312                     	;# 
   507  0313                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0415                     	;# 
   521  0416                     	;# 
   522  0417                     	;# 
   523  041C                     	;# 
   524  041D                     	;# 
   525  041E                     	;# 
   526  0FE4                     	;# 
   527  0FE5                     	;# 
   528  0FE6                     	;# 
   529  0FE7                     	;# 
   530  0FE8                     	;# 
   531  0FE9                     	;# 
   532  0FEA                     	;# 
   533  0FEB                     	;# 
   534  0FED                     	;# 
   535  0FEE                     	;# 
   536  0FEF                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  001E                     	;# 
   565  001F                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0093                     	;# 
   571  0094                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0097                     	;# 
   575  0098                     	;# 
   576  0099                     	;# 
   577  009A                     	;# 
   578  009B                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  0111                     	;# 
   586  0112                     	;# 
   587  0113                     	;# 
   588  0114                     	;# 
   589  0115                     	;# 
   590  0116                     	;# 
   591  0117                     	;# 
   592  0118                     	;# 
   593  0119                     	;# 
   594  011A                     	;# 
   595  011B                     	;# 
   596  011D                     	;# 
   597  011E                     	;# 
   598  018C                     	;# 
   599  018D                     	;# 
   600  0191                     	;# 
   601  0191                     	;# 
   602  0192                     	;# 
   603  0193                     	;# 
   604  0193                     	;# 
   605  0193                     	;# 
   606  0194                     	;# 
   607  0195                     	;# 
   608  0196                     	;# 
   609  0199                     	;# 
   610  019A                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019C                     	;# 
   616  019C                     	;# 
   617  019D                     	;# 
   618  019E                     	;# 
   619  019F                     	;# 
   620  020C                     	;# 
   621  020D                     	;# 
   622  0211                     	;# 
   623  0211                     	;# 
   624  0212                     	;# 
   625  0212                     	;# 
   626  0213                     	;# 
   627  0213                     	;# 
   628  0214                     	;# 
   629  0214                     	;# 
   630  0215                     	;# 
   631  0215                     	;# 
   632  0215                     	;# 
   633  0216                     	;# 
   634  0216                     	;# 
   635  0217                     	;# 
   636  0217                     	;# 
   637  0219                     	;# 
   638  021A                     	;# 
   639  021B                     	;# 
   640  021C                     	;# 
   641  021D                     	;# 
   642  021E                     	;# 
   643  021F                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0294                     	;# 
   649  0295                     	;# 
   650  0295                     	;# 
   651  0296                     	;# 
   652  0298                     	;# 
   653  0298                     	;# 
   654  0299                     	;# 
   655  029A                     	;# 
   656  029B                     	;# 
   657  029C                     	;# 
   658  029C                     	;# 
   659  029D                     	;# 
   660  029E                     	;# 
   661  029E                     	;# 
   662  0311                     	;# 
   663  0311                     	;# 
   664  0312                     	;# 
   665  0313                     	;# 
   666  0318                     	;# 
   667  0318                     	;# 
   668  0319                     	;# 
   669  031A                     	;# 
   670  0394                     	;# 
   671  0395                     	;# 
   672  0396                     	;# 
   673  039A                     	;# 
   674  039C                     	;# 
   675  039D                     	;# 
   676  039E                     	;# 
   677  039F                     	;# 
   678  0415                     	;# 
   679  0416                     	;# 
   680  0417                     	;# 
   681  041C                     	;# 
   682  041D                     	;# 
   683  041E                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEB                     	;# 
   692  0FED                     	;# 
   693  0FEE                     	;# 
   694  0FEF                     	;# 
   695                           
   696                           	psect	idataCOMMON
   697  040A                     __pidataCOMMON:	
   698                           
   699                           ;initializer for _ignoreCount
   700  040A  3401               	retlw	1
   701                           
   702                           ;initializer for _first_i2c
   703  040B  3401               	retlw	1
   704                           
   705                           	psect	idataBANK0
   706  040C                     __pidataBANK0:	
   707                           
   708                           ;initializer for _blockStop
   709  040C  3401               	retlw	1
   710                           
   711                           	psect	stringtext1
   712  040D                     __pstringtext1:	
   713  040D                     _RX_ELMNTS:	
   714  040D  3421               	retlw	33
   715  040E                     __end_of_RX_ELMNTS:	
   716  0003                     _STATUSbits	set	3
   717  0018                     _T1CON	set	24
   718  000B                     _INTCON	set	11
   719  000D                     _PORTB	set	13
   720  000C                     _PORTA	set	12
   721  001C                     _T2CON	set	28
   722  001B                     _PR2	set	27
   723  0012                     _PIR2bits	set	18
   724  000D                     _PORTBbits	set	13
   725  0018                     _T1CONbits	set	24
   726  0011                     _PIR1bits	set	17
   727  000B                     _INTCONbits	set	11
   728  0092                     _PIE2bits	set	146
   729  008D                     _TRISB	set	141
   730  008C                     _TRISA	set	140
   731  0095                     _OPTION_REGbits	set	149
   732  0099                     _OSCCON	set	153
   733  0091                     _PIE1bits	set	145
   734  011D                     _APFCON0bits	set	285
   735  010C                     _LATAbits	set	268
   736  0191                     _EEADR	set	401
   737  0196                     _EECON2	set	406
   738  0193                     _EEDATA	set	403
   739  0195                     _EECON1	set	405
   740  0195                     _EECON1bits	set	405
   741  018D                     _ANSELB	set	397
   742  018C                     _ANSELA	set	396
   743  0212                     _SSP1ADD	set	530
   744  0217                     _SSP1CON3bits	set	535
   745  0216                     _SSP1CON2bits	set	534
   746  0215                     _SSP1CON1	set	533
   747  0214                     _SSP1STAT	set	532
   748  020D                     _WPUB	set	525
   749  020C                     _WPUA	set	524
   750  0215                     _SSP1CON1bits	set	533
   751  0211                     _SSP1BUF	set	529
   752  0214                     _SSP1STATbits	set	532
   753  0298                     _CCPR2L	set	664
   754  029A                     _CCP2CON	set	666
   755  0394                     _IOCBP	set	916
   756  0396                     _IOCBF	set	918
   757  0396                     _IOCBFbits	set	918
   758                           
   759                           ; #config settings
   760  0000                     
   761                           	psect	cinit
   762  0108                     start_initialization:	
   763  0108                     __initialization:	
   764                           
   765                           ; Initialize objects allocated to COMMON
   766  0108  3184  240A  3181   	fcall	__pidataCOMMON	;fetch initializer
   767  010B  00FB               	movwf	__pdataCOMMON& (0+127)
   768  010C  3184  240B  3181   	fcall	__pidataCOMMON+1	;fetch initializer
   769  010F  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   770                           
   771                           ; Initialize objects allocated to BANK0
   772  0110  3184  240C  3181   	fcall	__pidataBANK0	;fetch initializer
   773  0113  00CE               	movwf	__pdataBANK0& (0+127)
   774                           
   775                           ; Clear objects allocated to COMMON
   776  0114  01F7               	clrf	__pbssCOMMON& (0+127)
   777  0115  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   778  0116  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   779  0117  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   780                           
   781                           ; Clear objects allocated to BANK0
   782  0118  3020               	movlw	low __pbssBANK0
   783  0119  0084               	movwf	4
   784  011A  3000               	movlw	high __pbssBANK0
   785  011B  0085               	movwf	5
   786  011C  3025               	movlw	37
   787  011D  3184  2404         	fcall	clear_ram0
   788  011F                     end_of_initialization:	
   789                           ;End of C runtime variable initialization code
   790                           
   791  011F                     __end_of__initialization:	
   792  011F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   793  0120  0020               	movlb	0
   794  0121  3181  2923         	ljmp	_main	;jump to C main() function
   795                           
   796                           	psect	bssCOMMON
   797  0077                     __pbssCOMMON:	
   798  0077                     isr@junk:	
   799  0077                     	ds	1
   800  0078                     _triggerDW:	
   801  0078                     	ds	1
   802  0079                     _triggerUP:	
   803  0079                     	ds	1
   804  007A                     _index_i2c:	
   805  007A                     	ds	1
   806                           
   807                           	psect	dataCOMMON
   808  007B                     __pdataCOMMON:	
   809  007B                     _ignoreCount:	
   810  007B                     	ds	1
   811  007C                     _first_i2c:	
   812  007C                     	ds	1
   813                           
   814                           	psect	bssBANK0
   815  0020                     __pbssBANK0:	
   816  0020                     _I2C_buffer:	
   817  0020                     	ds	33
   818  0041                     _obstructHold:	
   819  0041                     	ds	2
   820  0043                     _topSen:	
   821  0043                     	ds	1
   822  0044                     _middleSen:	
   823  0044                     	ds	1
   824                           
   825                           	psect	dataBANK0
   826  004E                     __pdataBANK0:	
   827  004E                     _blockStop:	
   828  004E                     	ds	1
   829                           
   830                           	psect	clrtext
   831  0404                     clear_ram0:	
   832                           ;	Called with FSR0 containing the base address, and
   833                           ;	WREG with the size to clear
   834                           
   835  0404  0064               	clrwdt	;clear the watchdog before getting into this loop
   836  0405                     clrloop0:	
   837  0405  0180               	clrf	0	;clear RAM location pointed to by FSR
   838  0406  3101               	addfsr 0,1
   839  0407  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   840  0408  2C05               	goto	clrloop0	;have we reached the end yet?
   841  0409  3400               	retlw	0	;all done for this memory range, return
   842                           
   843                           	psect	cstackCOMMON
   844  0070                     __pcstackCOMMON:	
   845  0070                     ?_eeprom_read:	
   846  0070                     ?_isr:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_init_I2C_buffer:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_main:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_PWM_Init:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?___wmul:	
   859                           ; 2 bytes @ 0x0
   860                           
   861  0070                     ___wmul@multiplier:	
   862                           ; 2 bytes @ 0x0
   863                           
   864                           
   865                           ; 2 bytes @ 0x0
   866  0070                     	ds	2
   867  0072                     ___wmul@multiplicand:	
   868                           
   869                           ; 2 bytes @ 0x2
   870  0072                     	ds	2
   871  0074                     ??___wmul:	
   872  0074                     ___wmul@product:	
   873                           ; 1 bytes @ 0x4
   874                           
   875                           
   876                           ; 2 bytes @ 0x4
   877  0074                     	ds	2
   878  0076                     ??_isr:	
   879                           
   880                           ; 1 bytes @ 0x6
   881  0076                     	ds	1
   882                           
   883                           	psect	cstackBANK0
   884  0045                     __pcstackBANK0:	
   885  0045                     ??_eeprom_read:	
   886  0045                     ?_eeprom_write:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0045                     ??_PWM_Init:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0045                     ?_PWM_set_duty:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0045                     eeprom_write@value:	
   896                           ; 2 bytes @ 0x0
   897                           
   898  0045                     PWM_set_duty@duty:	
   899                           ; 1 bytes @ 0x0
   900                           
   901                           
   902                           ; 2 bytes @ 0x0
   903  0045                     	ds	1
   904  0046                     ??_eeprom_write:	
   905                           
   906                           ; 1 bytes @ 0x1
   907  0046                     	ds	1
   908  0047                     ??_PWM_set_duty:	
   909                           
   910                           ; 1 bytes @ 0x2
   911  0047                     	ds	1
   912  0048                     eeprom_read@addr:	
   913  0048                     eeprom_write@addr:	
   914                           ; 1 bytes @ 0x3
   915                           
   916                           
   917                           ; 1 bytes @ 0x3
   918  0048                     	ds	1
   919  0049                     ??_init_I2C_buffer:	
   920                           
   921                           ; 1 bytes @ 0x4
   922  0049                     	ds	1
   923  004A                     ??_main:	
   924                           
   925                           ; 1 bytes @ 0x5
   926  004A                     	ds	4
   927                           
   928                           	psect	maintext
   929  0123                     __pmaintext:	
   930 ;;
   931 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   932 ;;
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 250 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : B1F/0
   946 ;;		On exit  : 1F/7
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   951 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   953 ;;Total ram usage:        4 bytes
   954 ;; Hardware stack levels required when called:    4
   955 ;; This function calls:
   956 ;;		_PWM_Init
   957 ;;		_PWM_set_duty
   958 ;;		_eeprom_write
   959 ;;		_init_I2C_buffer
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _main
   967  0123                     _main:	
   968                           
   969                           ;main.c: 251: OSCCON = 0b11110000;
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   973  0123  30F0               	movlw	240
   974  0124  0021               	movlb	1	; select bank1
   975  0125  0099               	movwf	25	;volatile
   976                           
   977                           ;main.c: 252: init_I2C_buffer();
   978  0126  3183  2314  3181   	fcall	_init_I2C_buffer
   979                           
   980                           ;main.c: 253: OPTION_REGbits.nWPUEN = 0;
   981  0129  0021               	movlb	1	; select bank1
   982  012A  1395               	bcf	21,7	;volatile
   983                           
   984                           ;main.c: 254: TRISA = 0b00100000;
   985  012B  3020               	movlw	32
   986  012C  008C               	movwf	12	;volatile
   987                           
   988                           ;main.c: 255: ANSELA = 0b00000000;
   989  012D  0023               	movlb	3	; select bank3
   990  012E  018C               	clrf	12	;volatile
   991                           
   992                           ;main.c: 256: TRISB = 0b11111111;
   993  012F  30FF               	movlw	255
   994  0130  0021               	movlb	1	; select bank1
   995  0131  008D               	movwf	13	;volatile
   996                           
   997                           ;main.c: 257: ANSELB = 0b00000000;
   998  0132  0023               	movlb	3	; select bank3
   999  0133  018D               	clrf	13	;volatile
  1000                           
  1001                           ;main.c: 258: WPUA = 0b00100000;
  1002  0134  3020               	movlw	32
  1003  0135  0024               	movlb	4	; select bank4
  1004  0136  008C               	movwf	12	;volatile
  1005                           
  1006                           ;main.c: 259: WPUB = 0b11111111;
  1007  0137  30FF               	movlw	255
  1008  0138  008D               	movwf	13	;volatile
  1009                           
  1010                           ;main.c: 260: PORTA = 0b00000000;
  1011  0139  0020               	movlb	0	; select bank0
  1012  013A  018C               	clrf	12	;volatile
  1013                           
  1014                           ;main.c: 261: PORTB = 0b00000000;
  1015  013B  018D               	clrf	13	;volatile
  1016                           
  1017                           ;main.c: 262: APFCON0bits.CCP2SEL = 1;
  1018  013C  0022               	movlb	2	; select bank2
  1019  013D  159D               	bsf	29,3	;volatile
  1020                           
  1021                           ;main.c: 263: SSP1STAT = 0b10000000;
  1022  013E  3080               	movlw	128
  1023  013F  0024               	movlb	4	; select bank4
  1024  0140  0094               	movwf	20	;volatile
  1025                           
  1026                           ;main.c: 264: SSP1CON1 = 0b00110110;
  1027  0141  3036               	movlw	54
  1028  0142  0095               	movwf	21	;volatile
  1029                           
  1030                           ;main.c: 265: SSP1CON2bits.SEN = 1;
  1031  0143  1416               	bsf	22,0	;volatile
  1032                           
  1033                           ;main.c: 266: SSP1CON3bits.BOEN = 1;
  1034  0144  1617               	bsf	23,4	;volatile
  1035                           
  1036                           ;main.c: 267: SSP1CON3bits.SDAHT = 1;
  1037  0145  1597               	bsf	23,3	;volatile
  1038                           
  1039                           ;main.c: 268: SSP1CON3bits.SBCDE = 1;
  1040  0146  1517               	bsf	23,2	;volatile
  1041                           
  1042                           ;main.c: 269: SSP1ADD = (char) (I2C_buffer.data.ADDRESS << 1);
  1043  0147  0020               	movlb	0	; select bank0
  1044  0148  3521               	lslf	_I2C_buffer+1,w	;volatile
  1045  0149  0024               	movlb	4	; select bank4
  1046  014A  0092               	movwf	18	;volatile
  1047                           
  1048                           ;main.c: 270: PIR1bits.SSP1IF = 0;
  1049  014B  0020               	movlb	0	; select bank0
  1050  014C  1191               	bcf	17,3	;volatile
  1051                           
  1052                           ;main.c: 271: PIR2bits.BCL1IF = 0;
  1053  014D  1192               	bcf	18,3	;volatile
  1054                           
  1055                           ;main.c: 272: PIE2bits.BCL1IE = 1;
  1056  014E  0021               	movlb	1	; select bank1
  1057  014F  1592               	bsf	18,3	;volatile
  1058                           
  1059                           ;main.c: 273: PIE1bits.SSP1IE = 1;
  1060  0150  1591               	bsf	17,3	;volatile
  1061                           
  1062                           ;main.c: 274: INTCONbits.PEIE = 1;
  1063  0151  170B               	bsf	11,6	;volatile
  1064                           
  1065                           ;main.c: 275: PWM_Init();
  1066  0152  3183  23F8  3181   	fcall	_PWM_Init
  1067                           
  1068                           ;main.c: 276: PWM_set_duty(0);
  1069  0155  3000               	movlw	0
  1070  0156  00C5               	movwf	PWM_set_duty@duty
  1071  0157  00C6               	movwf	PWM_set_duty@duty+1
  1072  0158  3183  239D  3181   	fcall	_PWM_set_duty
  1073                           
  1074                           ;main.c: 277: IOCBP = 0b11101101;
  1075  015B  30ED               	movlw	237
  1076  015C  0027               	movlb	7	; select bank7
  1077  015D  0094               	movwf	20	;volatile
  1078                           
  1079                           ;main.c: 278: INTCON = 0b01001000;
  1080  015E  3048               	movlw	72
  1081  015F  008B               	movwf	11	;volatile
  1082                           
  1083                           ;main.c: 279: T1CON = 0b00110100;
  1084  0160  3034               	movlw	52
  1085  0161  0020               	movlb	0	; select bank0
  1086  0162  0098               	movwf	24	;volatile
  1087                           
  1088                           ;main.c: 280: PIE1bits.TMR1IE = 1;
  1089  0163  0021               	movlb	1	; select bank1
  1090  0164  1411               	bsf	17,0	;volatile
  1091                           
  1092                           ;main.c: 281: T1CONbits.TMR1ON = 1;
  1093  0165  0020               	movlb	0	; select bank0
  1094  0166  1418               	bsf	24,0	;volatile
  1095                           
  1096                           ;main.c: 282: _delay((unsigned long)((50)*(32000000/4000.0)));
  1097  0167  3003               	movlw	3
  1098  0168  0020               	movlb	0	; select bank0
  1099  0169  00CB               	movwf	??_main+1
  1100  016A  3008               	movlw	8
  1101  016B  00CA               	movwf	??_main
  1102  016C  3077               	movlw	119
  1103  016D                     u2157:	
  1104  016D  0B89               	decfsz	9,f
  1105  016E  296D               	goto	u2157
  1106  016F  0BCA               	decfsz	??_main,f
  1107  0170  296D               	goto	u2157
  1108  0171  0BCB               	decfsz	??_main+1,f
  1109  0172  296D               	goto	u2157
  1110                           
  1111                           ;main.c: 283: LATAbits.LATA6 = 1;
  1112  0173  0022               	movlb	2	; select bank2
  1113  0174  170C               	bsf	12,6	;volatile
  1114                           
  1115                           ;main.c: 284: _delay((unsigned long)((450)*(32000000/4000.0)));
  1116  0175  3013               	movlw	19
  1117  0176  0020               	movlb	0	; select bank0
  1118  0177  00CB               	movwf	??_main+1
  1119  0178  3044               	movlw	68
  1120  0179  00CA               	movwf	??_main
  1121  017A  3044               	movlw	68
  1122  017B                     u2167:	
  1123  017B  0B89               	decfsz	9,f
  1124  017C  297B               	goto	u2167
  1125  017D  0BCA               	decfsz	??_main,f
  1126  017E  297B               	goto	u2167
  1127  017F  0BCB               	decfsz	??_main+1,f
  1128  0180  297B               	goto	u2167
  1129  0181  0000               	nop
  1130                           
  1131                           ;main.c: 285: LATAbits.LATA6 = 0;
  1132  0182  0022               	movlb	2	; select bank2
  1133  0183  130C               	bcf	12,6	;volatile
  1134                           
  1135                           ;main.c: 286: INTCONbits.GIE = 1;
  1136  0184  178B               	bsf	11,7	;volatile
  1137  0185                     l1874:	
  1138                           
  1139                           ;main.c: 290: if (I2C_buffer.data.ENABLE == 0 && blockStop == 1) {
  1140  0185  0020               	movlb	0	; select bank0
  1141  0186  0824               	movf	_I2C_buffer+4,w	;volatile
  1142  0187  1D03               	btfss	3,2
  1143  0188  29A1               	goto	l1882
  1144  0189  034E               	decf	_blockStop,w	;volatile
  1145  018A  1D03               	btfss	3,2
  1146  018B  29A1               	goto	l1882
  1147                           
  1148                           ;main.c: 291: ignoreCount = 1;
  1149  018C  3001               	movlw	1
  1150  018D  00CA               	movwf	??_main
  1151  018E  084A               	movf	??_main,w
  1152  018F  00FB               	movwf	_ignoreCount	;volatile
  1153                           
  1154                           ;main.c: 292: _delay((unsigned long)((2)*(32000000/4000.0)));
  1155  0190  3015               	movlw	21
  1156  0191  0020               	movlb	0	; select bank0
  1157  0192  00CA               	movwf	??_main
  1158  0193  30C6               	movlw	198
  1159  0194                     u2177:	
  1160  0194  0B89               	decfsz	9,f
  1161  0195  2994               	goto	u2177
  1162  0196  0BCA               	decfsz	??_main,f
  1163  0197  2994               	goto	u2177
  1164  0198  0000               	nop
  1165                           
  1166                           ;main.c: 293: PWM_set_duty(0);
  1167  0199  3000               	movlw	0
  1168  019A  0020               	movlb	0	; select bank0
  1169  019B  00C5               	movwf	PWM_set_duty@duty
  1170  019C  00C6               	movwf	PWM_set_duty@duty+1
  1171  019D  3183  239D  3181   	fcall	_PWM_set_duty
  1172                           
  1173                           ;main.c: 294: } else {
  1174  01A0  29B2               	goto	l1888
  1175  01A1                     l1882:	
  1176                           
  1177                           ;main.c: 295: PWM_set_duty(512);
  1178  01A1  3000               	movlw	0
  1179  01A2  00C5               	movwf	PWM_set_duty@duty
  1180  01A3  3002               	movlw	2
  1181  01A4  00C6               	movwf	PWM_set_duty@duty+1
  1182  01A5  3183  239D  3181   	fcall	_PWM_set_duty
  1183                           
  1184                           ;main.c: 296: _delay((unsigned long)((2)*(32000000/4000.0)));
  1185  01A8  3015               	movlw	21
  1186  01A9  0020               	movlb	0	; select bank0
  1187  01AA  00CA               	movwf	??_main
  1188  01AB  30C6               	movlw	198
  1189  01AC                     u2187:	
  1190  01AC  0B89               	decfsz	9,f
  1191  01AD  29AC               	goto	u2187
  1192  01AE  0BCA               	decfsz	??_main,f
  1193  01AF  29AC               	goto	u2187
  1194  01B0  0000               	nop
  1195                           
  1196                           ;main.c: 297: ignoreCount = 0;
  1197  01B1  01FB               	clrf	_ignoreCount	;volatile
  1198  01B2                     l1888:	
  1199                           
  1200                           ;main.c: 298: };main.c: 300: if (I2C_buffer.data.RESET == 1) {
  1201  01B2  0020               	movlb	0	; select bank0
  1202  01B3  0323               	decf	_I2C_buffer+3,w	;volatile
  1203  01B4  1903               	btfsc	3,2
  1204  01B5  0001               	reset	;# 
  1205                           
  1206                           ;main.c: 302: };main.c: 304: if (I2C_buffer.data.SAVE == 1) {
  1207  01B6  0020               	movlb	0	; select bank0
  1208  01B7  0322               	decf	_I2C_buffer+2,w	;volatile
  1209  01B8  1D03               	btfss	3,2
  1210  01B9  29F1               	goto	l1900
  1211                           
  1212                           ;main.c: 305: eeprom_write(0, I2C_buffer.data.ADDRESS);
  1213  01BA  0821               	movf	_I2C_buffer+1,w	;volatile
  1214  01BB  00CA               	movwf	??_main
  1215  01BC  084A               	movf	??_main,w
  1216  01BD  00C5               	movwf	eeprom_write@value
  1217  01BE  3000               	movlw	0
  1218  01BF  3183  2375  3181   	fcall	_eeprom_write
  1219                           
  1220                           ;main.c: 306: eeprom_write(1, I2C_buffer.data.ENABLE);
  1221  01C2  0020               	movlb	0	; select bank0
  1222  01C3  0824               	movf	_I2C_buffer+4,w	;volatile
  1223  01C4  00CA               	movwf	??_main
  1224  01C5  084A               	movf	??_main,w
  1225  01C6  00C5               	movwf	eeprom_write@value
  1226  01C7  3001               	movlw	1
  1227  01C8  3183  2375  3181   	fcall	_eeprom_write
  1228                           
  1229                           ;main.c: 307: eeprom_write(2, I2C_buffer.data.BUZZER);
  1230  01CB  0020               	movlb	0	; select bank0
  1231  01CC  0825               	movf	_I2C_buffer+5,w	;volatile
  1232  01CD  00CA               	movwf	??_main
  1233  01CE  084A               	movf	??_main,w
  1234  01CF  00C5               	movwf	eeprom_write@value
  1235  01D0  3002               	movlw	2
  1236  01D1  3183  2375  3181   	fcall	_eeprom_write
  1237                           
  1238                           ;main.c: 308: eeprom_write(3, I2C_buffer.byte[0x06]);
  1239  01D4  0020               	movlb	0	; select bank0
  1240  01D5  0826               	movf	_I2C_buffer+6,w	;volatile
  1241  01D6  00CA               	movwf	??_main
  1242  01D7  084A               	movf	??_main,w
  1243  01D8  00C5               	movwf	eeprom_write@value
  1244  01D9  3003               	movlw	3
  1245  01DA  3183  2375  3181   	fcall	_eeprom_write
  1246                           
  1247                           ;main.c: 309: eeprom_write(4, I2C_buffer.byte[0x07]);
  1248  01DD  0020               	movlb	0	; select bank0
  1249  01DE  0827               	movf	_I2C_buffer+7,w	;volatile
  1250  01DF  00CA               	movwf	??_main
  1251  01E0  084A               	movf	??_main,w
  1252  01E1  00C5               	movwf	eeprom_write@value
  1253  01E2  3004               	movlw	4
  1254  01E3  3183  2375  3181   	fcall	_eeprom_write
  1255                           
  1256                           ;main.c: 310: _delay((unsigned long)((10)*(32000000/4000.0)));
  1257  01E6  3068               	movlw	104
  1258  01E7  0020               	movlb	0	; select bank0
  1259  01E8  00CA               	movwf	??_main
  1260  01E9  30E4               	movlw	228
  1261  01EA                     u2197:	
  1262  01EA  0B89               	decfsz	9,f
  1263  01EB  29EA               	goto	u2197
  1264  01EC  0BCA               	decfsz	??_main,f
  1265  01ED  29EA               	goto	u2197
  1266  01EE  0000               	nop
  1267                           
  1268                           ;main.c: 311: I2C_buffer.data.SAVE = 0;
  1269  01EF  0020               	movlb	0	; select bank0
  1270  01F0  01A2               	clrf	_I2C_buffer+2	;volatile
  1271  01F1                     l1900:	
  1272                           
  1273                           ;main.c: 312: };main.c: 314: if (triggerUP == 1) {
  1274  01F1  0379               	decf	_triggerUP,w	;volatile
  1275  01F2  1D03               	btfss	3,2
  1276  01F3  2A82               	goto	l1948
  1277                           
  1278                           ;main.c: 315: _delay((unsigned long)((500)*(32000000/4000.0)));
  1279  01F4  3015               	movlw	21
  1280  01F5  0020               	movlb	0	; select bank0
  1281  01F6  00CB               	movwf	??_main+1
  1282  01F7  304B               	movlw	75
  1283  01F8  00CA               	movwf	??_main
  1284  01F9  30BE               	movlw	190
  1285  01FA                     u2207:	
  1286  01FA  0B89               	decfsz	9,f
  1287  01FB  29FA               	goto	u2207
  1288  01FC  0BCA               	decfsz	??_main,f
  1289  01FD  29FA               	goto	u2207
  1290  01FE  0BCB               	decfsz	??_main+1,f
  1291  01FF  29FA               	goto	u2207
  1292  0200  0000               	nop
  1293  0201                     l1906:	
  1294                           ;main.c: 316: while (PORTBbits.RB0 == 1 || PORTBbits.RB2 == 1 || PORTBbits.RB3 == 1 || P
      +                          ORTBbits.RB5 == 1 || PORTBbits.RB6 == 1 || PORTBbits.RB7 == 1) {
  1295                           
  1296  0201  0020               	movlb	0	; select bank0
  1297  0202  1C0D               	btfss	13,0	;volatile
  1298  0203  2A0E               	goto	l1908
  1299  0204                     l1904:	
  1300                           
  1301                           ;main.c: 317: _delay((unsigned long)((10)*(32000000/4000.0)));
  1302  0204  3068               	movlw	104
  1303  0205  0020               	movlb	0	; select bank0
  1304  0206  00CA               	movwf	??_main
  1305  0207  30E4               	movlw	228
  1306  0208                     u2217:	
  1307  0208  0B89               	decfsz	9,f
  1308  0209  2A08               	goto	u2217
  1309  020A  0BCA               	decfsz	??_main,f
  1310  020B  2A08               	goto	u2217
  1311  020C  0000               	nop
  1312  020D  2A01               	goto	l1906
  1313  020E                     l1908:	
  1314  020E  1D0D               	btfss	13,2	;volatile
  1315  020F  198D               	btfsc	13,3	;volatile
  1316  0210  2A04               	goto	l1904
  1317  0211  1E8D               	btfss	13,5	;volatile
  1318  0212  1B0D               	btfsc	13,6	;volatile
  1319  0213  2A04               	goto	l1904
  1320  0214  1B8D               	btfsc	13,7	;volatile
  1321  0215  2A04               	goto	l1904
  1322                           
  1323                           ;main.c: 318: };main.c: 319: _delay((unsigned long)((100)*(32000000/4000.0)));
  1324  0216  3005               	movlw	5
  1325  0217  0020               	movlb	0	; select bank0
  1326  0218  00CB               	movwf	??_main+1
  1327  0219  300F               	movlw	15
  1328  021A  00CA               	movwf	??_main
  1329  021B  30F1               	movlw	241
  1330  021C                     u2227:	
  1331  021C  0B89               	decfsz	9,f
  1332  021D  2A1C               	goto	u2227
  1333  021E  0BCA               	decfsz	??_main,f
  1334  021F  2A1C               	goto	u2227
  1335  0220  0BCB               	decfsz	??_main+1,f
  1336  0221  2A1C               	goto	u2227
  1337                           
  1338                           ;main.c: 320: if (middleSen == 1 && topSen == 1) {
  1339  0222  0020               	movlb	0	; select bank0
  1340  0223  0344               	decf	_middleSen,w	;volatile
  1341  0224  1D03               	btfss	3,2
  1342  0225  2A46               	goto	l1926
  1343  0226  0343               	decf	_topSen,w	;volatile
  1344  0227  1D03               	btfss	3,2
  1345  0228  2A46               	goto	l1926
  1346                           
  1347                           ;main.c: 321: I2C_buffer.data.UPA++;
  1348  0229  3001               	movlw	1
  1349  022A  07A9               	addwf	_I2C_buffer+9,f	;volatile
  1350  022B  3000               	movlw	0
  1351  022C  3DAA               	addwfc	_I2C_buffer+10,f	;volatile
  1352  022D  3000               	movlw	0
  1353  022E  3DAB               	addwfc	_I2C_buffer+11,f	;volatile
  1354  022F  3000               	movlw	0
  1355  0230  3DAC               	addwfc	_I2C_buffer+12,f	;volatile
  1356                           
  1357                           ;main.c: 322: I2C_buffer.data.NWA = I2C_buffer.data.UPA - I2C_buffer.data.DWA;
  1358  0231  082D               	movf	_I2C_buffer+13,w	;volatile
  1359  0232  0229               	subwf	_I2C_buffer+9,w	;volatile
  1360  0233  00CA               	movwf	??_main
  1361  0234  082E               	movf	_I2C_buffer+14,w	;volatile
  1362  0235  3B2A               	subwfb	_I2C_buffer+10,w	;volatile
  1363  0236  00CB               	movwf	??_main+1
  1364  0237  082F               	movf	_I2C_buffer+15,w	;volatile
  1365  0238  3B2B               	subwfb	_I2C_buffer+11,w	;volatile
  1366  0239  00CC               	movwf	??_main+2
  1367  023A  0830               	movf	_I2C_buffer+16,w	;volatile
  1368  023B  3B2C               	subwfb	_I2C_buffer+12,w	;volatile
  1369  023C  00CD               	movwf	??_main+3
  1370  023D  084D               	movf	??_main+3,w
  1371  023E  00B4               	movwf	_I2C_buffer+20	;volatile
  1372  023F  084C               	movf	??_main+2,w
  1373  0240  00B3               	movwf	_I2C_buffer+19	;volatile
  1374  0241  084B               	movf	??_main+1,w
  1375  0242  00B2               	movwf	_I2C_buffer+18	;volatile
  1376  0243  084A               	movf	??_main,w
  1377  0244  00B1               	movwf	_I2C_buffer+17	;volatile
  1378                           
  1379                           ;main.c: 323: } else {
  1380  0245  2A68               	goto	l1934
  1381  0246                     l1926:	
  1382                           
  1383                           ;main.c: 324: if (middleSen == 1 && topSen == 0) {
  1384  0246  0344               	decf	_middleSen,w	;volatile
  1385  0247  1D03               	btfss	3,2
  1386  0248  2A68               	goto	l1934
  1387  0249  0843               	movf	_topSen,w	;volatile
  1388  024A  1D03               	btfss	3,2
  1389  024B  2A68               	goto	l1934
  1390                           
  1391                           ;main.c: 325: I2C_buffer.data.UPK++;
  1392  024C  3001               	movlw	1
  1393  024D  07B5               	addwf	_I2C_buffer+21,f	;volatile
  1394  024E  3000               	movlw	0
  1395  024F  3DB6               	addwfc	_I2C_buffer+22,f	;volatile
  1396  0250  3000               	movlw	0
  1397  0251  3DB7               	addwfc	_I2C_buffer+23,f	;volatile
  1398  0252  3000               	movlw	0
  1399  0253  3DB8               	addwfc	_I2C_buffer+24,f	;volatile
  1400                           
  1401                           ;main.c: 326: I2C_buffer.data.NWK = I2C_buffer.data.UPK - I2C_buffer.data.DWK;
  1402  0254  0839               	movf	_I2C_buffer+25,w	;volatile
  1403  0255  0235               	subwf	_I2C_buffer+21,w	;volatile
  1404  0256  00CA               	movwf	??_main
  1405  0257  083A               	movf	_I2C_buffer+26,w	;volatile
  1406  0258  3B36               	subwfb	_I2C_buffer+22,w	;volatile
  1407  0259  00CB               	movwf	??_main+1
  1408  025A  083B               	movf	_I2C_buffer+27,w	;volatile
  1409  025B  3B37               	subwfb	_I2C_buffer+23,w	;volatile
  1410  025C  00CC               	movwf	??_main+2
  1411  025D  083C               	movf	_I2C_buffer+28,w	;volatile
  1412  025E  3B38               	subwfb	_I2C_buffer+24,w	;volatile
  1413  025F  00CD               	movwf	??_main+3
  1414  0260  084D               	movf	??_main+3,w
  1415  0261  00C0               	movwf	_I2C_buffer+32	;volatile
  1416  0262  084C               	movf	??_main+2,w
  1417  0263  00BF               	movwf	_I2C_buffer+31	;volatile
  1418  0264  084B               	movf	??_main+1,w
  1419  0265  00BE               	movwf	_I2C_buffer+30	;volatile
  1420  0266  084A               	movf	??_main,w
  1421  0267  00BD               	movwf	_I2C_buffer+29	;volatile
  1422  0268                     l1934:	
  1423  0268  0020               	movlb	0	; select bank0
  1424  0269  1C0D               	btfss	13,0	;volatile
  1425  026A  2A75               	goto	l1936
  1426  026B                     l1932:	
  1427                           
  1428                           ;main.c: 330: _delay((unsigned long)((10)*(32000000/4000.0)));
  1429  026B  3068               	movlw	104
  1430  026C  0020               	movlb	0	; select bank0
  1431  026D  00CA               	movwf	??_main
  1432  026E  30E4               	movlw	228
  1433  026F                     u2237:	
  1434  026F  0B89               	decfsz	9,f
  1435  0270  2A6F               	goto	u2237
  1436  0271  0BCA               	decfsz	??_main,f
  1437  0272  2A6F               	goto	u2237
  1438  0273  0000               	nop
  1439  0274  2A68               	goto	l1934
  1440  0275                     l1936:	
  1441  0275  1D0D               	btfss	13,2	;volatile
  1442  0276  198D               	btfsc	13,3	;volatile
  1443  0277  2A6B               	goto	l1932
  1444  0278  1E8D               	btfss	13,5	;volatile
  1445  0279  1B0D               	btfsc	13,6	;volatile
  1446  027A  2A6B               	goto	l1932
  1447  027B  1B8D               	btfsc	13,7	;volatile
  1448  027C  2A6B               	goto	l1932
  1449                           
  1450                           ;main.c: 331: };main.c: 332: triggerUP = 0;
  1451  027D  01F9               	clrf	_triggerUP	;volatile
  1452                           
  1453                           ;main.c: 333: middleSen = 0;
  1454  027E  01C4               	clrf	_middleSen	;volatile
  1455                           
  1456                           ;main.c: 334: topSen = 0;
  1457  027F  01C3               	clrf	_topSen	;volatile
  1458                           
  1459                           ;main.c: 335: IOCBF = 0;
  1460  0280  0027               	movlb	7	; select bank7
  1461  0281  0196               	clrf	22	;volatile
  1462  0282                     l1948:	
  1463                           
  1464                           ;main.c: 336: };main.c: 338: if (triggerDW == 1) {
  1465  0282  0378               	decf	_triggerDW,w	;volatile
  1466  0283  1D03               	btfss	3,2
  1467  0284  2985               	goto	l1874
  1468                           
  1469                           ;main.c: 339: _delay((unsigned long)((500)*(32000000/4000.0)));
  1470  0285  3015               	movlw	21
  1471  0286  0020               	movlb	0	; select bank0
  1472  0287  00CB               	movwf	??_main+1
  1473  0288  304B               	movlw	75
  1474  0289  00CA               	movwf	??_main
  1475  028A  30BE               	movlw	190
  1476  028B                     u2247:	
  1477  028B  0B89               	decfsz	9,f
  1478  028C  2A8B               	goto	u2247
  1479  028D  0BCA               	decfsz	??_main,f
  1480  028E  2A8B               	goto	u2247
  1481  028F  0BCB               	decfsz	??_main+1,f
  1482  0290  2A8B               	goto	u2247
  1483  0291  0000               	nop
  1484  0292                     l1954:	
  1485                           ;main.c: 340: while (PORTBbits.RB0 == 1 || PORTBbits.RB2 == 1 || PORTBbits.RB3 == 1 || P
      +                          ORTBbits.RB5 == 1 || PORTBbits.RB6 == 1 || PORTBbits.RB7 == 1) {
  1486                           
  1487  0292  0020               	movlb	0	; select bank0
  1488  0293  1C0D               	btfss	13,0	;volatile
  1489  0294  2A9F               	goto	l1956
  1490  0295                     l1952:	
  1491                           
  1492                           ;main.c: 341: _delay((unsigned long)((10)*(32000000/4000.0)));
  1493  0295  3068               	movlw	104
  1494  0296  0020               	movlb	0	; select bank0
  1495  0297  00CA               	movwf	??_main
  1496  0298  30E4               	movlw	228
  1497  0299                     u2257:	
  1498  0299  0B89               	decfsz	9,f
  1499  029A  2A99               	goto	u2257
  1500  029B  0BCA               	decfsz	??_main,f
  1501  029C  2A99               	goto	u2257
  1502  029D  0000               	nop
  1503  029E  2A92               	goto	l1954
  1504  029F                     l1956:	
  1505  029F  1D0D               	btfss	13,2	;volatile
  1506  02A0  198D               	btfsc	13,3	;volatile
  1507  02A1  2A95               	goto	l1952
  1508  02A2  1E8D               	btfss	13,5	;volatile
  1509  02A3  1B0D               	btfsc	13,6	;volatile
  1510  02A4  2A95               	goto	l1952
  1511  02A5  1B8D               	btfsc	13,7	;volatile
  1512  02A6  2A95               	goto	l1952
  1513                           
  1514                           ;main.c: 342: };main.c: 343: _delay((unsigned long)((100)*(32000000/4000.0)));
  1515  02A7  3005               	movlw	5
  1516  02A8  0020               	movlb	0	; select bank0
  1517  02A9  00CB               	movwf	??_main+1
  1518  02AA  300F               	movlw	15
  1519  02AB  00CA               	movwf	??_main
  1520  02AC  30F1               	movlw	241
  1521  02AD                     u2267:	
  1522  02AD  0B89               	decfsz	9,f
  1523  02AE  2AAD               	goto	u2267
  1524  02AF  0BCA               	decfsz	??_main,f
  1525  02B0  2AAD               	goto	u2267
  1526  02B1  0BCB               	decfsz	??_main+1,f
  1527  02B2  2AAD               	goto	u2267
  1528                           
  1529                           ;main.c: 344: if (middleSen == 1 && topSen == 1) {
  1530  02B3  0020               	movlb	0	; select bank0
  1531  02B4  0344               	decf	_middleSen,w	;volatile
  1532  02B5  1D03               	btfss	3,2
  1533  02B6  2AD7               	goto	l1974
  1534  02B7  0343               	decf	_topSen,w	;volatile
  1535  02B8  1D03               	btfss	3,2
  1536  02B9  2AD7               	goto	l1974
  1537                           
  1538                           ;main.c: 345: I2C_buffer.data.DWA++;
  1539  02BA  3001               	movlw	1
  1540  02BB  07AD               	addwf	_I2C_buffer+13,f	;volatile
  1541  02BC  3000               	movlw	0
  1542  02BD  3DAE               	addwfc	_I2C_buffer+14,f	;volatile
  1543  02BE  3000               	movlw	0
  1544  02BF  3DAF               	addwfc	_I2C_buffer+15,f	;volatile
  1545  02C0  3000               	movlw	0
  1546  02C1  3DB0               	addwfc	_I2C_buffer+16,f	;volatile
  1547                           
  1548                           ;main.c: 346: I2C_buffer.data.NWA = I2C_buffer.data.UPA - I2C_buffer.data.DWA;
  1549  02C2  082D               	movf	_I2C_buffer+13,w	;volatile
  1550  02C3  0229               	subwf	_I2C_buffer+9,w	;volatile
  1551  02C4  00CA               	movwf	??_main
  1552  02C5  082E               	movf	_I2C_buffer+14,w	;volatile
  1553  02C6  3B2A               	subwfb	_I2C_buffer+10,w	;volatile
  1554  02C7  00CB               	movwf	??_main+1
  1555  02C8  082F               	movf	_I2C_buffer+15,w	;volatile
  1556  02C9  3B2B               	subwfb	_I2C_buffer+11,w	;volatile
  1557  02CA  00CC               	movwf	??_main+2
  1558  02CB  0830               	movf	_I2C_buffer+16,w	;volatile
  1559  02CC  3B2C               	subwfb	_I2C_buffer+12,w	;volatile
  1560  02CD  00CD               	movwf	??_main+3
  1561  02CE  084D               	movf	??_main+3,w
  1562  02CF  00B4               	movwf	_I2C_buffer+20	;volatile
  1563  02D0  084C               	movf	??_main+2,w
  1564  02D1  00B3               	movwf	_I2C_buffer+19	;volatile
  1565  02D2  084B               	movf	??_main+1,w
  1566  02D3  00B2               	movwf	_I2C_buffer+18	;volatile
  1567  02D4  084A               	movf	??_main,w
  1568  02D5  00B1               	movwf	_I2C_buffer+17	;volatile
  1569                           
  1570                           ;main.c: 347: } else {
  1571  02D6  2AF9               	goto	l1982
  1572  02D7                     l1974:	
  1573                           
  1574                           ;main.c: 348: if (middleSen == 1 && topSen == 0) {
  1575  02D7  0344               	decf	_middleSen,w	;volatile
  1576  02D8  1D03               	btfss	3,2
  1577  02D9  2AF9               	goto	l1982
  1578  02DA  0843               	movf	_topSen,w	;volatile
  1579  02DB  1D03               	btfss	3,2
  1580  02DC  2AF9               	goto	l1982
  1581                           
  1582                           ;main.c: 349: I2C_buffer.data.DWK++;
  1583  02DD  3001               	movlw	1
  1584  02DE  07B9               	addwf	_I2C_buffer+25,f	;volatile
  1585  02DF  3000               	movlw	0
  1586  02E0  3DBA               	addwfc	_I2C_buffer+26,f	;volatile
  1587  02E1  3000               	movlw	0
  1588  02E2  3DBB               	addwfc	_I2C_buffer+27,f	;volatile
  1589  02E3  3000               	movlw	0
  1590  02E4  3DBC               	addwfc	_I2C_buffer+28,f	;volatile
  1591                           
  1592                           ;main.c: 350: I2C_buffer.data.NWK = I2C_buffer.data.UPK - I2C_buffer.data.DWK;
  1593  02E5  0839               	movf	_I2C_buffer+25,w	;volatile
  1594  02E6  0235               	subwf	_I2C_buffer+21,w	;volatile
  1595  02E7  00CA               	movwf	??_main
  1596  02E8  083A               	movf	_I2C_buffer+26,w	;volatile
  1597  02E9  3B36               	subwfb	_I2C_buffer+22,w	;volatile
  1598  02EA  00CB               	movwf	??_main+1
  1599  02EB  083B               	movf	_I2C_buffer+27,w	;volatile
  1600  02EC  3B37               	subwfb	_I2C_buffer+23,w	;volatile
  1601  02ED  00CC               	movwf	??_main+2
  1602  02EE  083C               	movf	_I2C_buffer+28,w	;volatile
  1603  02EF  3B38               	subwfb	_I2C_buffer+24,w	;volatile
  1604  02F0  00CD               	movwf	??_main+3
  1605  02F1  084D               	movf	??_main+3,w
  1606  02F2  00C0               	movwf	_I2C_buffer+32	;volatile
  1607  02F3  084C               	movf	??_main+2,w
  1608  02F4  00BF               	movwf	_I2C_buffer+31	;volatile
  1609  02F5  084B               	movf	??_main+1,w
  1610  02F6  00BE               	movwf	_I2C_buffer+30	;volatile
  1611  02F7  084A               	movf	??_main,w
  1612  02F8  00BD               	movwf	_I2C_buffer+29	;volatile
  1613  02F9                     l1982:	
  1614  02F9  0020               	movlb	0	; select bank0
  1615  02FA  1C0D               	btfss	13,0	;volatile
  1616  02FB  2B06               	goto	l1984
  1617  02FC                     l1980:	
  1618                           
  1619                           ;main.c: 354: _delay((unsigned long)((10)*(32000000/4000.0)));
  1620  02FC  3068               	movlw	104
  1621  02FD  0020               	movlb	0	; select bank0
  1622  02FE  00CA               	movwf	??_main
  1623  02FF  30E4               	movlw	228
  1624  0300                     u2277:	
  1625  0300  0B89               	decfsz	9,f
  1626  0301  2B00               	goto	u2277
  1627  0302  0BCA               	decfsz	??_main,f
  1628  0303  2B00               	goto	u2277
  1629  0304  0000               	nop
  1630  0305  2AF9               	goto	l1982
  1631  0306                     l1984:	
  1632  0306  1D0D               	btfss	13,2	;volatile
  1633  0307  198D               	btfsc	13,3	;volatile
  1634  0308  2AFC               	goto	l1980
  1635  0309  1E8D               	btfss	13,5	;volatile
  1636  030A  1B0D               	btfsc	13,6	;volatile
  1637  030B  2AFC               	goto	l1980
  1638  030C  1B8D               	btfsc	13,7	;volatile
  1639  030D  2AFC               	goto	l1980
  1640                           
  1641                           ;main.c: 355: };main.c: 356: triggerDW = 0;
  1642  030E  01F8               	clrf	_triggerDW	;volatile
  1643                           
  1644                           ;main.c: 357: middleSen = 0;
  1645  030F  01C4               	clrf	_middleSen	;volatile
  1646                           
  1647                           ;main.c: 358: topSen = 0;
  1648  0310  01C3               	clrf	_topSen	;volatile
  1649                           
  1650                           ;main.c: 359: IOCBF = 0;
  1651  0311  0027               	movlb	7	; select bank7
  1652  0312  0196               	clrf	22	;volatile
  1653  0313  2985               	goto	l1874
  1654  0314                     __end_of_main:	
  1655                           
  1656                           	psect	text1
  1657  0314                     __ptext1:	
  1658 ;; *************** function _init_I2C_buffer *****************
  1659 ;; Defined at:
  1660 ;;		line 213 in file "main.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, pclath, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : B1F/1
  1671 ;;		On exit  : 1F/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    3
  1681 ;; This function calls:
  1682 ;;		_eeprom_read
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _init_I2C_buffer
  1690  0314                     _init_I2C_buffer:	
  1691                           
  1692                           ;main.c: 214: I2C_buffer.data.ID = 0x03;
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _init_I2C_buffer: [wreg+status,2+status,0+pclath+cstack]
  1696  0314  3003               	movlw	3
  1697  0315  0020               	movlb	0	; select bank0
  1698  0316  00C9               	movwf	??_init_I2C_buffer
  1699  0317  0849               	movf	??_init_I2C_buffer,w
  1700  0318  00A0               	movwf	_I2C_buffer	;volatile
  1701                           
  1702                           ;main.c: 215: I2C_buffer.data.ADDRESS = eeprom_read(0);
  1703  0319  3000               	movlw	0
  1704  031A  3183  23C2  3183   	fcall	_eeprom_read
  1705  031D  0020               	movlb	0	; select bank0
  1706  031E  00C9               	movwf	??_init_I2C_buffer
  1707  031F  0849               	movf	??_init_I2C_buffer,w
  1708  0320  00A1               	movwf	_I2C_buffer+1	;volatile
  1709                           
  1710                           ;main.c: 216: I2C_buffer.data.SAVE = 0;
  1711  0321  01A2               	clrf	_I2C_buffer+2	;volatile
  1712                           
  1713                           ;main.c: 217: I2C_buffer.data.RESET = 0;
  1714  0322  01A3               	clrf	_I2C_buffer+3	;volatile
  1715                           
  1716                           ;main.c: 218: I2C_buffer.data.ENABLE = eeprom_read(1);
  1717  0323  3001               	movlw	1
  1718  0324  3183  23C2  3183   	fcall	_eeprom_read
  1719  0327  0020               	movlb	0	; select bank0
  1720  0328  00C9               	movwf	??_init_I2C_buffer
  1721  0329  0849               	movf	??_init_I2C_buffer,w
  1722  032A  00A4               	movwf	_I2C_buffer+4	;volatile
  1723                           
  1724                           ;main.c: 219: I2C_buffer.data.BUZZER = eeprom_read(2);
  1725  032B  3002               	movlw	2
  1726  032C  3183  23C2  3183   	fcall	_eeprom_read
  1727  032F  0020               	movlb	0	; select bank0
  1728  0330  00C9               	movwf	??_init_I2C_buffer
  1729  0331  0849               	movf	??_init_I2C_buffer,w
  1730  0332  00A5               	movwf	_I2C_buffer+5	;volatile
  1731                           
  1732                           ;main.c: 220: I2C_buffer.byte[0x06] = eeprom_read(3);
  1733  0333  3003               	movlw	3
  1734  0334  3183  23C2  3183   	fcall	_eeprom_read
  1735  0337  0020               	movlb	0	; select bank0
  1736  0338  00C9               	movwf	??_init_I2C_buffer
  1737  0339  0849               	movf	??_init_I2C_buffer,w
  1738  033A  00A6               	movwf	_I2C_buffer+6	;volatile
  1739                           
  1740                           ;main.c: 221: I2C_buffer.byte[0x07] = eeprom_read(4);
  1741  033B  3004               	movlw	4
  1742  033C  3183  23C2  3183   	fcall	_eeprom_read
  1743  033F  0020               	movlb	0	; select bank0
  1744  0340  00C9               	movwf	??_init_I2C_buffer
  1745  0341  0849               	movf	??_init_I2C_buffer,w
  1746  0342  00A7               	movwf	_I2C_buffer+7	;volatile
  1747                           
  1748                           ;main.c: 222: I2C_buffer.data.OBSTRUCT = 0;
  1749  0343  01A8               	clrf	_I2C_buffer+8	;volatile
  1750                           
  1751                           ;main.c: 223: I2C_buffer.data.UPA = 0;
  1752  0344  3000               	movlw	0
  1753  0345  00AC               	movwf	_I2C_buffer+12	;volatile
  1754  0346  3000               	movlw	0
  1755  0347  00AB               	movwf	_I2C_buffer+11	;volatile
  1756  0348  3000               	movlw	0
  1757  0349  00AA               	movwf	_I2C_buffer+10	;volatile
  1758  034A  3000               	movlw	0
  1759  034B  00A9               	movwf	_I2C_buffer+9	;volatile
  1760                           
  1761                           ;main.c: 224: I2C_buffer.data.DWA = 0;
  1762  034C  3000               	movlw	0
  1763  034D  00B0               	movwf	_I2C_buffer+16	;volatile
  1764  034E  3000               	movlw	0
  1765  034F  00AF               	movwf	_I2C_buffer+15	;volatile
  1766  0350  3000               	movlw	0
  1767  0351  00AE               	movwf	_I2C_buffer+14	;volatile
  1768  0352  3000               	movlw	0
  1769  0353  00AD               	movwf	_I2C_buffer+13	;volatile
  1770                           
  1771                           ;main.c: 225: I2C_buffer.data.NWA = 0;
  1772  0354  3000               	movlw	0
  1773  0355  00B4               	movwf	_I2C_buffer+20	;volatile
  1774  0356  3000               	movlw	0
  1775  0357  00B3               	movwf	_I2C_buffer+19	;volatile
  1776  0358  3000               	movlw	0
  1777  0359  00B2               	movwf	_I2C_buffer+18	;volatile
  1778  035A  3000               	movlw	0
  1779  035B  00B1               	movwf	_I2C_buffer+17	;volatile
  1780                           
  1781                           ;main.c: 226: I2C_buffer.data.UPA = 0;
  1782  035C  3000               	movlw	0
  1783  035D  00AC               	movwf	_I2C_buffer+12	;volatile
  1784  035E  3000               	movlw	0
  1785  035F  00AB               	movwf	_I2C_buffer+11	;volatile
  1786  0360  3000               	movlw	0
  1787  0361  00AA               	movwf	_I2C_buffer+10	;volatile
  1788  0362  3000               	movlw	0
  1789  0363  00A9               	movwf	_I2C_buffer+9	;volatile
  1790                           
  1791                           ;main.c: 227: I2C_buffer.data.DWA = 0;
  1792  0364  3000               	movlw	0
  1793  0365  00B0               	movwf	_I2C_buffer+16	;volatile
  1794  0366  3000               	movlw	0
  1795  0367  00AF               	movwf	_I2C_buffer+15	;volatile
  1796  0368  3000               	movlw	0
  1797  0369  00AE               	movwf	_I2C_buffer+14	;volatile
  1798  036A  3000               	movlw	0
  1799  036B  00AD               	movwf	_I2C_buffer+13	;volatile
  1800                           
  1801                           ;main.c: 228: I2C_buffer.data.NWA = 0;
  1802  036C  3000               	movlw	0
  1803  036D  00B4               	movwf	_I2C_buffer+20	;volatile
  1804  036E  3000               	movlw	0
  1805  036F  00B3               	movwf	_I2C_buffer+19	;volatile
  1806  0370  3000               	movlw	0
  1807  0371  00B2               	movwf	_I2C_buffer+18	;volatile
  1808  0372  3000               	movlw	0
  1809  0373  00B1               	movwf	_I2C_buffer+17	;volatile
  1810  0374  0008               	return
  1811  0375                     __end_of_init_I2C_buffer:	
  1812                           
  1813                           	psect	text2
  1814  03C2                     __ptext2:	
  1815 ;; *************** function _eeprom_read *****************
  1816 ;; Defined at:
  1817 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  addr            1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  addr            1    3[BANK0 ] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 1F/0
  1828 ;;		On exit  : 1F/3
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1833 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;Total ram usage:        4 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    2
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_init_I2C_buffer
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _eeprom_read
  1847  03C2                     _eeprom_read:	
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1851                           ;eeprom_read@addr stored from wreg
  1852  03C2  00C8               	movwf	eeprom_read@addr
  1853  03C3  2BC5               	goto	l346
  1854  03C4                     u891:	
  1855  03C4  0020               	movlb	0	; select bank0
  1856  03C5                     l346:	
  1857                           ;__eeread.c: 8: do
  1858                           
  1859  03C5  0064               	clrwdt	;# 
  1860                           
  1861                           ;__eeread.c: 12: while(EECON1bits.WR);
  1862  03C6  0023               	movlb	3	; select bank3
  1863  03C7  1895               	btfsc	21,1	;volsfr
  1864  03C8  2BC4               	goto	u891
  1865                           
  1866                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  1867  03C9  0020               	movlb	0	; select bank0
  1868  03CA  0848               	movf	eeprom_read@addr,w
  1869  03CB  00C5               	movwf	??_eeprom_read
  1870  03CC  01C6               	clrf	??_eeprom_read+1
  1871  03CD  0845               	movf	??_eeprom_read,w
  1872  03CE  0023               	movlb	3	; select bank3
  1873  03CF  0091               	movwf	17	;volatile
  1874  03D0  0020               	movlb	0	; select bank0
  1875  03D1  0846               	movf	??_eeprom_read+1,w
  1876  03D2  0023               	movlb	3	; select bank3
  1877  03D3  0092               	movwf	18	;volatile
  1878  03D4  303F               	movlw	63
  1879  03D5  0020               	movlb	0	; select bank0
  1880  03D6  00C7               	movwf	??_eeprom_read+2
  1881  03D7  0847               	movf	??_eeprom_read+2,w
  1882  03D8  0023               	movlb	3	; select bank3
  1883  03D9  0595               	andwf	21,f	;volsfr
  1884  03DA  1415               	bsf	21,0	;volsfr
  1885  03DB  0813               	movf	19,w	;volatile
  1886  03DC  0008               	return
  1887  03DD                     __end_of_eeprom_read:	
  1888                           
  1889                           	psect	text3
  1890  0375                     __ptext3:	
  1891 ;; *************** function _eeprom_write *****************
  1892 ;; Defined at:
  1893 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  addr            1    wreg     unsigned char 
  1896 ;;  value           1    0[BANK0 ] unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  addr            1    3[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 1F/0
  1905 ;;		On exit  : 1F/3
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1908 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;Total ram usage:        4 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    2
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function _eeprom_write
  1924  0375                     _eeprom_write:	
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1928                           ;eeprom_write@addr stored from wreg
  1929  0375  00C8               	movwf	eeprom_write@addr
  1930  0376                     l366:	
  1931                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  1932                           
  1933  0376  0023               	movlb	3	; select bank3
  1934  0377  1895               	btfsc	21,1	;volsfr
  1935  0378  2B76               	goto	l366
  1936  0379  0020               	movlb	0	; select bank0
  1937  037A  0848               	movf	eeprom_write@addr,w
  1938  037B  00C6               	movwf	??_eeprom_write
  1939  037C  01C7               	clrf	??_eeprom_write+1
  1940  037D  0846               	movf	??_eeprom_write,w
  1941  037E  0023               	movlb	3	; select bank3
  1942  037F  0091               	movwf	17	;volatile
  1943  0380  0020               	movlb	0	; select bank0
  1944  0381  0847               	movf	??_eeprom_write+1,w
  1945  0382  0023               	movlb	3	; select bank3
  1946  0383  0092               	movwf	18	;volatile
  1947  0384  0020               	movlb	0	; select bank0
  1948  0385  0845               	movf	eeprom_write@value,w
  1949  0386  0023               	movlb	3	; select bank3
  1950  0387  0093               	movwf	19	;volatile
  1951  0388  303F               	movlw	63
  1952  0389  0020               	movlb	0	; select bank0
  1953  038A  00C6               	movwf	??_eeprom_write
  1954  038B  0846               	movf	??_eeprom_write,w
  1955  038C  0023               	movlb	3	; select bank3
  1956  038D  0595               	andwf	21,f	;volsfr
  1957  038E  1003               	bcf	3,0	;volatile
  1958  038F  1B8B               	btfsc	11,7	;volatile
  1959  0390  1403               	bsf	3,0	;volatile
  1960  0391  138B               	bcf	11,7	;volatile
  1961  0392  1515               	bsf	21,2	;volsfr
  1962  0393  3055               	movlw	85
  1963  0394  0096               	movwf	22	;volsfr
  1964  0395  30AA               	movlw	170
  1965  0396  0096               	movwf	22	;volsfr
  1966  0397  1495               	bsf	21,1	;volsfr
  1967  0398  1115               	bcf	21,2	;volsfr
  1968  0399  1C03               	btfss	3,0	;volatile
  1969  039A  0008               	return
  1970  039B  178B               	bsf	11,7	;volatile
  1971  039C  0008               	return
  1972  039D                     __end_of_eeprom_write:	
  1973                           
  1974                           	psect	text4
  1975  039D                     __ptext4:	
  1976 ;; *************** function _PWM_set_duty *****************
  1977 ;; Defined at:
  1978 ;;		line 241 in file "main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  duty            2    0[BANK0 ] int 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2    0[BANK0 ] int 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 1F/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;Total ram usage:        4 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _PWM_set_duty
  2008  039D                     _PWM_set_duty:	
  2009                           
  2010                           ;main.c: 243: if (duty < 1024) {
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _PWM_set_duty: [wreg+status,2+status,0]
  2014  039D  0846               	movf	PWM_set_duty@duty+1,w
  2015  039E  3A80               	xorlw	128
  2016  039F  00C7               	movwf	??_PWM_set_duty
  2017  03A0  3084               	movlw	132
  2018  03A1  0247               	subwf	??_PWM_set_duty,w
  2019  03A2  1D03               	skipz
  2020  03A3  2BA6               	goto	u905
  2021  03A4  3000               	movlw	0
  2022  03A5  0245               	subwf	PWM_set_duty@duty,w
  2023  03A6                     u905:	
  2024  03A6  1803               	skipnc
  2025  03A7  0008               	return
  2026                           
  2027                           ;main.c: 244: CCPR2L = (0xFF & ((unsigned int) duty >> 2));
  2028  03A8  0020               	movlb	0	; select bank0
  2029  03A9  0846               	movf	PWM_set_duty@duty+1,w
  2030  03AA  00C8               	movwf	??_PWM_set_duty+1
  2031  03AB  0845               	movf	PWM_set_duty@duty,w
  2032  03AC  00C7               	movwf	??_PWM_set_duty
  2033  03AD  36C8               	lsrf	??_PWM_set_duty+1,f
  2034  03AE  0CC7               	rrf	??_PWM_set_duty,f
  2035  03AF  36C8               	lsrf	??_PWM_set_duty+1,f
  2036  03B0  0CC7               	rrf	??_PWM_set_duty,f
  2037  03B1  0847               	movf	??_PWM_set_duty,w
  2038  03B2  0025               	movlb	5	; select bank5
  2039  03B3  0098               	movwf	24	;volatile
  2040                           
  2041                           ;main.c: 245: CCP2CON = (0x0C | (0x30 & ((unsigned int) duty << 4)));
  2042  03B4  0020               	movlb	0	; select bank0
  2043  03B5  0845               	movf	PWM_set_duty@duty,w
  2044  03B6  00C7               	movwf	??_PWM_set_duty
  2045  03B7  3003               	movlw	3
  2046  03B8                     u915:	
  2047  03B8  35C7               	lslf	??_PWM_set_duty,f
  2048  03B9  3EFF               	addlw	-1
  2049  03BA  1D03               	skipz
  2050  03BB  2BB8               	goto	u915
  2051  03BC  3547               	lslf	??_PWM_set_duty,w
  2052  03BD  3930               	andlw	48
  2053  03BE  380C               	iorlw	12
  2054  03BF  0025               	movlb	5	; select bank5
  2055  03C0  009A               	movwf	26	;volatile
  2056  03C1  0008               	return
  2057  03C2                     __end_of_PWM_set_duty:	
  2058                           
  2059                           	psect	text5
  2060  03F8                     __ptext5:	
  2061 ;; *************** function _PWM_Init *****************
  2062 ;; Defined at:
  2063 ;;		line 231 in file "main.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2  152[None  ] int 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2
  2072 ;; Tracked objects:
  2073 ;;		On entry : 1F/1
  2074 ;;		On exit  : 1F/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    2
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _PWM_Init
  2093  03F8                     _PWM_Init:	
  2094                           
  2095                           ;main.c: 234: PR2 = 211;
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _PWM_Init: [wreg+status,2]
  2099  03F8  30D3               	movlw	211
  2100  03F9  0020               	movlb	0	; select bank0
  2101  03FA  009B               	movwf	27	;volatile
  2102                           
  2103                           ;main.c: 235: CCP2CON = 0b00001100;
  2104  03FB  300C               	movlw	12
  2105  03FC  0025               	movlb	5	; select bank5
  2106  03FD  009A               	movwf	26	;volatile
  2107                           
  2108                           ;main.c: 236: CCPR2L = 0b00000000;
  2109  03FE  0198               	clrf	24	;volatile
  2110                           
  2111                           ;main.c: 237: PIR1bits.TMR2IF = 0;
  2112  03FF  0020               	movlb	0	; select bank0
  2113  0400  1091               	bcf	17,1	;volatile
  2114                           
  2115                           ;main.c: 238: T2CON = 0b00000100;
  2116  0401  3004               	movlw	4
  2117  0402  009C               	movwf	28	;volatile
  2118  0403  0008               	return
  2119  0404                     __end_of_PWM_Init:	
  2120                           
  2121                           	psect	intentry
  2122  0004                     __pintentry:	
  2123 ;; *************** function _isr *****************
  2124 ;; Defined at:
  2125 ;;		line 81 in file "main.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 1F/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    1
  2146 ;; This function calls:
  2147 ;;		___wmul
  2148 ;; This function is called by:
  2149 ;;		Interrupt level 1
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153  0004                     _isr:	
  2154                           
  2155                           ;incstack = 0
  2156  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2157                           
  2158                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2159  0005  3180               	pagesel	$
  2160                           
  2161                           ;main.c: 83: if (INTCONbits.IOCIF == 1) {
  2162  0006  1C0B               	btfss	11,0	;volatile
  2163  0007  284D               	goto	i1l1482
  2164                           
  2165                           ;main.c: 84: INTCONbits.IOCIE = 0;
  2166  0008  118B               	bcf	11,3	;volatile
  2167                           
  2168                           ;main.c: 85: if (I2C_buffer.data.ENABLE == 1 && ignoreCount == 0) {
  2169  0009  0020               	movlb	0	; select bank0
  2170  000A  0324               	decf	_I2C_buffer+4,w	;volatile
  2171  000B  1D03               	btfss	3,2
  2172  000C  284A               	goto	i1l1478
  2173  000D  087B               	movf	_ignoreCount,w	;volatile
  2174  000E  1D03               	btfss	3,2
  2175  000F  284A               	goto	i1l1478
  2176                           
  2177                           ;main.c: 86: if (IOCBFbits.IOCBF0 == 1 && IOCBFbits.IOCBF7 == 0 && triggerDW == 0) {
  2178  0010  0027               	movlb	7	; select bank7
  2179  0011  1816               	btfsc	22,0	;volatile
  2180  0012  1B96               	btfsc	22,7	;volatile
  2181  0013  281C               	goto	i1l1436
  2182  0014  0878               	movf	_triggerDW,w	;volatile
  2183  0015  1D03               	btfss	3,2
  2184  0016  281C               	goto	i1l1436
  2185                           
  2186                           ;main.c: 87: triggerUP = 1;
  2187  0017  3001               	movlw	1
  2188  0018  00F6               	movwf	??_isr
  2189  0019  0876               	movf	??_isr,w
  2190  001A  00F9               	movwf	_triggerUP	;volatile
  2191                           
  2192                           ;main.c: 88: IOCBFbits.IOCBF0 = 0;
  2193  001B  1016               	bcf	22,0	;volatile
  2194  001C                     i1l1436:	
  2195                           
  2196                           ;main.c: 89: };main.c: 90: if (IOCBFbits.IOCBF7 == 1 && IOCBFbits.IOCBF0 == 0 && trigger
      +                          UP == 0) {
  2197  001C  1B96               	btfsc	22,7	;volatile
  2198  001D  1816               	btfsc	22,0	;volatile
  2199  001E  2827               	goto	i1l1446
  2200  001F  0879               	movf	_triggerUP,w	;volatile
  2201  0020  1D03               	btfss	3,2
  2202  0021  2827               	goto	i1l1446
  2203                           
  2204                           ;main.c: 91: triggerDW = 1;
  2205  0022  3001               	movlw	1
  2206  0023  00F6               	movwf	??_isr
  2207  0024  0876               	movf	??_isr,w
  2208  0025  00F8               	movwf	_triggerDW	;volatile
  2209                           
  2210                           ;main.c: 92: IOCBFbits.IOCBF7 = 0;
  2211  0026  1396               	bcf	22,7	;volatile
  2212  0027                     i1l1446:	
  2213                           
  2214                           ;main.c: 93: };main.c: 94: if ((IOCBFbits.IOCBF2 == 1 || IOCBFbits.IOCBF6 == 1) && (trig
      +                          gerUP == 1 || triggerDW == 1)) {
  2215  0027  1916               	btfsc	22,2	;volatile
  2216  0028  282B               	goto	i1l1450
  2217  0029  1F16               	btfss	22,6	;volatile
  2218  002A  2838               	goto	i1l1460
  2219  002B                     i1l1450:	
  2220  002B  0379               	decf	_triggerUP,w	;volatile
  2221  002C  1D03               	btfss	3,2
  2222  002D  0378               	decf	_triggerDW,w	;volatile
  2223  002E  1D03               	btfss	3,2
  2224  002F  2838               	goto	i1l1460
  2225                           
  2226                           ;main.c: 95: middleSen = 1;
  2227  0030  3001               	movlw	1
  2228  0031  00F6               	movwf	??_isr
  2229  0032  0876               	movf	??_isr,w
  2230  0033  0020               	movlb	0	; select bank0
  2231  0034  00C4               	movwf	_middleSen	;volatile
  2232                           
  2233                           ;main.c: 96: IOCBFbits.IOCBF2 = 0;
  2234  0035  0027               	movlb	7	; select bank7
  2235  0036  1116               	bcf	22,2	;volatile
  2236                           
  2237                           ;main.c: 97: IOCBFbits.IOCBF6 = 0;
  2238  0037  1316               	bcf	22,6	;volatile
  2239  0038                     i1l1460:	
  2240                           
  2241                           ;main.c: 98: };main.c: 99: if ((IOCBFbits.IOCBF3 == 1 || IOCBFbits.IOCBF5 == 1) && (trig
      +                          gerUP == 1 || triggerDW == 1)) {
  2242  0038  1996               	btfsc	22,3	;volatile
  2243  0039  283C               	goto	i1l1464
  2244  003A  1E96               	btfss	22,5	;volatile
  2245  003B  284B               	goto	L1
  2246  003C                     i1l1464:	
  2247  003C  0379               	decf	_triggerUP,w	;volatile
  2248  003D  1D03               	btfss	3,2
  2249  003E  0378               	decf	_triggerDW,w	;volatile
  2250  003F  1D03               	btfss	3,2
  2251  0040  284B               	goto	L1
  2252                           
  2253                           ;main.c: 100: topSen = 1;
  2254  0041  3001               	movlw	1
  2255  0042  00F6               	movwf	??_isr
  2256  0043  0876               	movf	??_isr,w
  2257  0044  0020               	movlb	0	; select bank0
  2258  0045  00C3               	movwf	_topSen	;volatile
  2259                           
  2260                           ;main.c: 101: IOCBFbits.IOCBF3 = 0;
  2261  0046  0027               	movlb	7	; select bank7
  2262  0047  1196               	bcf	22,3	;volatile
  2263                           
  2264                           ;main.c: 102: IOCBFbits.IOCBF5 = 0;
  2265  0048  1296               	bcf	22,5	;volatile
  2266  0049  284B               	goto	L1
  2267  004A                     i1l1478:	
  2268                           ;main.c: 106: } else {
  2269                           
  2270                           ;main.c: 105: INTCONbits.IOCIE = 1;
  2271                           
  2272                           ;main.c: 103: };main.c: 104: IOCBF = 0;
  2273                           
  2274                           
  2275                           ;main.c: 107: IOCBF = 0;
  2276  004A  0027               	movlb	7	; select bank7
  2277  004B                     L1:	
  2278  004B  0196               	clrf	22	;volatile
  2279                           
  2280                           ;main.c: 108: INTCONbits.IOCIE = 1;
  2281  004C  158B               	bsf	11,3	;volatile
  2282  004D                     i1l1482:	
  2283                           
  2284                           ;main.c: 109: };main.c: 110: };main.c: 112: if (PIR1bits.TMR1IF == 1)
  2285  004D  0020               	movlb	0	; select bank0
  2286  004E  1C11               	btfss	17,0	;volatile
  2287  004F  289A               	goto	i1l1532
  2288                           
  2289                           ;main.c: 113: {;main.c: 114: INTCONbits.IOCIE = 0;
  2290  0050  118B               	bcf	11,3	;volatile
  2291                           
  2292                           ;main.c: 115: T1CONbits.TMR1ON = 0;
  2293  0051  1018               	bcf	24,0	;volatile
  2294  0052  0064               	clrwdt	;# 
  2295                           
  2296                           ;main.c: 117: if (I2C_buffer.data.ENABLE == 1) {
  2297  0053  0020               	movlb	0	; select bank0
  2298  0054  0324               	decf	_I2C_buffer+4,w	;volatile
  2299  0055  1D03               	btfss	3,2
  2300  0056  288F               	goto	i1l1520
  2301                           
  2302                           ;main.c: 118: blockStop = 0;
  2303  0057  01CE               	clrf	_blockStop	;volatile
  2304                           
  2305                           ;main.c: 119: if (PORTBbits.RB0 == 1 || PORTBbits.RB2 == 1 || PORTBbits.RB3 == 1 || PORT
      +                          Bbits.RB5 == 1 || PORTBbits.RB6 == 1 || PORTBbits.RB7 == 1) {
  2306  0058  1C0D               	btfss	13,0	;volatile
  2307  0059  190D               	btfsc	13,2	;volatile
  2308  005A  2862               	goto	i1l1502
  2309  005B  1D8D               	btfss	13,3	;volatile
  2310  005C  1A8D               	btfsc	13,5	;volatile
  2311  005D  2862               	goto	i1l1502
  2312  005E  1B0D               	btfsc	13,6	;volatile
  2313  005F  2862               	goto	i1l1502
  2314  0060  1F8D               	btfss	13,7	;volatile
  2315  0061  2883               	goto	i1l1512
  2316  0062                     i1l1502:	
  2317                           
  2318                           ;main.c: 120: if (I2C_buffer.data.OBSTRUCT != 1) {
  2319  0062  0328               	decf	_I2C_buffer+8,w	;volatile
  2320  0063  1903               	btfsc	3,2
  2321  0064  2869               	goto	i1l1506
  2322                           
  2323                           ;main.c: 121: obstructHold++;
  2324  0065  3001               	movlw	1
  2325  0066  07C1               	addwf	_obstructHold,f	;volatile
  2326  0067  3000               	movlw	0
  2327  0068  3DC2               	addwfc	_obstructHold+1,f	;volatile
  2328  0069                     i1l1506:	
  2329                           
  2330                           ;main.c: 122: };main.c: 123: if ((obstructHold * 66) >= I2C_buffer.data.OBS_TIME) {
  2331  0069  0842               	movf	_obstructHold+1,w	;volatile
  2332  006A  00F1               	movwf	___wmul@multiplier+1
  2333  006B  0841               	movf	_obstructHold,w	;volatile
  2334  006C  00F0               	movwf	___wmul@multiplier
  2335  006D  3042               	movlw	66
  2336  006E  00F2               	movwf	___wmul@multiplicand
  2337  006F  3000               	movlw	0
  2338  0070  00F3               	movwf	___wmul@multiplicand+1
  2339  0071  3183  23DD  3180   	fcall	___wmul
  2340  0074  0827               	movf	_I2C_buffer+7,w	;volatile
  2341  0075  0271               	subwf	?___wmul+1,w
  2342  0076  1D03               	skipz
  2343  0077  287A               	goto	u125_25
  2344  0078  0826               	movf	_I2C_buffer+6,w	;volatile
  2345  0079  0270               	subwf	?___wmul,w
  2346  007A                     u125_25:	
  2347  007A  1C03               	skipc
  2348  007B  2881               	goto	i1l1510
  2349                           
  2350                           ;main.c: 124: I2C_buffer.data.OBSTRUCT = 1;
  2351  007C  3001               	movlw	1
  2352  007D  00F6               	movwf	??_isr
  2353  007E  0876               	movf	??_isr,w
  2354  007F  00A8               	movwf	_I2C_buffer+8	;volatile
  2355                           
  2356                           ;main.c: 125: } else {
  2357  0080  2886               	goto	i1l1514
  2358  0081                     i1l1510:	
  2359                           
  2360                           ;main.c: 126: I2C_buffer.data.OBSTRUCT = 0;
  2361  0081  01A8               	clrf	_I2C_buffer+8	;volatile
  2362  0082  2886               	goto	i1l1514
  2363  0083                     i1l1512:	
  2364                           
  2365                           ;main.c: 129: I2C_buffer.data.OBSTRUCT = 0;
  2366  0083  01A8               	clrf	_I2C_buffer+8	;volatile
  2367                           
  2368                           ;main.c: 130: obstructHold = 0;
  2369  0084  01C1               	clrf	_obstructHold	;volatile
  2370  0085  01C2               	clrf	_obstructHold+1	;volatile
  2371  0086                     i1l1514:	
  2372                           
  2373                           ;main.c: 131: };main.c: 132: if (I2C_buffer.data.OBSTRUCT == 1 && I2C_buffer.data.BUZZER
      +                           == 1) {
  2374  0086  0328               	decf	_I2C_buffer+8,w	;volatile
  2375  0087  1D03               	btfss	3,2
  2376  0088  2894               	goto	i1l1524
  2377  0089  0325               	decf	_I2C_buffer+5,w	;volatile
  2378  008A  1D03               	btfss	3,2
  2379  008B  2894               	goto	i1l1524
  2380                           
  2381                           ;main.c: 133: LATAbits.LATA6 = 1;
  2382  008C  0022               	movlb	2	; select bank2
  2383  008D  170C               	bsf	12,6	;volatile
  2384                           
  2385                           ;main.c: 134: } else {
  2386  008E  2896               	goto	i1l1526
  2387  008F                     i1l1520:	
  2388                           ;main.c: 135: LATAbits.LATA6 = 0;
  2389                           
  2390                           
  2391                           ;main.c: 138: blockStop = 1;
  2392  008F  3001               	movlw	1
  2393  0090  00F6               	movwf	??_isr
  2394  0091  0876               	movf	??_isr,w
  2395  0092  00CE               	movwf	_blockStop	;volatile
  2396                           
  2397                           ;main.c: 139: I2C_buffer.data.OBSTRUCT = 0;
  2398  0093  01A8               	clrf	_I2C_buffer+8	;volatile
  2399  0094                     i1l1524:	
  2400                           
  2401                           ;main.c: 140: LATAbits.LATA6 = 0;
  2402  0094  0022               	movlb	2	; select bank2
  2403  0095  130C               	bcf	12,6	;volatile
  2404  0096                     i1l1526:	
  2405                           
  2406                           ;main.c: 141: };main.c: 142: INTCONbits.IOCIE = 1;
  2407  0096  158B               	bsf	11,3	;volatile
  2408                           
  2409                           ;main.c: 143: PIR1bits.TMR1IF = 0;
  2410  0097  0020               	movlb	0	; select bank0
  2411  0098  1011               	bcf	17,0	;volatile
  2412                           
  2413                           ;main.c: 144: T1CONbits.TMR1ON = 1;
  2414  0099  1418               	bsf	24,0	;volatile
  2415  009A                     i1l1532:	
  2416                           
  2417                           ;main.c: 145: };main.c: 147: static unsigned char junk = 0;;main.c: 149: if (PIR1bits.SS
      +                          P1IF)
  2418  009A  1D91               	btfss	17,3	;volatile
  2419  009B  28F6               	goto	i1l1590
  2420                           
  2421                           ;main.c: 150: {;main.c: 151: INTCONbits.IOCIE = 0;
  2422  009C  118B               	bcf	11,3	;volatile
  2423                           
  2424                           ;main.c: 152: PIE1bits.TMR1IE = 0;
  2425  009D  0021               	movlb	1	; select bank1
  2426  009E  1011               	bcf	17,0	;volatile
  2427                           
  2428                           ;main.c: 153: if (SSP1STATbits.R_nW)
  2429  009F  0024               	movlb	4	; select bank4
  2430  00A0  1D14               	btfss	20,2	;volatile
  2431  00A1  28BC               	goto	i1l1552
  2432                           
  2433                           ;main.c: 154: {;main.c: 155: if (!SSP1STATbits.D_nA)
  2434  00A2  1A94               	btfsc	20,5	;volatile
  2435  00A3  28AF               	goto	i1l1544
  2436                           
  2437                           ;main.c: 156: {;main.c: 157: SSP1BUF = I2C_buffer.byte[index_i2c++];
  2438  00A4  087A               	movf	_index_i2c,w
  2439  00A5  3E20               	addlw	(low (_I2C_buffer| 0))& (0+255)
  2440  00A6  0086               	movwf	6
  2441  00A7  0187               	clrf	7
  2442  00A8  0801               	movf	1,w
  2443  00A9  0091               	movwf	17	;volatile
  2444  00AA  3001               	movlw	1
  2445  00AB  00F6               	movwf	??_isr
  2446  00AC  0876               	movf	??_isr,w
  2447  00AD  07FA               	addwf	_index_i2c,f	;volatile
  2448                           
  2449                           ;main.c: 158: SSP1CON1bits.CKP = 1;
  2450  00AE  1615               	bsf	21,4	;volatile
  2451  00AF                     i1l1544:	
  2452                           
  2453                           ;main.c: 159: };main.c: 160: if (SSP1STATbits.D_nA)
  2454  00AF  1E94               	btfss	20,5	;volatile
  2455  00B0  28BC               	goto	i1l1552
  2456                           
  2457                           ;main.c: 161: {;main.c: 162: SSP1BUF = I2C_buffer.byte[index_i2c++];
  2458  00B1  087A               	movf	_index_i2c,w
  2459  00B2  3E20               	addlw	(low (_I2C_buffer| 0))& (0+255)
  2460  00B3  0086               	movwf	6
  2461  00B4  0187               	clrf	7
  2462  00B5  0801               	movf	1,w
  2463  00B6  0091               	movwf	17	;volatile
  2464  00B7  3001               	movlw	1
  2465  00B8  00F6               	movwf	??_isr
  2466  00B9  0876               	movf	??_isr,w
  2467  00BA  07FA               	addwf	_index_i2c,f	;volatile
  2468                           
  2469                           ;main.c: 163: SSP1CON1bits.CKP = 1;
  2470  00BB  1615               	bsf	21,4	;volatile
  2471  00BC                     i1l1552:	
  2472                           
  2473                           ;main.c: 164: };main.c: 165: };main.c: 166: if (!SSP1STATbits.R_nW)
  2474  00BC  1914               	btfsc	20,2	;volatile
  2475  00BD  28F1               	goto	i1l1584
  2476                           
  2477                           ;main.c: 167: {;main.c: 168: if (!SSP1STATbits.D_nA)
  2478  00BE  1A94               	btfsc	20,5	;volatile
  2479  00BF  28C9               	goto	i1l1560
  2480                           
  2481                           ;main.c: 169: {;main.c: 170: first_i2c = 1;
  2482  00C0  3001               	movlw	1
  2483  00C1  00F6               	movwf	??_isr
  2484  00C2  0876               	movf	??_isr,w
  2485  00C3  00FC               	movwf	_first_i2c	;volatile
  2486                           
  2487                           ;main.c: 171: junk = SSP1BUF;
  2488  00C4  0811               	movf	17,w	;volatile
  2489  00C5  00F6               	movwf	??_isr
  2490  00C6  0876               	movf	??_isr,w
  2491  00C7  00F7               	movwf	isr@junk
  2492                           
  2493                           ;main.c: 172: SSP1CON1bits.CKP = 1;
  2494  00C8  1615               	bsf	21,4	;volatile
  2495  00C9                     i1l1560:	
  2496                           
  2497                           ;main.c: 173: };main.c: 174: if (SSP1STATbits.D_nA)
  2498  00C9  1E94               	btfss	20,5	;volatile
  2499  00CA  28F1               	goto	i1l1584
  2500                           
  2501                           ;main.c: 175: {;main.c: 176: if (first_i2c) {
  2502  00CB  087C               	movf	_first_i2c,w	;volatile
  2503  00CC  1903               	btfsc	3,2
  2504  00CD  28D4               	goto	i1l1568
  2505                           
  2506                           ;main.c: 177: index_i2c = SSP1BUF;
  2507  00CE  0811               	movf	17,w	;volatile
  2508  00CF  00F6               	movwf	??_isr
  2509  00D0  0876               	movf	??_isr,w
  2510  00D1  00FA               	movwf	_index_i2c	;volatile
  2511                           
  2512                           ;main.c: 178: first_i2c = 0;
  2513  00D2  01FC               	clrf	_first_i2c	;volatile
  2514                           
  2515                           ;main.c: 179: }
  2516  00D3  28E9               	goto	i1l1576
  2517  00D4                     i1l1568:	
  2518                           
  2519                           ;main.c: 181: else {;main.c: 182: if (index_i2c < RX_ELMNTS)
  2520  00D4  3021               	movlw	33
  2521  00D5  027A               	subwf	_index_i2c,w	;volatile
  2522  00D6  1803               	skipnc
  2523  00D7  28E5               	goto	i1l1574
  2524                           
  2525                           ;main.c: 183: {;main.c: 184: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  2526  00D8  0811               	movf	17,w	;volatile
  2527  00D9  00F6               	movwf	??_isr
  2528  00DA  087A               	movf	_index_i2c,w
  2529  00DB  3E20               	addlw	(low (_I2C_buffer| 0))& (0+255)
  2530  00DC  0086               	movwf	6
  2531  00DD  0187               	clrf	7
  2532  00DE  0876               	movf	??_isr,w
  2533  00DF  0081               	movwf	1
  2534  00E0  3001               	movlw	1
  2535  00E1  00F6               	movwf	??_isr
  2536  00E2  0876               	movf	??_isr,w
  2537  00E3  07FA               	addwf	_index_i2c,f	;volatile
  2538                           
  2539                           ;main.c: 185: } else {
  2540  00E4  28E9               	goto	i1l1576
  2541  00E5                     i1l1574:	
  2542                           
  2543                           ;main.c: 186: junk = SSP1BUF;
  2544  00E5  0811               	movf	17,w	;volatile
  2545  00E6  00F6               	movwf	??_isr
  2546  00E7  0876               	movf	??_isr,w
  2547  00E8  00F7               	movwf	isr@junk
  2548  00E9                     i1l1576:	
  2549                           
  2550                           ;main.c: 187: };main.c: 188: };main.c: 189: if (SSP1CON1bits.WCOL)
  2551  00E9  1F95               	btfss	21,7	;volatile
  2552  00EA  28F0               	goto	i1l1582
  2553                           
  2554                           ;main.c: 190: {;main.c: 191: SSP1CON1bits.WCOL = 0;
  2555  00EB  1395               	bcf	21,7	;volatile
  2556                           
  2557                           ;main.c: 192: junk = SSP1BUF;
  2558  00EC  0811               	movf	17,w	;volatile
  2559  00ED  00F6               	movwf	??_isr
  2560  00EE  0876               	movf	??_isr,w
  2561  00EF  00F7               	movwf	isr@junk
  2562  00F0                     i1l1582:	
  2563                           
  2564                           ;main.c: 193: };main.c: 194: SSP1CON1bits.CKP = 1;
  2565  00F0  1615               	bsf	21,4	;volatile
  2566  00F1                     i1l1584:	
  2567                           
  2568                           ;main.c: 195: };main.c: 196: };main.c: 197: PIR1bits.SSP1IF = 0;
  2569  00F1  0020               	movlb	0	; select bank0
  2570  00F2  1191               	bcf	17,3	;volatile
  2571                           
  2572                           ;main.c: 198: INTCONbits.IOCIE = 1;
  2573  00F3  158B               	bsf	11,3	;volatile
  2574                           
  2575                           ;main.c: 199: PIE1bits.TMR1IE = 1;
  2576  00F4  0021               	movlb	1	; select bank1
  2577  00F5  1411               	bsf	17,0	;volatile
  2578  00F6                     i1l1590:	
  2579                           
  2580                           ;main.c: 200: };main.c: 202: if (PIR2bits.BCL1IF)
  2581  00F6  0020               	movlb	0	; select bank0
  2582  00F7  1D92               	btfss	18,3	;volatile
  2583  00F8  2904               	goto	i1l147
  2584                           
  2585                           ;main.c: 203: {;main.c: 204: junk = SSP1BUF;
  2586  00F9  0024               	movlb	4	; select bank4
  2587  00FA  0811               	movf	17,w	;volatile
  2588  00FB  00F6               	movwf	??_isr
  2589  00FC  0876               	movf	??_isr,w
  2590  00FD  00F7               	movwf	isr@junk
  2591                           
  2592                           ;main.c: 205: PIR2bits.BCL1IF = 0;
  2593  00FE  0020               	movlb	0	; select bank0
  2594  00FF  1192               	bcf	18,3	;volatile
  2595                           
  2596                           ;main.c: 206: SSP1CON1bits.CKP = 1;
  2597  0100  0024               	movlb	4	; select bank4
  2598  0101  1615               	bsf	21,4	;volatile
  2599                           
  2600                           ;main.c: 207: PIR1bits.SSP1IF = 0;
  2601  0102  0020               	movlb	0	; select bank0
  2602  0103  1191               	bcf	17,3	;volatile
  2603  0104                     i1l147:	
  2604  0104  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2605  0105  0009               	retfie
  2606  0106                     __end_of_isr:	
  2607                           
  2608                           	psect	text7
  2609  03DD                     __ptext7:	
  2610 ;; *************** function ___wmul *****************
  2611 ;; Defined at:
  2612 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  multiplier      2    0[COMMON] unsigned int 
  2615 ;;  multiplicand    2    2[COMMON] unsigned int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  product         2    4[COMMON] unsigned int 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  2    0[COMMON] unsigned int 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0
  2622 ;; Tracked objects:
  2623 ;;		On entry : 1F/0
  2624 ;;		On exit  : 1F/0
  2625 ;;		Unchanged: 1F/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;Total ram usage:        6 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_isr
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           
  2641                           ;psect for function ___wmul
  2642  03DD                     ___wmul:	
  2643                           
  2644                           ;incstack = 0
  2645                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2646  03DD  01F4               	clrf	___wmul@product
  2647  03DE  01F5               	clrf	___wmul@product+1
  2648  03DF                     i1l1406:	
  2649  03DF  1C70               	btfss	___wmul@multiplier,0
  2650  03E0  2BE5               	goto	i1l376
  2651  03E1  0872               	movf	___wmul@multiplicand,w
  2652  03E2  07F4               	addwf	___wmul@product,f
  2653  03E3  0873               	movf	___wmul@multiplicand+1,w
  2654  03E4  3DF5               	addwfc	___wmul@product+1,f
  2655  03E5                     i1l376:	
  2656  03E5  3001               	movlw	1
  2657  03E6                     u96_25:	
  2658  03E6  35F2               	lslf	___wmul@multiplicand,f
  2659  03E7  0DF3               	rlf	___wmul@multiplicand+1,f
  2660  03E8  0B89               	decfsz	9,f
  2661  03E9  2BE6               	goto	u96_25
  2662  03EA  3001               	movlw	1
  2663  03EB                     u97_25:	
  2664  03EB  36F1               	lsrf	___wmul@multiplier+1,f
  2665  03EC  0CF0               	rrf	___wmul@multiplier,f
  2666  03ED  0B89               	decfsz	9,f
  2667  03EE  2BEB               	goto	u97_25
  2668  03EF  0870               	movf	___wmul@multiplier,w
  2669  03F0  0471               	iorwf	___wmul@multiplier+1,w
  2670  03F1  1D03               	btfss	3,2
  2671  03F2  2BDF               	goto	i1l1406
  2672  03F3  0875               	movf	___wmul@product+1,w
  2673  03F4  00F1               	movwf	?___wmul+1
  2674  03F5  0874               	movf	___wmul@product,w
  2675  03F6  00F0               	movwf	?___wmul
  2676  03F7  0008               	return
  2677  03F8                     __end_of___wmul:	
  2678  007E                     btemp	set	126	;btemp
  2679  007E                     int$flags	set	126
  2680  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        3
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      9      47
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul

Critical Paths under _main in BANK0

    _main->_init_I2C_buffer
    _init_I2C_buffer->_eeprom_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     740
                                              5 BANK0      4     4      0
                           _PWM_Init
                       _PWM_set_duty
                       _eeprom_write
                    _init_I2C_buffer
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      1     1      0      22
                                              4 BANK0      1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      22
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         4     3      1     424
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _PWM_set_duty                                         4     2      2     294
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0     244
                                              6 COMMON     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Init
   _PWM_set_duty
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read

 _isr (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      2F       5       58.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 17:02:30 2020

             __CFG_CP$OFF 0000       ___wmul@multiplicand 0072                       l346 03C5  
                     l366 0376                       _PR2 001B              __CFG_CPD$OFF 0000  
                     u905 03A6                       u915 03B8                       u891 03C4  
                     _isr 0004              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      l1900 01F1                      l1904 0204  
                    l1906 0201                      l1932 026B                      l1908 020E  
                    l1934 0268                      l1926 0246                      l1952 0295  
                    l1936 0275                      l1954 0292                      l1882 01A1  
                    l1874 0185                      l1980 02FC                      l1956 029F  
                    l1948 0282                      l1982 02F9                      l1974 02D7  
                    l1984 0306                      l1888 01B2                      ?_isr 0070  
            __CFG_WDTE$ON 0000                      u2207 01FA                      u2217 0208  
                    u2227 021C                      u2237 026F                      u2157 016D  
                    u2247 028B                      u2167 017B                      u2257 0299  
                    u2177 0194                      u2267 02AD                      u2187 01AC  
                    u2277 0300                      u2197 01EA                      _WPUA 020C  
                    _WPUB 020D            ??_eeprom_write 0046              __CFG_WRT$OFF 0000  
                    _main 0123                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0106             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
                   ??_isr 0076             __CFG_PLLEN$ON 0000     __size_of_PWM_set_duty 0025  
                   ?_main 0070                     _EEADR 0191                     _T1CON 0018  
                   _T2CON 001C                     _IOCBF 0396                     _IOCBP 0394  
                   i1l147 0104                     i1l376 03E5                     _PORTA 000C  
                   _PORTB 000D                     _TRISA 008C                     _TRISB 008D  
                   u96_25 03E6                     u97_25 03EB             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000          __end_of_PWM_Init 0404                     status 0003  
                   wtemp0 007E              _PWM_set_duty 039D           __initialization 0108  
            __end_of_main 0314                    ??_main 004A                    _EEDATA 0193  
                  _CCPR2L 0298                    _EECON1 0195                    _EECON2 0196  
                  _ANSELA 018C                    _ANSELB 018D                    i1l1406 03DF  
                  i1l1510 0081                    i1l1502 0062                    i1l1512 0083  
                  i1l1520 008F                    i1l1514 0086                    i1l1506 0069  
                  i1l1450 002B                    i1l1524 0094                    i1l1532 009A  
                  i1l1460 0038                    i1l1436 001C                    i1l1526 0096  
                  i1l1446 0027                    i1l1560 00C9                    i1l1544 00AF  
                  i1l1552 00BC                    i1l1464 003C                    i1l1482 004D  
                  i1l1582 00F0                    i1l1574 00E5                    i1l1590 00F6  
                  i1l1478 004A                    i1l1576 00E9                    i1l1568 00D4  
                  i1l1584 00F1                    u125_25 007A                    _INTCON 000B  
                  _OSCCON 0099      __size_of_eeprom_read 001B                    ___wmul 03DD  
          __CFG_STVREN$ON 0000      __end_of_eeprom_write 039D                    _topSen 0043  
__size_of_init_I2C_buffer 0061              __pdataCOMMON 007B         __end_of_RX_ELMNTS 040E  
 __end_of__initialization 011F           eeprom_read@addr 0048            __pcstackCOMMON 0070  
            __pidataBANK0 040C                 ?_PWM_Init 0070            _OPTION_REGbits 0095  
       eeprom_write@value 0045                __pbssBANK0 0020                __pmaintext 0123  
                 ?___wmul 0070                __pintentry 0004                   _CCP2CON 029A  
              ??_PWM_Init 0045                   _SSP1ADD 0212                   _SSP1BUF 0211  
       ??_init_I2C_buffer 0049          PWM_set_duty@duty 0045     __size_of_eeprom_write 0028  
         __size_of___wmul 001B                   __ptext1 0314                   __ptext2 03C2  
                 __ptext3 0375                   __ptext4 039D                   __ptext5 03F8  
                 __ptext7 03DD                 _T1CONbits 0018              __size_of_isr 0102  
               _IOCBFbits 0396                   clrloop0 0405      end_of_initialization 011F  
                 isr@junk 0077              _eeprom_write 0375                 _PORTBbits 000D  
        __CFG_FOSC$INTOSC 0000                 _RX_ELMNTS 040D             ??_eeprom_read 0045  
          __end_of___wmul 03F8             __pidataCOMMON 040A         __size_of_PWM_Init 000C  
     start_initialization 0108               __end_of_isr 0106               _APFCON0bits 011D  
                ??___wmul 0074       __end_of_eeprom_read 03DD               __pdataBANK0 004E  
         _init_I2C_buffer 0314               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0045          eeprom_write@addr 0048             ?_PWM_set_duty 0045  
               _blockStop 004E                 _first_i2c 007C                 _index_i2c 007A  
               _middleSen 0044            ___wmul@product 0074                  _LATAbits 010C  
               clear_ram0 0404               _eeprom_read 03C2                  _PIE1bits 0091  
                _PIE2bits 0092            ??_PWM_set_duty 0047                  _PIR1bits 0011  
                _PIR2bits 0012   __end_of_init_I2C_buffer 0375                  _SSP1CON1 0215  
                _SSP1STAT 0214                  _PWM_Init 03F8         ___wmul@multiplier 0070  
               _triggerDW 0078                 _triggerUP 0079              _obstructHold 0041  
             _ignoreCount 007B                _I2C_buffer 0020                _EECON1bits 0195  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216              _SSP1CON3bits 0217  
           __size_of_main 01F1          ?_init_I2C_buffer 0070                  int$flags 007E  
            _SSP1STATbits 0214                _INTCONbits 000B      __end_of_PWM_set_duty 03C2  
                intlevel1 0000         __CFG_CLKOUTEN$OFF 0000             __pstringtext1 040D  
           ?_eeprom_write 0045                _STATUSbits 0003              ?_eeprom_read 0070  
