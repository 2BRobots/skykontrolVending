

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jun 18 14:13:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x620,48
    28                           	dabs	1,0x5A0,80
    29                           	dabs	1,0x520,80
    30                           	dabs	1,0x4C5,43
    31                           	dabs	1,0x22F5,0,_I2C_buffer
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F1847 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  011E                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0219                     	;# 
   169  021A                     	;# 
   170  021B                     	;# 
   171  021C                     	;# 
   172  021D                     	;# 
   173  021E                     	;# 
   174  021F                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0298                     	;# 
   184  0298                     	;# 
   185  0299                     	;# 
   186  029A                     	;# 
   187  029B                     	;# 
   188  029C                     	;# 
   189  029C                     	;# 
   190  029D                     	;# 
   191  029E                     	;# 
   192  029E                     	;# 
   193  0311                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  039A                     	;# 
   205  039C                     	;# 
   206  039D                     	;# 
   207  039E                     	;# 
   208  039F                     	;# 
   209  0415                     	;# 
   210  0416                     	;# 
   211  0417                     	;# 
   212  041C                     	;# 
   213  041D                     	;# 
   214  041E                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226                           
   227                           	psect	eeprom_data
   228  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   229  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   230  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   231  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   232  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   233  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   234  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   235  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   236  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   237  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   238  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   239  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   240  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   241  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   242  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   243  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   244  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   245  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   246  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   247  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   248  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   249  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   250  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   251  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   252  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   253  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   254  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   255  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   256  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0006                     	;# 
   264  0007                     	;# 
   265  0008                     	;# 
   266  0009                     	;# 
   267  000A                     	;# 
   268  000B                     	;# 
   269  000C                     	;# 
   270  000D                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  0111                     	;# 
   306  0112                     	;# 
   307  0113                     	;# 
   308  0114                     	;# 
   309  0115                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  0118                     	;# 
   313  0119                     	;# 
   314  011A                     	;# 
   315  011B                     	;# 
   316  011D                     	;# 
   317  011E                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019C                     	;# 
   336  019C                     	;# 
   337  019D                     	;# 
   338  019E                     	;# 
   339  019F                     	;# 
   340  020C                     	;# 
   341  020D                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0219                     	;# 
   358  021A                     	;# 
   359  021B                     	;# 
   360  021C                     	;# 
   361  021D                     	;# 
   362  021E                     	;# 
   363  021F                     	;# 
   364  0291                     	;# 
   365  0291                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0294                     	;# 
   369  0295                     	;# 
   370  0295                     	;# 
   371  0296                     	;# 
   372  0298                     	;# 
   373  0298                     	;# 
   374  0299                     	;# 
   375  029A                     	;# 
   376  029B                     	;# 
   377  029C                     	;# 
   378  029C                     	;# 
   379  029D                     	;# 
   380  029E                     	;# 
   381  029E                     	;# 
   382  0311                     	;# 
   383  0311                     	;# 
   384  0312                     	;# 
   385  0313                     	;# 
   386  0318                     	;# 
   387  0318                     	;# 
   388  0319                     	;# 
   389  031A                     	;# 
   390  0394                     	;# 
   391  0395                     	;# 
   392  0396                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0415                     	;# 
   399  0416                     	;# 
   400  0417                     	;# 
   401  041C                     	;# 
   402  041D                     	;# 
   403  041E                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0113                     	;# 
   466  0114                     	;# 
   467  0115                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  0118                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011D                     	;# 
   475  011E                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  0191                     	;# 
   479  0191                     	;# 
   480  0192                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0194                     	;# 
   485  0195                     	;# 
   486  0196                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019D                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  020C                     	;# 
   499  020D                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0216                     	;# 
   512  0216                     	;# 
   513  0217                     	;# 
   514  0217                     	;# 
   515  0219                     	;# 
   516  021A                     	;# 
   517  021B                     	;# 
   518  021C                     	;# 
   519  021D                     	;# 
   520  021E                     	;# 
   521  021F                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0298                     	;# 
   531  0298                     	;# 
   532  0299                     	;# 
   533  029A                     	;# 
   534  029B                     	;# 
   535  029C                     	;# 
   536  029C                     	;# 
   537  029D                     	;# 
   538  029E                     	;# 
   539  029E                     	;# 
   540  0311                     	;# 
   541  0311                     	;# 
   542  0312                     	;# 
   543  0313                     	;# 
   544  0318                     	;# 
   545  0318                     	;# 
   546  0319                     	;# 
   547  031A                     	;# 
   548  0394                     	;# 
   549  0395                     	;# 
   550  0396                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  0111                     	;# 
   622  0112                     	;# 
   623  0113                     	;# 
   624  0114                     	;# 
   625  0115                     	;# 
   626  0116                     	;# 
   627  0117                     	;# 
   628  0118                     	;# 
   629  0119                     	;# 
   630  011A                     	;# 
   631  011B                     	;# 
   632  011D                     	;# 
   633  011E                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0194                     	;# 
   643  0195                     	;# 
   644  0196                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019F                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  0219                     	;# 
   674  021A                     	;# 
   675  021B                     	;# 
   676  021C                     	;# 
   677  021D                     	;# 
   678  021E                     	;# 
   679  021F                     	;# 
   680  0291                     	;# 
   681  0291                     	;# 
   682  0292                     	;# 
   683  0293                     	;# 
   684  0294                     	;# 
   685  0295                     	;# 
   686  0295                     	;# 
   687  0296                     	;# 
   688  0298                     	;# 
   689  0298                     	;# 
   690  0299                     	;# 
   691  029A                     	;# 
   692  029B                     	;# 
   693  029C                     	;# 
   694  029C                     	;# 
   695  029D                     	;# 
   696  029E                     	;# 
   697  029E                     	;# 
   698  0311                     	;# 
   699  0311                     	;# 
   700  0312                     	;# 
   701  0313                     	;# 
   702  0318                     	;# 
   703  0318                     	;# 
   704  0319                     	;# 
   705  031A                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  039A                     	;# 
   710  039C                     	;# 
   711  039D                     	;# 
   712  039E                     	;# 
   713  039F                     	;# 
   714  0415                     	;# 
   715  0416                     	;# 
   716  0417                     	;# 
   717  041C                     	;# 
   718  041D                     	;# 
   719  041E                     	;# 
   720  0FE4                     	;# 
   721  0FE5                     	;# 
   722  0FE6                     	;# 
   723  0FE7                     	;# 
   724  0FE8                     	;# 
   725  0FE9                     	;# 
   726  0FEA                     	;# 
   727  0FEB                     	;# 
   728  0FED                     	;# 
   729  0FEE                     	;# 
   730  0FEF                     	;_I2C_buffer
   731                           
   732                           	psect	idataCOMMON
   733  07FA                     __pidataCOMMON:
   734                           
   735                           ;initializer for _first_i2c
   736  07FA  3401               	retlw	1
   737                           
   738                           	psect	stringtext1
   739  1000                     __pstringtext1:
   740  1000                     _RX_ELMNTS:
   741  1000  34FB               	retlw	251
   742  1001                     __end_of_RX_ELMNTS:
   743  0003                     _STATUSbits	set	3
   744  0018                     _T1CON	set	24
   745  000B                     _INTCON	set	11
   746  0012                     _PIR2bits	set	18
   747  0018                     _T1CONbits	set	24
   748  0011                     _PIR1bits	set	17
   749  000D                     _PORTBbits	set	13
   750  000B                     _INTCONbits	set	11
   751  0092                     _PIE2bits	set	146
   752  008D                     _TRISB	set	141
   753  008C                     _TRISA	set	140
   754  009E                     _ADCON1	set	158
   755  0095                     _OPTION_REGbits	set	149
   756  0099                     _OSCCON	set	153
   757  0091                     _PIE1bits	set	145
   758  009B                     _ADRESL	set	155
   759  009C                     _ADRESH	set	156
   760  009D                     _ADCON0bits	set	157
   761  009D                     _ADCON0	set	157
   762  010D                     _LATBbits	set	269
   763  010C                     _LATAbits	set	268
   764  010D                     _LATB	set	269
   765  010C                     _LATA	set	268
   766  0191                     _EEADR	set	401
   767  0196                     _EECON2	set	406
   768  0193                     _EEDATA	set	403
   769  0195                     _EECON1	set	405
   770  0195                     _EECON1bits	set	405
   771  018D                     _ANSELB	set	397
   772  018C                     _ANSELA	set	396
   773  0212                     _SSP1ADD	set	530
   774  0217                     _SSP1CON3bits	set	535
   775  0216                     _SSP1CON2bits	set	534
   776  0215                     _SSP1CON1	set	533
   777  0214                     _SSP1STAT	set	532
   778  020D                     _WPUB	set	525
   779  020C                     _WPUA	set	524
   780  0215                     _SSP1CON1bits	set	533
   781  0211                     _SSP1BUF	set	529
   782  0214                     _SSP1STATbits	set	532
   783  0395                     _IOCBN	set	917
   784  0396                     _IOCBF	set	918
   785  0396                     _IOCBFbits	set	918
   786                           
   787                           	psect	cinit
   788  014F                     start_initialization:	
   789                           ; #config settings
   790                           
   791  014F                     __initialization:	;BIGRAM
   792                           
   793                           ; Initialize objects allocated to COMMON
   794  014F  3187  27FA  3181   	fcall	__pidataCOMMON	;fetch initializer
   795  0152  00FB               	movwf	__pdataCOMMON& (0+127)
   796                           
   797                           ; Clear objects allocated to BIGRAM
   798  0153  30F5               	movlw	low (0+8949)
   799  0154  0084               	movwf	4
   800  0155  3022               	movlw	high (0+8949)
   801  0156  0085               	movwf	5
   802  0157  30FB               	movlw	251
   803  0158  00FE               	movwf	btemp
   804  0159  3000               	movlw	0
   805  015A  00FF               	movwf	btemp+1
   806  015B  318E  26D7         	fcall	clear_ram0
   807                           
   808                           ; Clear objects allocated to COMMON
   809  015D  01F9               	clrf	__pbssCOMMON& (0+127)
   810  015E  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   811                           
   812                           ; Clear objects allocated to BANK0
   813  015F  01E7               	clrf	__pbssBANK0& (0+127)
   814  0160  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   815  0161  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   816  0162  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   817  0163  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   818  0164  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   819  0165  01ED               	clrf	(__pbssBANK0+6)& (0+127)
   820  0166  01EE               	clrf	(__pbssBANK0+7)& (0+127)
   821                           
   822                           ; Clear objects allocated to BANK1
   823  0167  0021               	movlb	1	; select bank1
   824  0168  01A4               	clrf	__pbssBANK1& (0+127)
   825  0169  01A5               	clrf	(__pbssBANK1+1)& (0+127)
   826  016A                     end_of_initialization:	
   827                           ;End of C runtime variable initialization code
   828                           
   829  016A                     __end_of__initialization:
   830  016A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   831  016B  0020               	movlb	0
   832  016C  3181  296E         	ljmp	_main	;jump to C main() function
   833                           
   834                           	psect	bssCOMMON
   835  0079                     __pbssCOMMON:
   836  0079                     isr@junk:
   837  0079                     	ds	1
   838  007A                     _index_i2c:
   839  007A                     	ds	1
   840                           
   841                           	psect	dataCOMMON
   842  007B                     __pdataCOMMON:
   843  007B                     _first_i2c:
   844  007B                     	ds	1
   845                           
   846                           	psect	bssBANK0
   847  0067                     __pbssBANK0:
   848  0067                     _stock3:
   849  0067                     	ds	2
   850  0069                     _stock2:
   851  0069                     	ds	2
   852  006B                     _stock1:
   853  006B                     	ds	2
   854  006D                     _readADC:
   855  006D                     	ds	1
   856  006E                     _average:
   857  006E                     	ds	1
   858                           
   859                           	psect	bssBANK1
   860  00A4                     __pbssBANK1:
   861  00A4                     _stock4:
   862  00A4                     	ds	2
   863                           
   864                           	psect	clrtext
   865  0ED7                     clear_ram0:	
   866                           ;	Called with FSR0 containing the base address, and
   867                           ;	btemp/btemp+1 has the size to clear
   868                           
   869  0ED7  0064               	clrwdt	;clear the watchdog before getting into this loop
   870  0ED8                     clrloop0:
   871  0ED8  0180               	clrf	0	;clear RAM location pointed to by FSR
   872  0ED9  3101               	addfsr 0,1
   873  0EDA  3001               	movlw	1
   874  0EDB  02FE               	subwf	126,f
   875  0EDC  3000               	movlw	0
   876  0EDD  3BFF               	subwfb	127,f
   877  0EDE  087F               	movf	127,w
   878  0EDF  047E               	iorwf	126,w
   879  0EE0  1903               	btfsc	3,2
   880  0EE1  3400               	retlw	0	;all done for this memory range, return
   881  0EE2  2ED8               	goto	clrloop0	;have we reached the end yet?
   882                           
   883                           	psect	cstackBANK1
   884  00A0                     __pcstackBANK1:
   885  00A0                     main@i:
   886                           
   887                           ; 1 bytes @ 0x0
   888  00A0                     	ds	1
   889  00A1                     main@i_845:
   890                           
   891                           ; 1 bytes @ 0x1
   892  00A1                     	ds	1
   893  00A2                     main@i_846:
   894                           
   895                           ; 1 bytes @ 0x2
   896  00A2                     	ds	1
   897  00A3                     main@i_847:
   898                           
   899                           ; 1 bytes @ 0x3
   900  00A3                     	ds	1
   901                           
   902                           	psect	cstackCOMMON
   903  0070                     __pcstackCOMMON:
   904  0070                     ?_eeprom_read:
   905  0070                     ?_init_I2C_buffer:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_isr:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ??_isr:	
   912                           ; 1 bytes @ 0x0
   913                           
   914                           
   915                           ; 1 bytes @ 0x0
   916  0070                     	ds	2
   917  0072                     ??_eeprom_read:
   918  0072                     ?_eeprom_write:	
   919                           ; 1 bytes @ 0x2
   920                           
   921  0072                     ??___lmul:	
   922                           ; 1 bytes @ 0x2
   923                           
   924  0072                     ?_ADC_read:	
   925                           ; 1 bytes @ 0x2
   926                           
   927  0072                     ?___lwdiv:	
   928                           ; 2 bytes @ 0x2
   929                           
   930  0072                     eeprom_write@value:	
   931                           ; 2 bytes @ 0x2
   932                           
   933  0072                     ___lwdiv@divisor:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0072                     ___lmul@product:	
   937                           ; 2 bytes @ 0x2
   938                           
   939                           
   940                           ; 4 bytes @ 0x2
   941  0072                     	ds	1
   942  0073                     ??_eeprom_write:
   943                           
   944                           ; 1 bytes @ 0x3
   945  0073                     	ds	1
   946  0074                     ??_ADC_read:
   947  0074                     ___lwdiv@dividend:	
   948                           ; 1 bytes @ 0x4
   949                           
   950                           
   951                           ; 2 bytes @ 0x4
   952  0074                     	ds	1
   953  0075                     ADC_read@channel:
   954  0075                     eeprom_read@addr:	
   955                           ; 1 bytes @ 0x5
   956                           
   957  0075                     eeprom_write@addr:	
   958                           ; 1 bytes @ 0x5
   959                           
   960                           
   961                           ; 1 bytes @ 0x5
   962  0075                     	ds	1
   963  0076                     ??_init_I2C_buffer:
   964  0076                     ??___lldiv:	
   965                           ; 1 bytes @ 0x6
   966                           
   967  0076                     ??___lwdiv:	
   968                           ; 1 bytes @ 0x6
   969                           
   970                           
   971                           ; 1 bytes @ 0x6
   972  0076                     	ds	3
   973                           
   974                           	psect	cstackBANK0
   975  0020                     __pcstackBANK0:
   976  0020                     ?___lmul:
   977  0020                     init_I2C_buffer@i:	
   978                           ; 4 bytes @ 0x0
   979                           
   980  0020                     ___lwdiv@counter:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0020                     ___lmul@multiplier:	
   984                           ; 1 bytes @ 0x0
   985                           
   986                           
   987                           ; 4 bytes @ 0x0
   988  0020                     	ds	1
   989  0021                     init_I2C_buffer@i_663:
   990  0021                     ___lwdiv@quotient:	
   991                           ; 1 bytes @ 0x1
   992                           
   993                           
   994                           ; 2 bytes @ 0x1
   995  0021                     	ds	1
   996  0022                     init_I2C_buffer@i_664:
   997                           
   998                           ; 1 bytes @ 0x2
   999  0022                     	ds	1
  1000  0023                     init_I2C_buffer@i_665:
  1001                           
  1002                           ; 1 bytes @ 0x3
  1003  0023                     	ds	1
  1004  0024                     ___lmul@multiplicand:
  1005                           
  1006                           ; 4 bytes @ 0x4
  1007  0024                     	ds	4
  1008  0028                     ?___lldiv:
  1009  0028                     ___lldiv@divisor:	
  1010                           ; 4 bytes @ 0x8
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x8
  1014  0028                     	ds	4
  1015  002C                     ___lldiv@dividend:
  1016                           
  1017                           ; 4 bytes @ 0xC
  1018  002C                     	ds	4
  1019  0030                     ___lldiv@quotient:
  1020                           
  1021                           ; 4 bytes @ 0x10
  1022  0030                     	ds	4
  1023  0034                     ___lldiv@counter:
  1024                           
  1025                           ; 1 bytes @ 0x14
  1026  0034                     	ds	1
  1027  0035                     ?_map:
  1028  0035                     map@x:	
  1029                           ; 4 bytes @ 0x15
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x15
  1033  0035                     	ds	4
  1034  0039                     map@in_min:
  1035                           
  1036                           ; 4 bytes @ 0x19
  1037  0039                     	ds	4
  1038  003D                     map@in_max:
  1039                           
  1040                           ; 4 bytes @ 0x1D
  1041  003D                     	ds	4
  1042  0041                     map@out_min:
  1043                           
  1044                           ; 4 bytes @ 0x21
  1045  0041                     	ds	4
  1046  0045                     map@out_max:
  1047                           
  1048                           ; 4 bytes @ 0x25
  1049  0045                     	ds	4
  1050  0049                     ??_map:
  1051                           
  1052                           ; 1 bytes @ 0x29
  1053  0049                     	ds	16
  1054  0059                     ?_main:
  1055  0059                     main@argc:	
  1056                           ; 2 bytes @ 0x39
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x39
  1060  0059                     	ds	2
  1061  005B                     main@argv:
  1062                           
  1063                           ; 2 bytes @ 0x3B
  1064  005B                     	ds	2
  1065  005D                     ??_main:
  1066                           
  1067                           ; 1 bytes @ 0x3D
  1068  005D                     	ds	10
  1069                           
  1070                           	psect	maintext
  1071  016E                     __pmaintext:	
  1072 ;;
  1073 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  1074 ;;
  1075 ;; *************** function _main *****************
  1076 ;; Defined at:
  1077 ;;		line 348 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  argc            2   57[BANK0 ] int 
  1080 ;;  argv            2   59[BANK0 ] PTR PTR unsigned char 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  i               1    3[BANK1 ] unsigned char 
  1083 ;;  i               1    2[BANK1 ] unsigned char 
  1084 ;;  i               1    1[BANK1 ] unsigned char 
  1085 ;;  i               1    0[BANK1 ] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2   57[BANK0 ] int 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : B1F/0
  1092 ;;		On exit  : 1F/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1097 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1098 ;;      Totals:         0      14       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1099 ;;Total ram usage:       18 bytes
  1100 ;; Hardware stack levels required when called:    3
  1101 ;; This function calls:
  1102 ;;		_ADC_read
  1103 ;;		___lwdiv
  1104 ;;		_eeprom_write
  1105 ;;		_init_I2C_buffer
  1106 ;;		_map
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _main
  1114  016E                     _main:
  1115                           
  1116                           ;main.c: 349: OSCCON = 0b11110000;
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1120  016E  30F0               	movlw	240
  1121  016F  0021               	movlb	1	; select bank1
  1122  0170  0099               	movwf	25	;volatile
  1123                           
  1124                           ;main.c: 350: init_I2C_buffer();
  1125  0171  3186  26D2  3181   	fcall	_init_I2C_buffer
  1126                           
  1127                           ;main.c: 351: OPTION_REGbits.nWPUEN = 1;
  1128  0174  0021               	movlb	1	; select bank1
  1129  0175  1795               	bsf	21,7	;volatile
  1130                           
  1131                           ;main.c: 352: ADCON1 = 0b11110000;
  1132  0176  30F0               	movlw	240
  1133  0177  009E               	movwf	30	;volatile
  1134                           
  1135                           ;main.c: 353: TRISA = 0b00101111;
  1136  0178  302F               	movlw	47
  1137  0179  008C               	movwf	12	;volatile
  1138                           
  1139                           ;main.c: 354: ANSELA = 0b00001111;
  1140  017A  300F               	movlw	15
  1141  017B  0023               	movlb	3	; select bank3
  1142  017C  008C               	movwf	12	;volatile
  1143                           
  1144                           ;main.c: 355: TRISB = 0b11011111;
  1145  017D  30DF               	movlw	223
  1146  017E  0021               	movlb	1	; select bank1
  1147  017F  008D               	movwf	13	;volatile
  1148                           
  1149                           ;main.c: 356: ANSELB = 0b00000000;
  1150  0180  0023               	movlb	3	; select bank3
  1151  0181  018D               	clrf	13	;volatile
  1152                           
  1153                           ;main.c: 357: WPUA = 0b00100000;
  1154  0182  3020               	movlw	32
  1155  0183  0024               	movlb	4	; select bank4
  1156  0184  008C               	movwf	12	;volatile
  1157                           
  1158                           ;main.c: 358: WPUB = 0b11001101;
  1159  0185  30CD               	movlw	205
  1160  0186  008D               	movwf	13	;volatile
  1161                           
  1162                           ;main.c: 359: LATA = 0b00000000;
  1163  0187  0022               	movlb	2	; select bank2
  1164  0188  018C               	clrf	12	;volatile
  1165                           
  1166                           ;main.c: 360: LATB = 0b00000000;
  1167  0189  018D               	clrf	13	;volatile
  1168                           
  1169                           ;main.c: 361: SSP1STAT = 0b10000000;
  1170  018A  3080               	movlw	128
  1171  018B  0024               	movlb	4	; select bank4
  1172  018C  0094               	movwf	20	;volatile
  1173                           
  1174                           ;main.c: 362: SSP1CON1 = 0b00110110;
  1175  018D  3036               	movlw	54
  1176  018E  0095               	movwf	21	;volatile
  1177                           
  1178                           ;main.c: 363: SSP1CON2bits.SEN = 1;
  1179  018F  1416               	bsf	22,0	;volatile
  1180                           
  1181                           ;main.c: 364: SSP1CON3bits.BOEN = 1;
  1182  0190  1617               	bsf	23,4	;volatile
  1183                           
  1184                           ;main.c: 365: SSP1CON3bits.SDAHT = 1;
  1185  0191  1597               	bsf	23,3	;volatile
  1186                           
  1187                           ;main.c: 366: SSP1CON3bits.SBCDE = 1;
  1188  0192  1517               	bsf	23,2	;volatile
  1189                           
  1190                           ;main.c: 367: SSP1ADD = (char) (0x41 << 1);
  1191  0193  3082               	movlw	130
  1192  0194  0092               	movwf	18	;volatile
  1193                           
  1194                           ;main.c: 368: PIR1bits.SSP1IF = 0;
  1195  0195  0020               	movlb	0	; select bank0
  1196  0196  1191               	bcf	17,3	;volatile
  1197                           
  1198                           ;main.c: 369: PIR2bits.BCL1IF = 0;
  1199  0197  1192               	bcf	18,3	;volatile
  1200                           
  1201                           ;main.c: 370: PIE2bits.BCL1IE = 1;
  1202  0198  0021               	movlb	1	; select bank1
  1203  0199  1592               	bsf	18,3	;volatile
  1204                           
  1205                           ;main.c: 371: PIE1bits.SSP1IE = 1;
  1206  019A  1591               	bsf	17,3	;volatile
  1207                           
  1208                           ;main.c: 372: INTCONbits.PEIE = 1;
  1209  019B  170B               	bsf	11,6	;volatile
  1210                           
  1211                           ;main.c: 373: OPTION_REGbits.INTEDG = 0;
  1212  019C  1315               	bcf	21,6	;volatile
  1213                           
  1214                           ;main.c: 374: IOCBN = 0b11001100;
  1215  019D  30CC               	movlw	204
  1216  019E  0027               	movlb	7	; select bank7
  1217  019F  0095               	movwf	21	;volatile
  1218                           
  1219                           ;main.c: 375: INTCON = 0b01011000;
  1220  01A0  3058               	movlw	88
  1221  01A1  008B               	movwf	11	;volatile
  1222                           
  1223                           ;main.c: 376: T1CON = 0b00110100;
  1224  01A2  3034               	movlw	52
  1225  01A3  0020               	movlb	0	; select bank0
  1226  01A4  0098               	movwf	24	;volatile
  1227                           
  1228                           ;main.c: 377: PIE1bits.TMR1IE = 1;
  1229  01A5  0021               	movlb	1	; select bank1
  1230  01A6  1411               	bsf	17,0	;volatile
  1231                           
  1232                           ;main.c: 378: T1CONbits.TMR1ON = 1;
  1233  01A7  0020               	movlb	0	; select bank0
  1234  01A8  1418               	bsf	24,0	;volatile
  1235                           
  1236                           ;main.c: 379: INTCONbits.GIE = 1;
  1237  01A9  178B               	bsf	11,7	;volatile
  1238  01AA                     l159:	
  1239                           ;main.c: 381: while (1) {
  1240                           
  1241  01AA  0064               	clrwdt	;# 
  1242                           
  1243                           ;main.c: 383: if (I2C_buffer.data.RESET == 1) {
  1244  01AB  30F5               	movlw	245
  1245  01AC  0086               	movwf	6
  1246  01AD  3022               	movlw	34
  1247  01AE  0087               	movwf	7
  1248  01AF  3141               	addfsr 1,1
  1249  01B0  0301               	decf	1,w
  1250  01B1  1903               	btfsc	3,2
  1251  01B2  0001               	reset	;# 
  1252                           
  1253                           ;main.c: 385: };main.c: 387: if (I2C_buffer.data.SAVE == 1) {
  1254  01B3  30F5               	movlw	245
  1255  01B4  0086               	movwf	6
  1256  01B5  3022               	movlw	34
  1257  01B6  0087               	movwf	7
  1258  01B7  3142               	addfsr 1,2
  1259  01B8  0301               	decf	1,w
  1260  01B9  1D03               	btfss	3,2
  1261  01BA  2A3E               	goto	l2370
  1262                           
  1263                           ;main.c: 389: for (unsigned char i = 0; i < 58; i++)
  1264  01BB  0021               	movlb	1	; select bank1
  1265  01BC  01A0               	clrf	main@i^(0+128)
  1266  01BD                     l2324:
  1267                           
  1268                           ;main.c: 390: {;main.c: 391: eeprom_write(i, I2C_buffer.byte[(unsigned char) (0x14 + i)]
      +                          );
  1269  01BD  0820               	movf	main@i^(0+128),w
  1270  01BE  3E14               	addlw	20
  1271  01BF  3EF5               	addlw	245
  1272  01C0  0086               	movwf	6
  1273  01C1  0187               	clrf	7
  1274  01C2  3022               	movlw	34
  1275  01C3  3D87               	addwfc	7,f
  1276  01C4  0801               	movf	1,w
  1277  01C5  0020               	movlb	0	; select bank0
  1278  01C6  00DD               	movwf	??_main
  1279  01C7  085D               	movf	??_main,w
  1280  01C8  00F2               	movwf	eeprom_write@value
  1281  01C9  0021               	movlb	1	; select bank1
  1282  01CA  0820               	movf	main@i^(0+128),w
  1283  01CB  318F  2701  3181   	fcall	_eeprom_write
  1284  01CE  3001               	movlw	1
  1285  01CF  0020               	movlb	0	; select bank0
  1286  01D0  00DD               	movwf	??_main
  1287  01D1  085D               	movf	??_main,w
  1288  01D2  0021               	movlb	1	; select bank1
  1289  01D3  07A0               	addwf	main@i^(0+128),f
  1290  01D4  303A               	movlw	58
  1291  01D5  0220               	subwf	main@i^(0+128),w
  1292  01D6  1C03               	skipc
  1293  01D7  29BD               	goto	l2324
  1294                           
  1295                           ;main.c: 392: };main.c: 393: for (unsigned char i = 0; i < 58; i++)
  1296  01D8  01A1               	clrf	main@i_845^(0+128)
  1297  01D9                     l2336:
  1298                           
  1299                           ;main.c: 394: {;main.c: 395: eeprom_write((unsigned char) (58 + i), I2C_buffer.byte[(uns
      +                          igned char) (0x4E + i)]);
  1300  01D9  0821               	movf	main@i_845^(0+128),w
  1301  01DA  3E4E               	addlw	78
  1302  01DB  3EF5               	addlw	245
  1303  01DC  0086               	movwf	6
  1304  01DD  0187               	clrf	7
  1305  01DE  3022               	movlw	34
  1306  01DF  3D87               	addwfc	7,f
  1307  01E0  0801               	movf	1,w
  1308  01E1  0020               	movlb	0	; select bank0
  1309  01E2  00DD               	movwf	??_main
  1310  01E3  085D               	movf	??_main,w
  1311  01E4  00F2               	movwf	eeprom_write@value
  1312  01E5  0021               	movlb	1	; select bank1
  1313  01E6  0821               	movf	main@i_845^(0+128),w
  1314  01E7  3E3A               	addlw	58
  1315  01E8  318F  2701  3181   	fcall	_eeprom_write
  1316  01EB  3001               	movlw	1
  1317  01EC  0020               	movlb	0	; select bank0
  1318  01ED  00DD               	movwf	??_main
  1319  01EE  085D               	movf	??_main,w
  1320  01EF  0021               	movlb	1	; select bank1
  1321  01F0  07A1               	addwf	main@i_845^(0+128),f
  1322  01F1  303A               	movlw	58
  1323  01F2  0221               	subwf	main@i_845^(0+128),w
  1324  01F3  1C03               	skipc
  1325  01F4  29D9               	goto	l2336
  1326                           
  1327                           ;main.c: 396: };main.c: 397: for (unsigned char i = 0; i < 58; i++)
  1328  01F5  01A2               	clrf	main@i_846^(0+128)
  1329  01F6                     l2348:
  1330                           
  1331                           ;main.c: 398: {;main.c: 399: eeprom_write((unsigned char) (115 + i), I2C_buffer.byte[(un
      +                          signed char) (0x88 + i)]);
  1332  01F6  0822               	movf	main@i_846^(0+128),w
  1333  01F7  3E88               	addlw	136
  1334  01F8  3EF5               	addlw	245
  1335  01F9  0086               	movwf	6
  1336  01FA  0187               	clrf	7
  1337  01FB  3022               	movlw	34
  1338  01FC  3D87               	addwfc	7,f
  1339  01FD  0801               	movf	1,w
  1340  01FE  0020               	movlb	0	; select bank0
  1341  01FF  00DD               	movwf	??_main
  1342  0200  085D               	movf	??_main,w
  1343  0201  00F2               	movwf	eeprom_write@value
  1344  0202  0021               	movlb	1	; select bank1
  1345  0203  0822               	movf	main@i_846^(0+128),w
  1346  0204  3E73               	addlw	115
  1347  0205  318F  2701  3181   	fcall	_eeprom_write
  1348  0208  3001               	movlw	1
  1349  0209  0020               	movlb	0	; select bank0
  1350  020A  00DD               	movwf	??_main
  1351  020B  085D               	movf	??_main,w
  1352  020C  0021               	movlb	1	; select bank1
  1353  020D  07A2               	addwf	main@i_846^(0+128),f
  1354  020E  303A               	movlw	58
  1355  020F  0222               	subwf	main@i_846^(0+128),w
  1356  0210  1C03               	skipc
  1357  0211  29F6               	goto	l2348
  1358                           
  1359                           ;main.c: 400: };main.c: 401: for (unsigned char i = 0; i < 58; i++)
  1360  0212  01A3               	clrf	main@i_847^(0+128)
  1361  0213                     l2360:
  1362                           
  1363                           ;main.c: 402: {;main.c: 403: eeprom_write((unsigned char) (172 + i), I2C_buffer.byte[(un
      +                          signed char) (0xC2 + i)]);
  1364  0213  0823               	movf	main@i_847^(0+128),w
  1365  0214  3EC2               	addlw	194
  1366  0215  3EF5               	addlw	245
  1367  0216  0086               	movwf	6
  1368  0217  0187               	clrf	7
  1369  0218  3022               	movlw	34
  1370  0219  3D87               	addwfc	7,f
  1371  021A  0801               	movf	1,w
  1372  021B  0020               	movlb	0	; select bank0
  1373  021C  00DD               	movwf	??_main
  1374  021D  085D               	movf	??_main,w
  1375  021E  00F2               	movwf	eeprom_write@value
  1376  021F  0021               	movlb	1	; select bank1
  1377  0220  0823               	movf	main@i_847^(0+128),w
  1378  0221  3EAC               	addlw	172
  1379  0222  318F  2701  3181   	fcall	_eeprom_write
  1380  0225  3001               	movlw	1
  1381  0226  0020               	movlb	0	; select bank0
  1382  0227  00DD               	movwf	??_main
  1383  0228  085D               	movf	??_main,w
  1384  0229  0021               	movlb	1	; select bank1
  1385  022A  07A3               	addwf	main@i_847^(0+128),f
  1386  022B  303A               	movlw	58
  1387  022C  0223               	subwf	main@i_847^(0+128),w
  1388  022D  1C03               	skipc
  1389  022E  2A13               	goto	l2360
  1390                           
  1391                           ;main.c: 404: };main.c: 405: I2C_buffer.data.SAVE = 0;
  1392  022F  30F5               	movlw	245
  1393  0230  0086               	movwf	6
  1394  0231  3022               	movlw	34
  1395  0232  0087               	movwf	7
  1396  0233  3142               	addfsr 1,2
  1397  0234  0181               	clrf	1
  1398                           
  1399                           ;main.c: 406: _delay((unsigned long)((10)*(32000000/4000.0)));
  1400  0235  3068               	movlw	104
  1401  0236  0020               	movlb	0	; select bank0
  1402  0237  00DD               	movwf	??_main
  1403  0238  30E4               	movlw	228
  1404  0239                     u2357:
  1405  0239  0B89               	decfsz	9,f
  1406  023A  2A39               	goto	u2357
  1407  023B  0BDD               	decfsz	??_main,f
  1408  023C  2A39               	goto	u2357
  1409  023D  0000               	nop
  1410  023E                     l2370:
  1411                           
  1412                           ;main.c: 407: };main.c: 409: if (I2C_buffer.data.dispense == 1) {
  1413  023E  30F5               	movlw	245
  1414  023F  0086               	movwf	6
  1415  0240  3022               	movlw	34
  1416  0241  0087               	movwf	7
  1417  0242  3143               	addfsr 1,3
  1418  0243  0301               	decf	1,w
  1419  0244  1D03               	btfss	3,2
  1420  0245  2CB8               	goto	l2458
  1421                           
  1422                           ;main.c: 410: I2C_buffer.data.time = 0;
  1423  0246  30FF               	movlw	255
  1424  0247  0086               	movwf	6
  1425  0248  3022               	movlw	34
  1426  0249  0087               	movwf	7
  1427  024A  3000               	movlw	0
  1428  024B  3FC0               	movwi [0]fsr1
  1429  024C  3FC1               	movwi [1]fsr1
  1430  024D  3FC2               	movwi [2]fsr1
  1431  024E  3FC3               	movwi [3]fsr1
  1432                           
  1433                           ;main.c: 411: I2C_buffer.data.counter = 0;
  1434  024F  30FB               	movlw	251
  1435  0250  0086               	movwf	6
  1436  0251  3022               	movlw	34
  1437  0252  0087               	movwf	7
  1438  0253  3000               	movlw	0
  1439  0254  3FC0               	movwi [0]fsr1
  1440  0255  3FC1               	movwi [1]fsr1
  1441  0256  3FC2               	movwi [2]fsr1
  1442  0257  3FC3               	movwi [3]fsr1
  1443                           
  1444                           ;main.c: 412: I2C_buffer.data.cancel = 0;
  1445  0258  30F5               	movlw	245
  1446  0259  0086               	movwf	6
  1447  025A  3022               	movlw	34
  1448  025B  0087               	movwf	7
  1449  025C  3145               	addfsr 1,5
  1450  025D  0181               	clrf	1
  1451                           
  1452                           ;main.c: 413: I2C_buffer.data.selected1 = 0;
  1453  025E  30F5               	movlw	245
  1454  025F  0086               	movwf	6
  1455  0260  3022               	movlw	34
  1456  0261  0087               	movwf	7
  1457  0262  3153               	addfsr 1,19
  1458  0263  0181               	clrf	1
  1459                           
  1460                           ;main.c: 414: I2C_buffer.data.selected2 = 0;
  1461  0264  3042               	movlw	66
  1462  0265  0086               	movwf	6
  1463  0266  3023               	movlw	35
  1464  0267  0087               	movwf	7
  1465  0268  0181               	clrf	1
  1466                           
  1467                           ;main.c: 415: I2C_buffer.data.selected3 = 0;
  1468  0269  307C               	movlw	124
  1469  026A  0086               	movwf	6
  1470  026B  3023               	movlw	35
  1471  026C  0087               	movwf	7
  1472  026D  0181               	clrf	1
  1473                           
  1474                           ;main.c: 416: I2C_buffer.data.selected4 = 0;
  1475  026E  30B6               	movlw	182
  1476  026F  0086               	movwf	6
  1477  0270  3023               	movlw	35
  1478  0271  0087               	movwf	7
  1479  0272  0181               	clrf	1
  1480                           
  1481                           ;main.c: 417: switch (I2C_buffer.data.selected) {
  1482  0273  2C9F               	goto	l2454
  1483  0274                     l174:
  1484                           
  1485                           ;main.c: 420: LATAbits.LATA4 = 1;
  1486  0274  0022               	movlb	2	; select bank2
  1487  0275  160C               	bsf	12,4	;volatile
  1488                           
  1489                           ;main.c: 421: I2C_buffer.data.time++;
  1490  0276  30F5               	movlw	245
  1491  0277  0086               	movwf	6
  1492  0278  3022               	movlw	34
  1493  0279  0087               	movwf	7
  1494  027A  314A               	addfsr 1,10
  1495  027B  3001               	movlw	1
  1496  027C  0781               	addwf	1,f
  1497  027D  3141               	addfsr 1,1
  1498  027E  3000               	movlw	0
  1499  027F  3D81               	addwfc	1,f
  1500  0280  3141               	addfsr 1,1
  1501  0281  3000               	movlw	0
  1502  0282  3D81               	addwfc	1,f
  1503  0283  3141               	addfsr 1,1
  1504  0284  3000               	movlw	0
  1505  0285  3D81               	addwfc	1,f
  1506                           
  1507                           ;main.c: 422: _delay((unsigned long)((1)*(32000000/4000.0)));
  1508  0286  300B               	movlw	11
  1509  0287  0020               	movlb	0	; select bank0
  1510  0288  00DD               	movwf	??_main
  1511  0289  3062               	movlw	98
  1512  028A                     u2367:
  1513  028A  0B89               	decfsz	9,f
  1514  028B  2A8A               	goto	u2367
  1515  028C  0BDD               	decfsz	??_main,f
  1516  028D  2A8A               	goto	u2367
  1517  028E  0000               	nop
  1518  028F  0064               	clrwdt	;# 
  1519                           
  1520                           ;main.c: 424: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected1 == 1) brea
      +                          k;
  1521  0290  30F5               	movlw	245
  1522  0291  0086               	movwf	6
  1523  0292  3022               	movlw	34
  1524  0293  0087               	movwf	7
  1525  0294  314E               	addfsr 1,14
  1526  0295  0301               	decf	1,w
  1527  0296  1D03               	btfss	3,2
  1528  0297  2AA0               	goto	l2388
  1529  0298  30F5               	movlw	245
  1530  0299  0086               	movwf	6
  1531  029A  3022               	movlw	34
  1532  029B  0087               	movwf	7
  1533  029C  3153               	addfsr 1,19
  1534  029D  0301               	decf	1,w
  1535  029E  1903               	btfsc	3,2
  1536  029F  2AFB               	goto	l176
  1537  02A0                     l2388:
  1538  02A0  302E               	movlw	46
  1539  02A1  0086               	movwf	6
  1540  02A2  3023               	movlw	35
  1541  02A3  0087               	movwf	7
  1542  02A4  3F40               	moviw [0]fsr1
  1543  02A5  0020               	movlb	0	; select bank0
  1544  02A6  00DD               	movwf	??_main
  1545  02A7  3F41               	moviw [1]fsr1
  1546  02A8  00DE               	movwf	??_main+1
  1547  02A9  3F42               	moviw [2]fsr1
  1548  02AA  00DF               	movwf	??_main+2
  1549  02AB  3F43               	moviw [3]fsr1
  1550  02AC  00E0               	movwf	??_main+3
  1551  02AD  30F5               	movlw	245
  1552  02AE  0086               	movwf	6
  1553  02AF  3022               	movlw	34
  1554  02B0  0087               	movwf	7
  1555  02B1  314A               	addfsr 1,10
  1556  02B2  3F40               	moviw [0]fsr1
  1557  02B3  00E1               	movwf	??_main+4
  1558  02B4  3F41               	moviw [1]fsr1
  1559  02B5  00E2               	movwf	??_main+5
  1560  02B6  3F42               	moviw [2]fsr1
  1561  02B7  00E3               	movwf	??_main+6
  1562  02B8  3F43               	moviw [3]fsr1
  1563  02B9  00E4               	movwf	??_main+7
  1564  02BA  0860               	movf	??_main+3,w
  1565  02BB  0264               	subwf	??_main+7,w
  1566  02BC  1D03               	skipz
  1567  02BD  2AC8               	goto	u2105
  1568  02BE  085F               	movf	??_main+2,w
  1569  02BF  0263               	subwf	??_main+6,w
  1570  02C0  1D03               	skipz
  1571  02C1  2AC8               	goto	u2105
  1572  02C2  085E               	movf	??_main+1,w
  1573  02C3  0262               	subwf	??_main+5,w
  1574  02C4  1D03               	skipz
  1575  02C5  2AC8               	goto	u2105
  1576  02C6  085D               	movf	??_main,w
  1577  02C7  0261               	subwf	??_main+4,w
  1578  02C8                     u2105:
  1579  02C8  1803               	skipnc
  1580  02C9  2AFB               	goto	l176
  1581  02CA  3032               	movlw	50
  1582  02CB  0086               	movwf	6
  1583  02CC  3023               	movlw	35
  1584  02CD  0087               	movwf	7
  1585  02CE  3F40               	moviw [0]fsr1
  1586  02CF  00DD               	movwf	??_main
  1587  02D0  3F41               	moviw [1]fsr1
  1588  02D1  00DE               	movwf	??_main+1
  1589  02D2  3F42               	moviw [2]fsr1
  1590  02D3  00DF               	movwf	??_main+2
  1591  02D4  3F43               	moviw [3]fsr1
  1592  02D5  00E0               	movwf	??_main+3
  1593  02D6  30F5               	movlw	245
  1594  02D7  0086               	movwf	6
  1595  02D8  3022               	movlw	34
  1596  02D9  0087               	movwf	7
  1597  02DA  3146               	addfsr 1,6
  1598  02DB  3F40               	moviw [0]fsr1
  1599  02DC  00E1               	movwf	??_main+4
  1600  02DD  3F41               	moviw [1]fsr1
  1601  02DE  00E2               	movwf	??_main+5
  1602  02DF  3F42               	moviw [2]fsr1
  1603  02E0  00E3               	movwf	??_main+6
  1604  02E1  3F43               	moviw [3]fsr1
  1605  02E2  00E4               	movwf	??_main+7
  1606  02E3  0860               	movf	??_main+3,w
  1607  02E4  0264               	subwf	??_main+7,w
  1608  02E5  1D03               	skipz
  1609  02E6  2AF1               	goto	u2115
  1610  02E7  085F               	movf	??_main+2,w
  1611  02E8  0263               	subwf	??_main+6,w
  1612  02E9  1D03               	skipz
  1613  02EA  2AF1               	goto	u2115
  1614  02EB  085E               	movf	??_main+1,w
  1615  02EC  0262               	subwf	??_main+5,w
  1616  02ED  1D03               	skipz
  1617  02EE  2AF1               	goto	u2115
  1618  02EF  085D               	movf	??_main,w
  1619  02F0  0261               	subwf	??_main+4,w
  1620  02F1                     u2115:
  1621  02F1  1803               	skipnc
  1622  02F2  2AFB               	goto	l176
  1623  02F3  30F5               	movlw	245
  1624  02F4  0086               	movwf	6
  1625  02F5  3022               	movlw	34
  1626  02F6  0087               	movwf	7
  1627  02F7  3143               	addfsr 1,3
  1628  02F8  0301               	decf	1,w
  1629  02F9  1903               	btfsc	3,2
  1630  02FA  2A74               	goto	l174
  1631  02FB                     l176:
  1632                           
  1633                           ;main.c: 425: };main.c: 426: LATAbits.LATA4 = 0;
  1634  02FB  0022               	movlb	2	; select bank2
  1635  02FC  120C               	bcf	12,4	;volatile
  1636  02FD  2C98               	goto	l2450
  1637  02FE                     l182:	
  1638                           ;main.c: 428: break;
  1639                           
  1640                           ;main.c: 427: I2C_buffer.data.dispense = 0;
  1641                           
  1642                           
  1643                           ;main.c: 431: LATAbits.LATA6 = 1;
  1644  02FE  0022               	movlb	2	; select bank2
  1645  02FF  170C               	bsf	12,6	;volatile
  1646                           
  1647                           ;main.c: 432: I2C_buffer.data.time++;
  1648  0300  30F5               	movlw	245
  1649  0301  0086               	movwf	6
  1650  0302  3022               	movlw	34
  1651  0303  0087               	movwf	7
  1652  0304  314A               	addfsr 1,10
  1653  0305  3001               	movlw	1
  1654  0306  0781               	addwf	1,f
  1655  0307  3141               	addfsr 1,1
  1656  0308  3000               	movlw	0
  1657  0309  3D81               	addwfc	1,f
  1658  030A  3141               	addfsr 1,1
  1659  030B  3000               	movlw	0
  1660  030C  3D81               	addwfc	1,f
  1661  030D  3141               	addfsr 1,1
  1662  030E  3000               	movlw	0
  1663  030F  3D81               	addwfc	1,f
  1664                           
  1665                           ;main.c: 433: _delay((unsigned long)((1)*(32000000/4000.0)));
  1666  0310  300B               	movlw	11
  1667  0311  0020               	movlb	0	; select bank0
  1668  0312  00DD               	movwf	??_main
  1669  0313  3062               	movlw	98
  1670  0314                     u2377:
  1671  0314  0B89               	decfsz	9,f
  1672  0315  2B14               	goto	u2377
  1673  0316  0BDD               	decfsz	??_main,f
  1674  0317  2B14               	goto	u2377
  1675  0318  0000               	nop
  1676  0319  0064               	clrwdt	;# 
  1677                           
  1678                           ;main.c: 435: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected2 == 1) brea
      +                          k;
  1679  031A  30F5               	movlw	245
  1680  031B  0086               	movwf	6
  1681  031C  3022               	movlw	34
  1682  031D  0087               	movwf	7
  1683  031E  314E               	addfsr 1,14
  1684  031F  0301               	decf	1,w
  1685  0320  1D03               	btfss	3,2
  1686  0321  2B29               	goto	l2406
  1687  0322  3042               	movlw	66
  1688  0323  0086               	movwf	6
  1689  0324  3023               	movlw	35
  1690  0325  0087               	movwf	7
  1691  0326  0301               	decf	1,w
  1692  0327  1903               	btfsc	3,2
  1693  0328  2B84               	goto	l184
  1694  0329                     l2406:
  1695  0329  3068               	movlw	104
  1696  032A  0086               	movwf	6
  1697  032B  3023               	movlw	35
  1698  032C  0087               	movwf	7
  1699  032D  3F40               	moviw [0]fsr1
  1700  032E  0020               	movlb	0	; select bank0
  1701  032F  00DD               	movwf	??_main
  1702  0330  3F41               	moviw [1]fsr1
  1703  0331  00DE               	movwf	??_main+1
  1704  0332  3F42               	moviw [2]fsr1
  1705  0333  00DF               	movwf	??_main+2
  1706  0334  3F43               	moviw [3]fsr1
  1707  0335  00E0               	movwf	??_main+3
  1708  0336  30F5               	movlw	245
  1709  0337  0086               	movwf	6
  1710  0338  3022               	movlw	34
  1711  0339  0087               	movwf	7
  1712  033A  314A               	addfsr 1,10
  1713  033B  3F40               	moviw [0]fsr1
  1714  033C  00E1               	movwf	??_main+4
  1715  033D  3F41               	moviw [1]fsr1
  1716  033E  00E2               	movwf	??_main+5
  1717  033F  3F42               	moviw [2]fsr1
  1718  0340  00E3               	movwf	??_main+6
  1719  0341  3F43               	moviw [3]fsr1
  1720  0342  00E4               	movwf	??_main+7
  1721  0343  0860               	movf	??_main+3,w
  1722  0344  0264               	subwf	??_main+7,w
  1723  0345  1D03               	skipz
  1724  0346  2B51               	goto	u2155
  1725  0347  085F               	movf	??_main+2,w
  1726  0348  0263               	subwf	??_main+6,w
  1727  0349  1D03               	skipz
  1728  034A  2B51               	goto	u2155
  1729  034B  085E               	movf	??_main+1,w
  1730  034C  0262               	subwf	??_main+5,w
  1731  034D  1D03               	skipz
  1732  034E  2B51               	goto	u2155
  1733  034F  085D               	movf	??_main,w
  1734  0350  0261               	subwf	??_main+4,w
  1735  0351                     u2155:
  1736  0351  1803               	skipnc
  1737  0352  2B84               	goto	l184
  1738  0353  306C               	movlw	108
  1739  0354  0086               	movwf	6
  1740  0355  3023               	movlw	35
  1741  0356  0087               	movwf	7
  1742  0357  3F40               	moviw [0]fsr1
  1743  0358  00DD               	movwf	??_main
  1744  0359  3F41               	moviw [1]fsr1
  1745  035A  00DE               	movwf	??_main+1
  1746  035B  3F42               	moviw [2]fsr1
  1747  035C  00DF               	movwf	??_main+2
  1748  035D  3F43               	moviw [3]fsr1
  1749  035E  00E0               	movwf	??_main+3
  1750  035F  30F5               	movlw	245
  1751  0360  0086               	movwf	6
  1752  0361  3022               	movlw	34
  1753  0362  0087               	movwf	7
  1754  0363  3146               	addfsr 1,6
  1755  0364  3F40               	moviw [0]fsr1
  1756  0365  00E1               	movwf	??_main+4
  1757  0366  3F41               	moviw [1]fsr1
  1758  0367  00E2               	movwf	??_main+5
  1759  0368  3F42               	moviw [2]fsr1
  1760  0369  00E3               	movwf	??_main+6
  1761  036A  3F43               	moviw [3]fsr1
  1762  036B  00E4               	movwf	??_main+7
  1763  036C  0860               	movf	??_main+3,w
  1764  036D  0264               	subwf	??_main+7,w
  1765  036E  1D03               	skipz
  1766  036F  2B7A               	goto	u2165
  1767  0370  085F               	movf	??_main+2,w
  1768  0371  0263               	subwf	??_main+6,w
  1769  0372  1D03               	skipz
  1770  0373  2B7A               	goto	u2165
  1771  0374  085E               	movf	??_main+1,w
  1772  0375  0262               	subwf	??_main+5,w
  1773  0376  1D03               	skipz
  1774  0377  2B7A               	goto	u2165
  1775  0378  085D               	movf	??_main,w
  1776  0379  0261               	subwf	??_main+4,w
  1777  037A                     u2165:
  1778  037A  1803               	skipnc
  1779  037B  2B84               	goto	l184
  1780  037C  30F5               	movlw	245
  1781  037D  0086               	movwf	6
  1782  037E  3022               	movlw	34
  1783  037F  0087               	movwf	7
  1784  0380  3143               	addfsr 1,3
  1785  0381  0301               	decf	1,w
  1786  0382  1903               	btfsc	3,2
  1787  0383  2AFE               	goto	l182
  1788  0384                     l184:
  1789                           
  1790                           ;main.c: 436: };main.c: 437: LATAbits.LATA6 = 0;
  1791  0384  0022               	movlb	2	; select bank2
  1792  0385  130C               	bcf	12,6	;volatile
  1793  0386  2C98               	goto	l2450
  1794  0387                     l189:	
  1795                           ;main.c: 439: break;
  1796                           
  1797                           ;main.c: 438: I2C_buffer.data.dispense = 0;
  1798                           
  1799                           
  1800                           ;main.c: 442: LATAbits.LATA7 = 1;
  1801  0387  0022               	movlb	2	; select bank2
  1802  0388  178C               	bsf	12,7	;volatile
  1803                           
  1804                           ;main.c: 443: I2C_buffer.data.time++;
  1805  0389  30F5               	movlw	245
  1806  038A  0086               	movwf	6
  1807  038B  3022               	movlw	34
  1808  038C  0087               	movwf	7
  1809  038D  314A               	addfsr 1,10
  1810  038E  3001               	movlw	1
  1811  038F  0781               	addwf	1,f
  1812  0390  3141               	addfsr 1,1
  1813  0391  3000               	movlw	0
  1814  0392  3D81               	addwfc	1,f
  1815  0393  3141               	addfsr 1,1
  1816  0394  3000               	movlw	0
  1817  0395  3D81               	addwfc	1,f
  1818  0396  3141               	addfsr 1,1
  1819  0397  3000               	movlw	0
  1820  0398  3D81               	addwfc	1,f
  1821                           
  1822                           ;main.c: 444: _delay((unsigned long)((1)*(32000000/4000.0)));
  1823  0399  300B               	movlw	11
  1824  039A  0020               	movlb	0	; select bank0
  1825  039B  00DD               	movwf	??_main
  1826  039C  3062               	movlw	98
  1827  039D                     u2387:
  1828  039D  0B89               	decfsz	9,f
  1829  039E  2B9D               	goto	u2387
  1830  039F  0BDD               	decfsz	??_main,f
  1831  03A0  2B9D               	goto	u2387
  1832  03A1  0000               	nop
  1833  03A2  0064               	clrwdt	;# 
  1834                           
  1835                           ;main.c: 446: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected3 == 1) brea
      +                          k;
  1836  03A3  30F5               	movlw	245
  1837  03A4  0086               	movwf	6
  1838  03A5  3022               	movlw	34
  1839  03A6  0087               	movwf	7
  1840  03A7  314E               	addfsr 1,14
  1841  03A8  0301               	decf	1,w
  1842  03A9  1D03               	btfss	3,2
  1843  03AA  2BB2               	goto	l2424
  1844  03AB  307C               	movlw	124
  1845  03AC  0086               	movwf	6
  1846  03AD  3023               	movlw	35
  1847  03AE  0087               	movwf	7
  1848  03AF  0301               	decf	1,w
  1849  03B0  1903               	btfsc	3,2
  1850  03B1  2C0D               	goto	l191
  1851  03B2                     l2424:
  1852  03B2  30A2               	movlw	162
  1853  03B3  0086               	movwf	6
  1854  03B4  3023               	movlw	35
  1855  03B5  0087               	movwf	7
  1856  03B6  3F40               	moviw [0]fsr1
  1857  03B7  0020               	movlb	0	; select bank0
  1858  03B8  00DD               	movwf	??_main
  1859  03B9  3F41               	moviw [1]fsr1
  1860  03BA  00DE               	movwf	??_main+1
  1861  03BB  3F42               	moviw [2]fsr1
  1862  03BC  00DF               	movwf	??_main+2
  1863  03BD  3F43               	moviw [3]fsr1
  1864  03BE  00E0               	movwf	??_main+3
  1865  03BF  30F5               	movlw	245
  1866  03C0  0086               	movwf	6
  1867  03C1  3022               	movlw	34
  1868  03C2  0087               	movwf	7
  1869  03C3  314A               	addfsr 1,10
  1870  03C4  3F40               	moviw [0]fsr1
  1871  03C5  00E1               	movwf	??_main+4
  1872  03C6  3F41               	moviw [1]fsr1
  1873  03C7  00E2               	movwf	??_main+5
  1874  03C8  3F42               	moviw [2]fsr1
  1875  03C9  00E3               	movwf	??_main+6
  1876  03CA  3F43               	moviw [3]fsr1
  1877  03CB  00E4               	movwf	??_main+7
  1878  03CC  0860               	movf	??_main+3,w
  1879  03CD  0264               	subwf	??_main+7,w
  1880  03CE  1D03               	skipz
  1881  03CF  2BDA               	goto	u2205
  1882  03D0  085F               	movf	??_main+2,w
  1883  03D1  0263               	subwf	??_main+6,w
  1884  03D2  1D03               	skipz
  1885  03D3  2BDA               	goto	u2205
  1886  03D4  085E               	movf	??_main+1,w
  1887  03D5  0262               	subwf	??_main+5,w
  1888  03D6  1D03               	skipz
  1889  03D7  2BDA               	goto	u2205
  1890  03D8  085D               	movf	??_main,w
  1891  03D9  0261               	subwf	??_main+4,w
  1892  03DA                     u2205:
  1893  03DA  1803               	skipnc
  1894  03DB  2C0D               	goto	l191
  1895  03DC  30A6               	movlw	166
  1896  03DD  0086               	movwf	6
  1897  03DE  3023               	movlw	35
  1898  03DF  0087               	movwf	7
  1899  03E0  3F40               	moviw [0]fsr1
  1900  03E1  00DD               	movwf	??_main
  1901  03E2  3F41               	moviw [1]fsr1
  1902  03E3  00DE               	movwf	??_main+1
  1903  03E4  3F42               	moviw [2]fsr1
  1904  03E5  00DF               	movwf	??_main+2
  1905  03E6  3F43               	moviw [3]fsr1
  1906  03E7  00E0               	movwf	??_main+3
  1907  03E8  30F5               	movlw	245
  1908  03E9  0086               	movwf	6
  1909  03EA  3022               	movlw	34
  1910  03EB  0087               	movwf	7
  1911  03EC  3146               	addfsr 1,6
  1912  03ED  3F40               	moviw [0]fsr1
  1913  03EE  00E1               	movwf	??_main+4
  1914  03EF  3F41               	moviw [1]fsr1
  1915  03F0  00E2               	movwf	??_main+5
  1916  03F1  3F42               	moviw [2]fsr1
  1917  03F2  00E3               	movwf	??_main+6
  1918  03F3  3F43               	moviw [3]fsr1
  1919  03F4  00E4               	movwf	??_main+7
  1920  03F5  0860               	movf	??_main+3,w
  1921  03F6  0264               	subwf	??_main+7,w
  1922  03F7  1D03               	skipz
  1923  03F8  2C03               	goto	u2215
  1924  03F9  085F               	movf	??_main+2,w
  1925  03FA  0263               	subwf	??_main+6,w
  1926  03FB  1D03               	skipz
  1927  03FC  2C03               	goto	u2215
  1928  03FD  085E               	movf	??_main+1,w
  1929  03FE  0262               	subwf	??_main+5,w
  1930  03FF  1D03               	skipz
  1931  0400  2C03               	goto	u2215
  1932  0401  085D               	movf	??_main,w
  1933  0402  0261               	subwf	??_main+4,w
  1934  0403                     u2215:
  1935  0403  1803               	skipnc
  1936  0404  2C0D               	goto	l191
  1937  0405  30F5               	movlw	245
  1938  0406  0086               	movwf	6
  1939  0407  3022               	movlw	34
  1940  0408  0087               	movwf	7
  1941  0409  3143               	addfsr 1,3
  1942  040A  0301               	decf	1,w
  1943  040B  1903               	btfsc	3,2
  1944  040C  2B87               	goto	l189
  1945  040D                     l191:
  1946                           
  1947                           ;main.c: 447: };main.c: 448: LATAbits.LATA7 = 0;
  1948  040D  0022               	movlb	2	; select bank2
  1949  040E  138C               	bcf	12,7	;volatile
  1950  040F  2C98               	goto	l2450
  1951  0410                     l196:	
  1952                           ;main.c: 450: break;
  1953                           
  1954                           ;main.c: 449: I2C_buffer.data.dispense = 0;
  1955                           
  1956                           
  1957                           ;main.c: 453: LATBbits.LATB5 = 1;
  1958  0410  0022               	movlb	2	; select bank2
  1959  0411  168D               	bsf	13,5	;volatile
  1960                           
  1961                           ;main.c: 454: I2C_buffer.data.time++;
  1962  0412  30F5               	movlw	245
  1963  0413  0086               	movwf	6
  1964  0414  3022               	movlw	34
  1965  0415  0087               	movwf	7
  1966  0416  314A               	addfsr 1,10
  1967  0417  3001               	movlw	1
  1968  0418  0781               	addwf	1,f
  1969  0419  3141               	addfsr 1,1
  1970  041A  3000               	movlw	0
  1971  041B  3D81               	addwfc	1,f
  1972  041C  3141               	addfsr 1,1
  1973  041D  3000               	movlw	0
  1974  041E  3D81               	addwfc	1,f
  1975  041F  3141               	addfsr 1,1
  1976  0420  3000               	movlw	0
  1977  0421  3D81               	addwfc	1,f
  1978                           
  1979                           ;main.c: 455: _delay((unsigned long)((1)*(32000000/4000.0)));
  1980  0422  300B               	movlw	11
  1981  0423  0020               	movlb	0	; select bank0
  1982  0424  00DD               	movwf	??_main
  1983  0425  3062               	movlw	98
  1984  0426                     u2397:
  1985  0426  0B89               	decfsz	9,f
  1986  0427  2C26               	goto	u2397
  1987  0428  0BDD               	decfsz	??_main,f
  1988  0429  2C26               	goto	u2397
  1989  042A  0000               	nop
  1990  042B  0064               	clrwdt	;# 
  1991                           
  1992                           ;main.c: 457: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected4 == 1) brea
      +                          k;
  1993  042C  30F5               	movlw	245
  1994  042D  0086               	movwf	6
  1995  042E  3022               	movlw	34
  1996  042F  0087               	movwf	7
  1997  0430  314E               	addfsr 1,14
  1998  0431  0301               	decf	1,w
  1999  0432  1D03               	btfss	3,2
  2000  0433  2C3B               	goto	l2442
  2001  0434  30B6               	movlw	182
  2002  0435  0086               	movwf	6
  2003  0436  3023               	movlw	35
  2004  0437  0087               	movwf	7
  2005  0438  0301               	decf	1,w
  2006  0439  1903               	btfsc	3,2
  2007  043A  2C96               	goto	l198
  2008  043B                     l2442:
  2009  043B  30DC               	movlw	220
  2010  043C  0086               	movwf	6
  2011  043D  3023               	movlw	35
  2012  043E  0087               	movwf	7
  2013  043F  3F40               	moviw [0]fsr1
  2014  0440  0020               	movlb	0	; select bank0
  2015  0441  00DD               	movwf	??_main
  2016  0442  3F41               	moviw [1]fsr1
  2017  0443  00DE               	movwf	??_main+1
  2018  0444  3F42               	moviw [2]fsr1
  2019  0445  00DF               	movwf	??_main+2
  2020  0446  3F43               	moviw [3]fsr1
  2021  0447  00E0               	movwf	??_main+3
  2022  0448  30F5               	movlw	245
  2023  0449  0086               	movwf	6
  2024  044A  3022               	movlw	34
  2025  044B  0087               	movwf	7
  2026  044C  314A               	addfsr 1,10
  2027  044D  3F40               	moviw [0]fsr1
  2028  044E  00E1               	movwf	??_main+4
  2029  044F  3F41               	moviw [1]fsr1
  2030  0450  00E2               	movwf	??_main+5
  2031  0451  3F42               	moviw [2]fsr1
  2032  0452  00E3               	movwf	??_main+6
  2033  0453  3F43               	moviw [3]fsr1
  2034  0454  00E4               	movwf	??_main+7
  2035  0455  0860               	movf	??_main+3,w
  2036  0456  0264               	subwf	??_main+7,w
  2037  0457  1D03               	skipz
  2038  0458  2C63               	goto	u2255
  2039  0459  085F               	movf	??_main+2,w
  2040  045A  0263               	subwf	??_main+6,w
  2041  045B  1D03               	skipz
  2042  045C  2C63               	goto	u2255
  2043  045D  085E               	movf	??_main+1,w
  2044  045E  0262               	subwf	??_main+5,w
  2045  045F  1D03               	skipz
  2046  0460  2C63               	goto	u2255
  2047  0461  085D               	movf	??_main,w
  2048  0462  0261               	subwf	??_main+4,w
  2049  0463                     u2255:
  2050  0463  1803               	skipnc
  2051  0464  2C96               	goto	l198
  2052  0465  30E0               	movlw	224
  2053  0466  0086               	movwf	6
  2054  0467  3023               	movlw	35
  2055  0468  0087               	movwf	7
  2056  0469  3F40               	moviw [0]fsr1
  2057  046A  00DD               	movwf	??_main
  2058  046B  3F41               	moviw [1]fsr1
  2059  046C  00DE               	movwf	??_main+1
  2060  046D  3F42               	moviw [2]fsr1
  2061  046E  00DF               	movwf	??_main+2
  2062  046F  3F43               	moviw [3]fsr1
  2063  0470  00E0               	movwf	??_main+3
  2064  0471  30F5               	movlw	245
  2065  0472  0086               	movwf	6
  2066  0473  3022               	movlw	34
  2067  0474  0087               	movwf	7
  2068  0475  3146               	addfsr 1,6
  2069  0476  3F40               	moviw [0]fsr1
  2070  0477  00E1               	movwf	??_main+4
  2071  0478  3F41               	moviw [1]fsr1
  2072  0479  00E2               	movwf	??_main+5
  2073  047A  3F42               	moviw [2]fsr1
  2074  047B  00E3               	movwf	??_main+6
  2075  047C  3F43               	moviw [3]fsr1
  2076  047D  00E4               	movwf	??_main+7
  2077  047E  0860               	movf	??_main+3,w
  2078  047F  0264               	subwf	??_main+7,w
  2079  0480  1D03               	skipz
  2080  0481  2C8C               	goto	u2265
  2081  0482  085F               	movf	??_main+2,w
  2082  0483  0263               	subwf	??_main+6,w
  2083  0484  1D03               	skipz
  2084  0485  2C8C               	goto	u2265
  2085  0486  085E               	movf	??_main+1,w
  2086  0487  0262               	subwf	??_main+5,w
  2087  0488  1D03               	skipz
  2088  0489  2C8C               	goto	u2265
  2089  048A  085D               	movf	??_main,w
  2090  048B  0261               	subwf	??_main+4,w
  2091  048C                     u2265:
  2092  048C  1803               	skipnc
  2093  048D  2C96               	goto	l198
  2094  048E  30F5               	movlw	245
  2095  048F  0086               	movwf	6
  2096  0490  3022               	movlw	34
  2097  0491  0087               	movwf	7
  2098  0492  3143               	addfsr 1,3
  2099  0493  0301               	decf	1,w
  2100  0494  1903               	btfsc	3,2
  2101  0495  2C10               	goto	l196
  2102  0496                     l198:
  2103                           
  2104                           ;main.c: 458: };main.c: 459: LATBbits.LATB5 = 0;
  2105  0496  0022               	movlb	2	; select bank2
  2106  0497  128D               	bcf	13,5	;volatile
  2107  0498                     l2450:	
  2108                           ;main.c: 461: break;
  2109                           
  2110                           ;main.c: 460: I2C_buffer.data.dispense = 0;
  2111                           
  2112                           
  2113                           ;main.c: 463: I2C_buffer.data.dispense = 0;
  2114  0498  30F5               	movlw	245
  2115  0499  0086               	movwf	6
  2116  049A  3022               	movlw	34
  2117  049B  0087               	movwf	7
  2118  049C  3143               	addfsr 1,3
  2119  049D  0181               	clrf	1
  2120                           
  2121                           ;main.c: 464: break;
  2122  049E  2CB2               	goto	l2456
  2123  049F                     l2454:
  2124  049F  30F5               	movlw	245
  2125  04A0  0086               	movwf	6
  2126  04A1  3022               	movlw	34
  2127  04A2  0087               	movwf	7
  2128  04A3  3144               	addfsr 1,4
  2129  04A4  0801               	movf	1,w
  2130                           
  2131                           ; Switch size 1, requested type "simple"
  2132                           ; Number of cases is 4, Range of values is 1 to 4
  2133                           ; switch strategies available:
  2134                           ; Name         Instructions Cycles
  2135                           ; simple_byte           13     7 (average)
  2136                           ; direct_byte           17     9 (fixed)
  2137                           ; jumptable            263     9 (fixed)
  2138                           ;	Chosen strategy is simple_byte
  2139  04A5  3A01               	xorlw	1	; case 1
  2140  04A6  1903               	skipnz
  2141  04A7  2AA0               	goto	l2388
  2142  04A8  3A03               	xorlw	3	; case 2
  2143  04A9  1903               	skipnz
  2144  04AA  2B29               	goto	l2406
  2145  04AB  3A01               	xorlw	1	; case 3
  2146  04AC  1903               	skipnz
  2147  04AD  2BB2               	goto	l2424
  2148  04AE  3A07               	xorlw	7	; case 4
  2149  04AF  1903               	skipnz
  2150  04B0  2C3B               	goto	l2442
  2151  04B1  2C98               	goto	l2450
  2152  04B2                     l2456:
  2153                           
  2154                           ;main.c: 466: I2C_buffer.data.selected = 0;
  2155  04B2  30F5               	movlw	245
  2156  04B3  0086               	movwf	6
  2157  04B4  3022               	movlw	34
  2158  04B5  0087               	movwf	7
  2159  04B6  3144               	addfsr 1,4
  2160  04B7  0181               	clrf	1
  2161  04B8                     l2458:
  2162                           
  2163                           ;main.c: 467: };main.c: 469: if (I2C_buffer.data.relay1 == 1) {
  2164  04B8  30F5               	movlw	245
  2165  04B9  0086               	movwf	6
  2166  04BA  3022               	movlw	34
  2167  04BB  0087               	movwf	7
  2168  04BC  314F               	addfsr 1,15
  2169  04BD  0301               	decf	1,w
  2170  04BE  1D03               	btfss	3,2
  2171  04BF  2CC3               	goto	l202
  2172                           
  2173                           ;main.c: 470: LATAbits.LATA4 = 1;
  2174  04C0  0022               	movlb	2	; select bank2
  2175  04C1  160C               	bsf	12,4	;volatile
  2176                           
  2177                           ;main.c: 471: } else {
  2178  04C2  2CC5               	goto	l2462
  2179  04C3                     l202:
  2180                           
  2181                           ;main.c: 472: LATAbits.LATA4 = 0;
  2182  04C3  0022               	movlb	2	; select bank2
  2183  04C4  120C               	bcf	12,4	;volatile
  2184  04C5                     l2462:
  2185                           
  2186                           ;main.c: 473: };main.c: 475: if (I2C_buffer.data.relay2 == 1) {
  2187  04C5  30F5               	movlw	245
  2188  04C6  0086               	movwf	6
  2189  04C7  3022               	movlw	34
  2190  04C8  0087               	movwf	7
  2191  04C9  3150               	addfsr 1,16
  2192  04CA  0301               	decf	1,w
  2193  04CB  1D03               	btfss	3,2
  2194  04CC  2CCF               	goto	l204
  2195                           
  2196                           ;main.c: 476: LATAbits.LATA6 = 1;
  2197  04CD  170C               	bsf	12,6	;volatile
  2198                           
  2199                           ;main.c: 477: } else {
  2200  04CE  2CD0               	goto	l2466
  2201  04CF                     l204:
  2202                           
  2203                           ;main.c: 478: LATAbits.LATA6 = 0;
  2204  04CF  130C               	bcf	12,6	;volatile
  2205  04D0                     l2466:
  2206                           
  2207                           ;main.c: 479: };main.c: 481: if (I2C_buffer.data.relay3 == 1) {
  2208  04D0  30F5               	movlw	245
  2209  04D1  0086               	movwf	6
  2210  04D2  3022               	movlw	34
  2211  04D3  0087               	movwf	7
  2212  04D4  3151               	addfsr 1,17
  2213  04D5  0301               	decf	1,w
  2214  04D6  1D03               	btfss	3,2
  2215  04D7  2CDA               	goto	l206
  2216                           
  2217                           ;main.c: 482: LATAbits.LATA7 = 1;
  2218  04D8  178C               	bsf	12,7	;volatile
  2219                           
  2220                           ;main.c: 483: } else {
  2221  04D9  2CDB               	goto	l2470
  2222  04DA                     l206:
  2223                           
  2224                           ;main.c: 484: LATAbits.LATA7 = 0;
  2225  04DA  138C               	bcf	12,7	;volatile
  2226  04DB                     l2470:
  2227                           
  2228                           ;main.c: 485: };main.c: 487: if (I2C_buffer.data.relay4 == 1) {
  2229  04DB  30F5               	movlw	245
  2230  04DC  0086               	movwf	6
  2231  04DD  3022               	movlw	34
  2232  04DE  0087               	movwf	7
  2233  04DF  3152               	addfsr 1,18
  2234  04E0  0301               	decf	1,w
  2235  04E1  1D03               	btfss	3,2
  2236  04E2  2CE5               	goto	l208
  2237                           
  2238                           ;main.c: 488: LATBbits.LATB5 = 1;
  2239  04E3  168D               	bsf	13,5	;volatile
  2240                           
  2241                           ;main.c: 489: } else {
  2242  04E4  2CE6               	goto	l2474
  2243  04E5                     l208:
  2244                           
  2245                           ;main.c: 490: LATBbits.LATB5 = 0;
  2246  04E5  128D               	bcf	13,5	;volatile
  2247  04E6                     l2474:
  2248                           
  2249                           ;main.c: 491: };main.c: 493: if (readADC == 1) {
  2250  04E6  0020               	movlb	0	; select bank0
  2251  04E7  036D               	decf	_readADC,w
  2252  04E8  1D03               	btfss	3,2
  2253  04E9  29AA               	goto	l159
  2254                           
  2255                           ;main.c: 494: if (average < 10) {
  2256  04EA  300A               	movlw	10
  2257  04EB  026E               	subwf	_average,w
  2258  04EC  1803               	skipnc
  2259  04ED  2D17               	goto	l2482
  2260                           
  2261                           ;main.c: 495: stock1 += ADC_read(0x00);
  2262  04EE  3000               	movlw	0
  2263  04EF  318E  26E3  3181   	fcall	_ADC_read
  2264  04F2  0872               	movf	?_ADC_read,w
  2265  04F3  0020               	movlb	0	; select bank0
  2266  04F4  07EB               	addwf	_stock1,f
  2267  04F5  0873               	movf	?_ADC_read+1,w
  2268  04F6  3DEC               	addwfc	_stock1+1,f
  2269                           
  2270                           ;main.c: 496: stock2 += ADC_read(0x01);
  2271  04F7  3001               	movlw	1
  2272  04F8  318E  26E3  3181   	fcall	_ADC_read
  2273  04FB  0872               	movf	?_ADC_read,w
  2274  04FC  0020               	movlb	0	; select bank0
  2275  04FD  07E9               	addwf	_stock2,f
  2276  04FE  0873               	movf	?_ADC_read+1,w
  2277  04FF  3DEA               	addwfc	_stock2+1,f
  2278                           
  2279                           ;main.c: 497: stock3 += ADC_read(0x02);
  2280  0500  3002               	movlw	2
  2281  0501  318E  26E3  3181   	fcall	_ADC_read
  2282  0504  0872               	movf	?_ADC_read,w
  2283  0505  0020               	movlb	0	; select bank0
  2284  0506  07E7               	addwf	_stock3,f
  2285  0507  0873               	movf	?_ADC_read+1,w
  2286  0508  3DE8               	addwfc	_stock3+1,f
  2287                           
  2288                           ;main.c: 498: stock4 += ADC_read(0x03);
  2289  0509  3003               	movlw	3
  2290  050A  318E  26E3  3181   	fcall	_ADC_read
  2291  050D  0872               	movf	?_ADC_read,w
  2292  050E  07A4               	addwf	_stock4^(0+128),f
  2293  050F  0873               	movf	?_ADC_read+1,w
  2294  0510  3DA5               	addwfc	(_stock4+1)^(0+128),f
  2295                           
  2296                           ;main.c: 499: average++;
  2297  0511  3001               	movlw	1
  2298  0512  0020               	movlb	0	; select bank0
  2299  0513  00DD               	movwf	??_main
  2300  0514  085D               	movf	??_main,w
  2301  0515  07EE               	addwf	_average,f
  2302                           
  2303                           ;main.c: 500: } else {
  2304  0516  29AA               	goto	l159
  2305  0517                     l2482:
  2306                           
  2307                           ;main.c: 501: if (I2C_buffer.data.calibrate == 1) {
  2308  0517  30F5               	movlw	245
  2309  0518  0086               	movwf	6
  2310  0519  3022               	movlw	34
  2311  051A  0087               	movwf	7
  2312  051B  314E               	addfsr 1,14
  2313  051C  0301               	decf	1,w
  2314  051D  1D03               	btfss	3,2
  2315  051E  2D6D               	goto	l2486
  2316                           
  2317                           ;main.c: 502: I2C_buffer.data.stock1 = stock1 / 10;
  2318  051F  300A               	movlw	10
  2319  0520  00F2               	movwf	___lwdiv@divisor
  2320  0521  3000               	movlw	0
  2321  0522  00F3               	movwf	___lwdiv@divisor+1
  2322  0523  086C               	movf	_stock1+1,w
  2323  0524  00F5               	movwf	___lwdiv@dividend+1
  2324  0525  086B               	movf	_stock1,w
  2325  0526  00F4               	movwf	___lwdiv@dividend
  2326  0527  3187  27B0  3181   	fcall	___lwdiv
  2327  052A  303A               	movlw	58
  2328  052B  0086               	movwf	6
  2329  052C  3023               	movlw	35
  2330  052D  0087               	movwf	7
  2331  052E  0872               	movf	?___lwdiv,w
  2332  052F  3FC0               	movwi [0]fsr1
  2333  0530  0873               	movf	?___lwdiv+1,w
  2334  0531  3FC1               	movwi [1]fsr1
  2335                           
  2336                           ;main.c: 503: I2C_buffer.data.stock2 = stock2 / 10;
  2337  0532  300A               	movlw	10
  2338  0533  00F2               	movwf	___lwdiv@divisor
  2339  0534  3000               	movlw	0
  2340  0535  00F3               	movwf	___lwdiv@divisor+1
  2341  0536  086A               	movf	_stock2+1,w
  2342  0537  00F5               	movwf	___lwdiv@dividend+1
  2343  0538  0869               	movf	_stock2,w
  2344  0539  00F4               	movwf	___lwdiv@dividend
  2345  053A  3187  27B0  3181   	fcall	___lwdiv
  2346  053D  3074               	movlw	116
  2347  053E  0086               	movwf	6
  2348  053F  3023               	movlw	35
  2349  0540  0087               	movwf	7
  2350  0541  0872               	movf	?___lwdiv,w
  2351  0542  3FC0               	movwi [0]fsr1
  2352  0543  0873               	movf	?___lwdiv+1,w
  2353  0544  3FC1               	movwi [1]fsr1
  2354                           
  2355                           ;main.c: 504: I2C_buffer.data.stock3 = stock3 / 10;
  2356  0545  300A               	movlw	10
  2357  0546  00F2               	movwf	___lwdiv@divisor
  2358  0547  3000               	movlw	0
  2359  0548  00F3               	movwf	___lwdiv@divisor+1
  2360  0549  0868               	movf	_stock3+1,w
  2361  054A  00F5               	movwf	___lwdiv@dividend+1
  2362  054B  0867               	movf	_stock3,w
  2363  054C  00F4               	movwf	___lwdiv@dividend
  2364  054D  3187  27B0  3181   	fcall	___lwdiv
  2365  0550  30AE               	movlw	174
  2366  0551  0086               	movwf	6
  2367  0552  3023               	movlw	35
  2368  0553  0087               	movwf	7
  2369  0554  0872               	movf	?___lwdiv,w
  2370  0555  3FC0               	movwi [0]fsr1
  2371  0556  0873               	movf	?___lwdiv+1,w
  2372  0557  3FC1               	movwi [1]fsr1
  2373                           
  2374                           ;main.c: 505: I2C_buffer.data.stock4 = stock4 / 10;
  2375  0558  300A               	movlw	10
  2376  0559  00F2               	movwf	___lwdiv@divisor
  2377  055A  3000               	movlw	0
  2378  055B  00F3               	movwf	___lwdiv@divisor+1
  2379  055C  0021               	movlb	1	; select bank1
  2380  055D  0825               	movf	(_stock4+1)^(0+128),w
  2381  055E  00F5               	movwf	___lwdiv@dividend+1
  2382  055F  0824               	movf	_stock4^(0+128),w
  2383  0560  00F4               	movwf	___lwdiv@dividend
  2384  0561  3187  27B0  3181   	fcall	___lwdiv
  2385  0564  30E8               	movlw	232
  2386  0565  0086               	movwf	6
  2387  0566  3023               	movlw	35
  2388  0567  0087               	movwf	7
  2389  0568  0872               	movf	?___lwdiv,w
  2390  0569  3FC0               	movwi [0]fsr1
  2391  056A  0873               	movf	?___lwdiv+1,w
  2392  056B  3FC1               	movwi [1]fsr1
  2393                           
  2394                           ;main.c: 506: } else {
  2395  056C  2EC6               	goto	l2488
  2396  056D                     l2486:
  2397                           
  2398                           ;main.c: 507: I2C_buffer.data.stock1 = map((stock1 / 10), I2C_buffer.data.emptyLevel1, I
      +                          2C_buffer.data.fullLevel1, 0, I2C_buffer.data.capacity1);
  2399  056D  300A               	movlw	10
  2400  056E  00F2               	movwf	___lwdiv@divisor
  2401  056F  3000               	movlw	0
  2402  0570  00F3               	movwf	___lwdiv@divisor+1
  2403  0571  086C               	movf	_stock1+1,w
  2404  0572  00F5               	movwf	___lwdiv@dividend+1
  2405  0573  086B               	movf	_stock1,w
  2406  0574  00F4               	movwf	___lwdiv@dividend
  2407  0575  3187  27B0  3181   	fcall	___lwdiv
  2408  0578  0872               	movf	?___lwdiv,w
  2409  0579  00DD               	movwf	??_main
  2410  057A  0873               	movf	?___lwdiv+1,w
  2411  057B  00DE               	movwf	??_main+1
  2412  057C  01DF               	clrf	??_main+2
  2413  057D  01E0               	clrf	??_main+3
  2414  057E  0860               	movf	??_main+3,w
  2415  057F  00B8               	movwf	map@x+3
  2416  0580  085F               	movf	??_main+2,w
  2417  0581  00B7               	movwf	map@x+2
  2418  0582  085E               	movf	??_main+1,w
  2419  0583  00B6               	movwf	map@x+1
  2420  0584  085D               	movf	??_main,w
  2421  0585  00B5               	movwf	map@x
  2422  0586  303E               	movlw	62
  2423  0587  0086               	movwf	6
  2424  0588  3023               	movlw	35
  2425  0589  0087               	movwf	7
  2426  058A  3F40               	moviw [0]fsr1
  2427  058B  00E1               	movwf	??_main+4
  2428  058C  3F41               	moviw [1]fsr1
  2429  058D  00E2               	movwf	??_main+5
  2430  058E  0861               	movf	??_main+4,w
  2431  058F  00B9               	movwf	map@in_min
  2432  0590  0862               	movf	??_main+5,w
  2433  0591  00BA               	movwf	map@in_min+1
  2434  0592  01BB               	clrf	map@in_min+2
  2435  0593  01BC               	clrf	map@in_min+3
  2436  0594  3040               	movlw	64
  2437  0595  0086               	movwf	6
  2438  0596  3023               	movlw	35
  2439  0597  0087               	movwf	7
  2440  0598  3F40               	moviw [0]fsr1
  2441  0599  00E3               	movwf	??_main+6
  2442  059A  3F41               	moviw [1]fsr1
  2443  059B  00E4               	movwf	??_main+7
  2444  059C  0863               	movf	??_main+6,w
  2445  059D  00BD               	movwf	map@in_max
  2446  059E  0864               	movf	??_main+7,w
  2447  059F  00BE               	movwf	map@in_max+1
  2448  05A0  01BF               	clrf	map@in_max+2
  2449  05A1  01C0               	clrf	map@in_max+3
  2450  05A2  3000               	movlw	0
  2451  05A3  00C4               	movwf	map@out_min+3
  2452  05A4  3000               	movlw	0
  2453  05A5  00C3               	movwf	map@out_min+2
  2454  05A6  3000               	movlw	0
  2455  05A7  00C2               	movwf	map@out_min+1
  2456  05A8  3000               	movlw	0
  2457  05A9  00C1               	movwf	map@out_min
  2458  05AA  303C               	movlw	60
  2459  05AB  0086               	movwf	6
  2460  05AC  3023               	movlw	35
  2461  05AD  0087               	movwf	7
  2462  05AE  3F40               	moviw [0]fsr1
  2463  05AF  00E5               	movwf	??_main+8
  2464  05B0  3F41               	moviw [1]fsr1
  2465  05B1  00E6               	movwf	??_main+9
  2466  05B2  0865               	movf	??_main+8,w
  2467  05B3  00C5               	movwf	map@out_max
  2468  05B4  0866               	movf	??_main+9,w
  2469  05B5  00C6               	movwf	map@out_max+1
  2470  05B6  01C7               	clrf	map@out_max+2
  2471  05B7  01C8               	clrf	map@out_max+3
  2472  05B8  318F  27A2  3181   	fcall	_map
  2473  05BB  303A               	movlw	58
  2474  05BC  0086               	movwf	6
  2475  05BD  3023               	movlw	35
  2476  05BE  0087               	movwf	7
  2477  05BF  0835               	movf	?_map,w
  2478  05C0  3FC0               	movwi [0]fsr1
  2479  05C1  0836               	movf	?_map+1,w
  2480  05C2  3FC1               	movwi [1]fsr1
  2481                           
  2482                           ;main.c: 508: I2C_buffer.data.stock2 = map((stock2 / 10), I2C_buffer.data.emptyLevel2, I
      +                          2C_buffer.data.fullLevel2, 0, I2C_buffer.data.capacity2);
  2483  05C3  300A               	movlw	10
  2484  05C4  00F2               	movwf	___lwdiv@divisor
  2485  05C5  3000               	movlw	0
  2486  05C6  00F3               	movwf	___lwdiv@divisor+1
  2487  05C7  086A               	movf	_stock2+1,w
  2488  05C8  00F5               	movwf	___lwdiv@dividend+1
  2489  05C9  0869               	movf	_stock2,w
  2490  05CA  00F4               	movwf	___lwdiv@dividend
  2491  05CB  3187  27B0  3181   	fcall	___lwdiv
  2492  05CE  0872               	movf	?___lwdiv,w
  2493  05CF  00DD               	movwf	??_main
  2494  05D0  0873               	movf	?___lwdiv+1,w
  2495  05D1  00DE               	movwf	??_main+1
  2496  05D2  01DF               	clrf	??_main+2
  2497  05D3  01E0               	clrf	??_main+3
  2498  05D4  0860               	movf	??_main+3,w
  2499  05D5  00B8               	movwf	map@x+3
  2500  05D6  085F               	movf	??_main+2,w
  2501  05D7  00B7               	movwf	map@x+2
  2502  05D8  085E               	movf	??_main+1,w
  2503  05D9  00B6               	movwf	map@x+1
  2504  05DA  085D               	movf	??_main,w
  2505  05DB  00B5               	movwf	map@x
  2506  05DC  3078               	movlw	120
  2507  05DD  0086               	movwf	6
  2508  05DE  3023               	movlw	35
  2509  05DF  0087               	movwf	7
  2510  05E0  3F40               	moviw [0]fsr1
  2511  05E1  00E1               	movwf	??_main+4
  2512  05E2  3F41               	moviw [1]fsr1
  2513  05E3  00E2               	movwf	??_main+5
  2514  05E4  0861               	movf	??_main+4,w
  2515  05E5  00B9               	movwf	map@in_min
  2516  05E6  0862               	movf	??_main+5,w
  2517  05E7  00BA               	movwf	map@in_min+1
  2518  05E8  01BB               	clrf	map@in_min+2
  2519  05E9  01BC               	clrf	map@in_min+3
  2520  05EA  307A               	movlw	122
  2521  05EB  0086               	movwf	6
  2522  05EC  3023               	movlw	35
  2523  05ED  0087               	movwf	7
  2524  05EE  3F40               	moviw [0]fsr1
  2525  05EF  00E3               	movwf	??_main+6
  2526  05F0  3F41               	moviw [1]fsr1
  2527  05F1  00E4               	movwf	??_main+7
  2528  05F2  0863               	movf	??_main+6,w
  2529  05F3  00BD               	movwf	map@in_max
  2530  05F4  0864               	movf	??_main+7,w
  2531  05F5  00BE               	movwf	map@in_max+1
  2532  05F6  01BF               	clrf	map@in_max+2
  2533  05F7  01C0               	clrf	map@in_max+3
  2534  05F8  3000               	movlw	0
  2535  05F9  00C4               	movwf	map@out_min+3
  2536  05FA  3000               	movlw	0
  2537  05FB  00C3               	movwf	map@out_min+2
  2538  05FC  3000               	movlw	0
  2539  05FD  00C2               	movwf	map@out_min+1
  2540  05FE  3000               	movlw	0
  2541  05FF  00C1               	movwf	map@out_min
  2542  0600  3076               	movlw	118
  2543  0601  0086               	movwf	6
  2544  0602  3023               	movlw	35
  2545  0603  0087               	movwf	7
  2546  0604  3F40               	moviw [0]fsr1
  2547  0605  00E5               	movwf	??_main+8
  2548  0606  3F41               	moviw [1]fsr1
  2549  0607  00E6               	movwf	??_main+9
  2550  0608  0865               	movf	??_main+8,w
  2551  0609  00C5               	movwf	map@out_max
  2552  060A  0866               	movf	??_main+9,w
  2553  060B  00C6               	movwf	map@out_max+1
  2554  060C  01C7               	clrf	map@out_max+2
  2555  060D  01C8               	clrf	map@out_max+3
  2556  060E  318F  27A2  3181   	fcall	_map
  2557  0611  3074               	movlw	116
  2558  0612  0086               	movwf	6
  2559  0613  3023               	movlw	35
  2560  0614  0087               	movwf	7
  2561  0615  0835               	movf	?_map,w
  2562  0616  3FC0               	movwi [0]fsr1
  2563  0617  0836               	movf	?_map+1,w
  2564  0618  3FC1               	movwi [1]fsr1
  2565                           
  2566                           ;main.c: 509: I2C_buffer.data.stock3 = map((stock3 / 10), I2C_buffer.data.emptyLevel3, I
      +                          2C_buffer.data.fullLevel3, 0, I2C_buffer.data.capacity3);
  2567  0619  300A               	movlw	10
  2568  061A  00F2               	movwf	___lwdiv@divisor
  2569  061B  3000               	movlw	0
  2570  061C  00F3               	movwf	___lwdiv@divisor+1
  2571  061D  0868               	movf	_stock3+1,w
  2572  061E  00F5               	movwf	___lwdiv@dividend+1
  2573  061F  0867               	movf	_stock3,w
  2574  0620  00F4               	movwf	___lwdiv@dividend
  2575  0621  3187  27B0  3181   	fcall	___lwdiv
  2576  0624  0872               	movf	?___lwdiv,w
  2577  0625  00DD               	movwf	??_main
  2578  0626  0873               	movf	?___lwdiv+1,w
  2579  0627  00DE               	movwf	??_main+1
  2580  0628  01DF               	clrf	??_main+2
  2581  0629  01E0               	clrf	??_main+3
  2582  062A  0860               	movf	??_main+3,w
  2583  062B  00B8               	movwf	map@x+3
  2584  062C  085F               	movf	??_main+2,w
  2585  062D  00B7               	movwf	map@x+2
  2586  062E  085E               	movf	??_main+1,w
  2587  062F  00B6               	movwf	map@x+1
  2588  0630  085D               	movf	??_main,w
  2589  0631  00B5               	movwf	map@x
  2590  0632  30B2               	movlw	178
  2591  0633  0086               	movwf	6
  2592  0634  3023               	movlw	35
  2593  0635  0087               	movwf	7
  2594  0636  3F40               	moviw [0]fsr1
  2595  0637  00E1               	movwf	??_main+4
  2596  0638  3F41               	moviw [1]fsr1
  2597  0639  00E2               	movwf	??_main+5
  2598  063A  0861               	movf	??_main+4,w
  2599  063B  00B9               	movwf	map@in_min
  2600  063C  0862               	movf	??_main+5,w
  2601  063D  00BA               	movwf	map@in_min+1
  2602  063E  01BB               	clrf	map@in_min+2
  2603  063F  01BC               	clrf	map@in_min+3
  2604  0640  30B4               	movlw	180
  2605  0641  0086               	movwf	6
  2606  0642  3023               	movlw	35
  2607  0643  0087               	movwf	7
  2608  0644  3F40               	moviw [0]fsr1
  2609  0645  00E3               	movwf	??_main+6
  2610  0646  3F41               	moviw [1]fsr1
  2611  0647  00E4               	movwf	??_main+7
  2612  0648  0863               	movf	??_main+6,w
  2613  0649  00BD               	movwf	map@in_max
  2614  064A  0864               	movf	??_main+7,w
  2615  064B  00BE               	movwf	map@in_max+1
  2616  064C  01BF               	clrf	map@in_max+2
  2617  064D  01C0               	clrf	map@in_max+3
  2618  064E  3000               	movlw	0
  2619  064F  00C4               	movwf	map@out_min+3
  2620  0650  3000               	movlw	0
  2621  0651  00C3               	movwf	map@out_min+2
  2622  0652  3000               	movlw	0
  2623  0653  00C2               	movwf	map@out_min+1
  2624  0654  3000               	movlw	0
  2625  0655  00C1               	movwf	map@out_min
  2626  0656  30B0               	movlw	176
  2627  0657  0086               	movwf	6
  2628  0658  3023               	movlw	35
  2629  0659  0087               	movwf	7
  2630  065A  3F40               	moviw [0]fsr1
  2631  065B  00E5               	movwf	??_main+8
  2632  065C  3F41               	moviw [1]fsr1
  2633  065D  00E6               	movwf	??_main+9
  2634  065E  0865               	movf	??_main+8,w
  2635  065F  00C5               	movwf	map@out_max
  2636  0660  0866               	movf	??_main+9,w
  2637  0661  00C6               	movwf	map@out_max+1
  2638  0662  01C7               	clrf	map@out_max+2
  2639  0663  01C8               	clrf	map@out_max+3
  2640  0664  318F  27A2  3181   	fcall	_map
  2641  0667  30AE               	movlw	174
  2642  0668  0086               	movwf	6
  2643  0669  3023               	movlw	35
  2644  066A  0087               	movwf	7
  2645  066B  0835               	movf	?_map,w
  2646  066C  3FC0               	movwi [0]fsr1
  2647  066D  0836               	movf	?_map+1,w
  2648  066E  3FC1               	movwi [1]fsr1
  2649                           
  2650                           ;main.c: 510: I2C_buffer.data.stock4 = map((stock4 / 10), I2C_buffer.data.emptyLevel4, I
      +                          2C_buffer.data.fullLevel4, 0, I2C_buffer.data.capacity4);
  2651  066F  300A               	movlw	10
  2652  0670  00F2               	movwf	___lwdiv@divisor
  2653  0671  3000               	movlw	0
  2654  0672  00F3               	movwf	___lwdiv@divisor+1
  2655  0673  0021               	movlb	1	; select bank1
  2656  0674  0825               	movf	(_stock4+1)^(0+128),w
  2657  0675  00F5               	movwf	___lwdiv@dividend+1
  2658  0676  0824               	movf	_stock4^(0+128),w
  2659  0677  00F4               	movwf	___lwdiv@dividend
  2660  0678  3187  27B0  3181   	fcall	___lwdiv
  2661  067B  0872               	movf	?___lwdiv,w
  2662  067C  00DD               	movwf	??_main
  2663  067D  0873               	movf	?___lwdiv+1,w
  2664  067E  00DE               	movwf	??_main+1
  2665  067F  01DF               	clrf	??_main+2
  2666  0680  01E0               	clrf	??_main+3
  2667  0681  0860               	movf	??_main+3,w
  2668  0682  00B8               	movwf	map@x+3
  2669  0683  085F               	movf	??_main+2,w
  2670  0684  00B7               	movwf	map@x+2
  2671  0685  085E               	movf	??_main+1,w
  2672  0686  00B6               	movwf	map@x+1
  2673  0687  085D               	movf	??_main,w
  2674  0688  00B5               	movwf	map@x
  2675  0689  30EC               	movlw	236
  2676  068A  0086               	movwf	6
  2677  068B  3023               	movlw	35
  2678  068C  0087               	movwf	7
  2679  068D  3F40               	moviw [0]fsr1
  2680  068E  00E1               	movwf	??_main+4
  2681  068F  3F41               	moviw [1]fsr1
  2682  0690  00E2               	movwf	??_main+5
  2683  0691  0861               	movf	??_main+4,w
  2684  0692  00B9               	movwf	map@in_min
  2685  0693  0862               	movf	??_main+5,w
  2686  0694  00BA               	movwf	map@in_min+1
  2687  0695  01BB               	clrf	map@in_min+2
  2688  0696  01BC               	clrf	map@in_min+3
  2689  0697  30EE               	movlw	238
  2690  0698  0086               	movwf	6
  2691  0699  3023               	movlw	35
  2692  069A  0087               	movwf	7
  2693  069B  3F40               	moviw [0]fsr1
  2694  069C  00E3               	movwf	??_main+6
  2695  069D  3F41               	moviw [1]fsr1
  2696  069E  00E4               	movwf	??_main+7
  2697  069F  0863               	movf	??_main+6,w
  2698  06A0  00BD               	movwf	map@in_max
  2699  06A1  0864               	movf	??_main+7,w
  2700  06A2  00BE               	movwf	map@in_max+1
  2701  06A3  01BF               	clrf	map@in_max+2
  2702  06A4  01C0               	clrf	map@in_max+3
  2703  06A5  3000               	movlw	0
  2704  06A6  00C4               	movwf	map@out_min+3
  2705  06A7  3000               	movlw	0
  2706  06A8  00C3               	movwf	map@out_min+2
  2707  06A9  3000               	movlw	0
  2708  06AA  00C2               	movwf	map@out_min+1
  2709  06AB  3000               	movlw	0
  2710  06AC  00C1               	movwf	map@out_min
  2711  06AD  30EA               	movlw	234
  2712  06AE  0086               	movwf	6
  2713  06AF  3023               	movlw	35
  2714  06B0  0087               	movwf	7
  2715  06B1  3F40               	moviw [0]fsr1
  2716  06B2  00E5               	movwf	??_main+8
  2717  06B3  3F41               	moviw [1]fsr1
  2718  06B4  00E6               	movwf	??_main+9
  2719  06B5  0865               	movf	??_main+8,w
  2720  06B6  00C5               	movwf	map@out_max
  2721  06B7  0866               	movf	??_main+9,w
  2722  06B8  00C6               	movwf	map@out_max+1
  2723  06B9  01C7               	clrf	map@out_max+2
  2724  06BA  01C8               	clrf	map@out_max+3
  2725  06BB  318F  27A2  3181   	fcall	_map
  2726  06BE  30E8               	movlw	232
  2727  06BF  0086               	movwf	6
  2728  06C0  3023               	movlw	35
  2729  06C1  0087               	movwf	7
  2730  06C2  0835               	movf	?_map,w
  2731  06C3  3FC0               	movwi [0]fsr1
  2732  06C4  0836               	movf	?_map+1,w
  2733  06C5  3FC1               	movwi [1]fsr1
  2734  06C6                     l2488:
  2735                           
  2736                           ;main.c: 511: };main.c: 512: stock1 = 0;
  2737  06C6  01EB               	clrf	_stock1
  2738  06C7  01EC               	clrf	_stock1+1
  2739                           
  2740                           ;main.c: 513: stock2 = 0;
  2741  06C8  01E9               	clrf	_stock2
  2742  06C9  01EA               	clrf	_stock2+1
  2743                           
  2744                           ;main.c: 514: stock3 = 0;
  2745  06CA  01E7               	clrf	_stock3
  2746  06CB  01E8               	clrf	_stock3+1
  2747                           
  2748                           ;main.c: 515: stock4 = 0;
  2749  06CC  0021               	movlb	1	; select bank1
  2750  06CD  01A4               	clrf	_stock4^(0+128)
  2751  06CE  01A5               	clrf	(_stock4+1)^(0+128)
  2752                           
  2753                           ;main.c: 516: average = 0;
  2754  06CF  0020               	movlb	0	; select bank0
  2755  06D0  01EE               	clrf	_average
  2756  06D1  29AA               	goto	l159
  2757  06D2                     __end_of_main:
  2758                           
  2759                           	psect	text1
  2760  0FA2                     __ptext1:	
  2761 ;; *************** function _map *****************
  2762 ;; Defined at:
  2763 ;;		line 161 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  x               4   21[BANK0 ] unsigned long 
  2766 ;;  in_min          4   25[BANK0 ] unsigned long 
  2767 ;;  in_max          4   29[BANK0 ] unsigned long 
  2768 ;;  out_min         4   33[BANK0 ] unsigned long 
  2769 ;;  out_max         4   37[BANK0 ] unsigned long 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  4   21[BANK0 ] unsigned long 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0, pclath, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 1F/0
  2778 ;;		On exit  : 1F/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2781 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2783 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;Total ram usage:       36 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    2
  2788 ;; This function calls:
  2789 ;;		___lldiv
  2790 ;;		___lmul
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function _map
  2798  0FA2                     _map:
  2799                           
  2800                           ;main.c: 162: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2804  0FA2  0839               	movf	map@in_min,w
  2805  0FA3  023D               	subwf	map@in_max,w
  2806  0FA4  00C9               	movwf	??_map
  2807  0FA5  083A               	movf	map@in_min+1,w
  2808  0FA6  3B3E               	subwfb	map@in_max+1,w
  2809  0FA7  00CA               	movwf	??_map+1
  2810  0FA8  083B               	movf	map@in_min+2,w
  2811  0FA9  3B3F               	subwfb	map@in_max+2,w
  2812  0FAA  00CB               	movwf	??_map+2
  2813  0FAB  083C               	movf	map@in_min+3,w
  2814  0FAC  3B40               	subwfb	map@in_max+3,w
  2815  0FAD  00CC               	movwf	??_map+3
  2816  0FAE  084C               	movf	??_map+3,w
  2817  0FAF  00AB               	movwf	___lldiv@divisor+3
  2818  0FB0  084B               	movf	??_map+2,w
  2819  0FB1  00AA               	movwf	___lldiv@divisor+2
  2820  0FB2  084A               	movf	??_map+1,w
  2821  0FB3  00A9               	movwf	___lldiv@divisor+1
  2822  0FB4  0849               	movf	??_map,w
  2823  0FB5  00A8               	movwf	___lldiv@divisor
  2824  0FB6  0839               	movf	map@in_min,w
  2825  0FB7  0235               	subwf	map@x,w
  2826  0FB8  00CD               	movwf	??_map+4
  2827  0FB9  083A               	movf	map@in_min+1,w
  2828  0FBA  3B36               	subwfb	map@x+1,w
  2829  0FBB  00CE               	movwf	??_map+5
  2830  0FBC  083B               	movf	map@in_min+2,w
  2831  0FBD  3B37               	subwfb	map@x+2,w
  2832  0FBE  00CF               	movwf	??_map+6
  2833  0FBF  083C               	movf	map@in_min+3,w
  2834  0FC0  3B38               	subwfb	map@x+3,w
  2835  0FC1  00D0               	movwf	??_map+7
  2836  0FC2  0850               	movf	??_map+7,w
  2837  0FC3  00A3               	movwf	___lmul@multiplier+3
  2838  0FC4  084F               	movf	??_map+6,w
  2839  0FC5  00A2               	movwf	___lmul@multiplier+2
  2840  0FC6  084E               	movf	??_map+5,w
  2841  0FC7  00A1               	movwf	___lmul@multiplier+1
  2842  0FC8  084D               	movf	??_map+4,w
  2843  0FC9  00A0               	movwf	___lmul@multiplier
  2844  0FCA  0841               	movf	map@out_min,w
  2845  0FCB  0245               	subwf	map@out_max,w
  2846  0FCC  00D1               	movwf	??_map+8
  2847  0FCD  0842               	movf	map@out_min+1,w
  2848  0FCE  3B46               	subwfb	map@out_max+1,w
  2849  0FCF  00D2               	movwf	??_map+9
  2850  0FD0  0843               	movf	map@out_min+2,w
  2851  0FD1  3B47               	subwfb	map@out_max+2,w
  2852  0FD2  00D3               	movwf	??_map+10
  2853  0FD3  0844               	movf	map@out_min+3,w
  2854  0FD4  3B48               	subwfb	map@out_max+3,w
  2855  0FD5  00D4               	movwf	??_map+11
  2856  0FD6  0854               	movf	??_map+11,w
  2857  0FD7  00A7               	movwf	___lmul@multiplicand+3
  2858  0FD8  0853               	movf	??_map+10,w
  2859  0FD9  00A6               	movwf	___lmul@multiplicand+2
  2860  0FDA  0852               	movf	??_map+9,w
  2861  0FDB  00A5               	movwf	___lmul@multiplicand+1
  2862  0FDC  0851               	movf	??_map+8,w
  2863  0FDD  00A4               	movwf	___lmul@multiplicand
  2864  0FDE  318F  2721  318F   	fcall	___lmul
  2865  0FE1  0823               	movf	?___lmul+3,w
  2866  0FE2  00AF               	movwf	___lldiv@dividend+3
  2867  0FE3  0822               	movf	?___lmul+2,w
  2868  0FE4  00AE               	movwf	___lldiv@dividend+2
  2869  0FE5  0821               	movf	?___lmul+1,w
  2870  0FE6  00AD               	movwf	___lldiv@dividend+1
  2871  0FE7  0820               	movf	?___lmul,w
  2872  0FE8  00AC               	movwf	___lldiv@dividend
  2873  0FE9  318F  2750         	fcall	___lldiv
  2874  0FEB  0828               	movf	?___lldiv,w
  2875  0FEC  0741               	addwf	map@out_min,w
  2876  0FED  00D5               	movwf	??_map+12
  2877  0FEE  0829               	movf	?___lldiv+1,w
  2878  0FEF  3D42               	addwfc	map@out_min+1,w
  2879  0FF0  00D6               	movwf	??_map+13
  2880  0FF1  082A               	movf	?___lldiv+2,w
  2881  0FF2  3D43               	addwfc	map@out_min+2,w
  2882  0FF3  00D7               	movwf	??_map+14
  2883  0FF4  082B               	movf	?___lldiv+3,w
  2884  0FF5  3D44               	addwfc	map@out_min+3,w
  2885  0FF6  00D8               	movwf	??_map+15
  2886  0FF7  0858               	movf	??_map+15,w
  2887  0FF8  00B8               	movwf	?_map+3
  2888  0FF9  0857               	movf	??_map+14,w
  2889  0FFA  00B7               	movwf	?_map+2
  2890  0FFB  0856               	movf	??_map+13,w
  2891  0FFC  00B6               	movwf	?_map+1
  2892  0FFD  0855               	movf	??_map+12,w
  2893  0FFE  00B5               	movwf	?_map
  2894  0FFF  0008               	return
  2895  1000                     __end_of_map:
  2896                           
  2897                           	psect	text2
  2898  0F21                     __ptext2:	
  2899 ;; *************** function ___lmul *****************
  2900 ;; Defined at:
  2901 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2904 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  product         4    2[COMMON] unsigned long 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  4    0[BANK0 ] unsigned long 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 1F/0
  2913 ;;		On exit  : 1F/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2916 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;Total ram usage:       12 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_map
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function ___lmul
  2932  0F21                     ___lmul:
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2936  0F21  3000               	movlw	0
  2937  0F22  00F5               	movwf	___lmul@product+3
  2938  0F23  3000               	movlw	0
  2939  0F24  00F4               	movwf	___lmul@product+2
  2940  0F25  3000               	movlw	0
  2941  0F26  00F3               	movwf	___lmul@product+1
  2942  0F27  3000               	movlw	0
  2943  0F28  00F2               	movwf	___lmul@product
  2944  0F29                     l2072:
  2945  0F29  1C20               	btfss	___lmul@multiplier,0
  2946  0F2A  2F33               	goto	l2076
  2947  0F2B  0824               	movf	___lmul@multiplicand,w
  2948  0F2C  07F2               	addwf	___lmul@product,f
  2949  0F2D  0825               	movf	___lmul@multiplicand+1,w
  2950  0F2E  3DF3               	addwfc	___lmul@product+1,f
  2951  0F2F  0826               	movf	___lmul@multiplicand+2,w
  2952  0F30  3DF4               	addwfc	___lmul@product+2,f
  2953  0F31  0827               	movf	___lmul@multiplicand+3,w
  2954  0F32  3DF5               	addwfc	___lmul@product+3,f
  2955  0F33                     l2076:
  2956  0F33  3001               	movlw	1
  2957  0F34                     u1755:
  2958  0F34  35A4               	lslf	___lmul@multiplicand,f
  2959  0F35  0DA5               	rlf	___lmul@multiplicand+1,f
  2960  0F36  0DA6               	rlf	___lmul@multiplicand+2,f
  2961  0F37  0DA7               	rlf	___lmul@multiplicand+3,f
  2962  0F38  0B89               	decfsz	9,f
  2963  0F39  2F34               	goto	u1755
  2964  0F3A  3001               	movlw	1
  2965  0F3B                     u1765:
  2966  0F3B  36A3               	lsrf	___lmul@multiplier+3,f
  2967  0F3C  0CA2               	rrf	___lmul@multiplier+2,f
  2968  0F3D  0CA1               	rrf	___lmul@multiplier+1,f
  2969  0F3E  0CA0               	rrf	___lmul@multiplier,f
  2970  0F3F  0B89               	decfsz	9,f
  2971  0F40  2F3B               	goto	u1765
  2972  0F41  0823               	movf	___lmul@multiplier+3,w
  2973  0F42  0422               	iorwf	___lmul@multiplier+2,w
  2974  0F43  0421               	iorwf	___lmul@multiplier+1,w
  2975  0F44  0420               	iorwf	___lmul@multiplier,w
  2976  0F45  1D03               	skipz
  2977  0F46  2F29               	goto	l2072
  2978  0F47  0875               	movf	___lmul@product+3,w
  2979  0F48  00A3               	movwf	?___lmul+3
  2980  0F49  0874               	movf	___lmul@product+2,w
  2981  0F4A  00A2               	movwf	?___lmul+2
  2982  0F4B  0873               	movf	___lmul@product+1,w
  2983  0F4C  00A1               	movwf	?___lmul+1
  2984  0F4D  0872               	movf	___lmul@product,w
  2985  0F4E  00A0               	movwf	?___lmul
  2986  0F4F  0008               	return
  2987  0F50                     __end_of___lmul:
  2988                           
  2989                           	psect	text3
  2990  0F50                     __ptext3:	
  2991 ;; *************** function ___lldiv *****************
  2992 ;; Defined at:
  2993 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  divisor         4    8[BANK0 ] unsigned long 
  2996 ;;  dividend        4   12[BANK0 ] unsigned long 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  quotient        4   16[BANK0 ] unsigned long 
  2999 ;;  counter         1   20[BANK0 ] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  4    8[BANK0 ] unsigned long 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 1F/0
  3006 ;;		On exit  : 1F/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3009 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;Total ram usage:       14 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    1
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_map
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           
  3024                           ;psect for function ___lldiv
  3025  0F50                     ___lldiv:
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3029  0F50  3000               	movlw	0
  3030  0F51  00B3               	movwf	___lldiv@quotient+3
  3031  0F52  3000               	movlw	0
  3032  0F53  00B2               	movwf	___lldiv@quotient+2
  3033  0F54  3000               	movlw	0
  3034  0F55  00B1               	movwf	___lldiv@quotient+1
  3035  0F56  3000               	movlw	0
  3036  0F57  00B0               	movwf	___lldiv@quotient
  3037  0F58  082B               	movf	___lldiv@divisor+3,w
  3038  0F59  042A               	iorwf	___lldiv@divisor+2,w
  3039  0F5A  0429               	iorwf	___lldiv@divisor+1,w
  3040  0F5B  0428               	iorwf	___lldiv@divisor,w
  3041  0F5C  1903               	skipnz
  3042  0F5D  2F99               	goto	l2104
  3043  0F5E  01B4               	clrf	___lldiv@counter
  3044  0F5F  0AB4               	incf	___lldiv@counter,f
  3045  0F60                     l2090:
  3046  0F60  1BAB               	btfsc	___lldiv@divisor+3,7
  3047  0F61  2F6E               	goto	l2092
  3048  0F62  3001               	movlw	1
  3049  0F63                     u1795:
  3050  0F63  35A8               	lslf	___lldiv@divisor,f
  3051  0F64  0DA9               	rlf	___lldiv@divisor+1,f
  3052  0F65  0DAA               	rlf	___lldiv@divisor+2,f
  3053  0F66  0DAB               	rlf	___lldiv@divisor+3,f
  3054  0F67  0B89               	decfsz	9,f
  3055  0F68  2F63               	goto	u1795
  3056  0F69  3001               	movlw	1
  3057  0F6A  00F6               	movwf	??___lldiv
  3058  0F6B  0876               	movf	??___lldiv,w
  3059  0F6C  07B4               	addwf	___lldiv@counter,f
  3060  0F6D  2F60               	goto	l2090
  3061  0F6E                     l2092:
  3062  0F6E  3001               	movlw	1
  3063  0F6F                     u1815:
  3064  0F6F  35B0               	lslf	___lldiv@quotient,f
  3065  0F70  0DB1               	rlf	___lldiv@quotient+1,f
  3066  0F71  0DB2               	rlf	___lldiv@quotient+2,f
  3067  0F72  0DB3               	rlf	___lldiv@quotient+3,f
  3068  0F73  0B89               	decfsz	9,f
  3069  0F74  2F6F               	goto	u1815
  3070  0F75  082B               	movf	___lldiv@divisor+3,w
  3071  0F76  022F               	subwf	___lldiv@dividend+3,w
  3072  0F77  1D03               	skipz
  3073  0F78  2F83               	goto	u1825
  3074  0F79  082A               	movf	___lldiv@divisor+2,w
  3075  0F7A  022E               	subwf	___lldiv@dividend+2,w
  3076  0F7B  1D03               	skipz
  3077  0F7C  2F83               	goto	u1825
  3078  0F7D  0829               	movf	___lldiv@divisor+1,w
  3079  0F7E  022D               	subwf	___lldiv@dividend+1,w
  3080  0F7F  1D03               	skipz
  3081  0F80  2F83               	goto	u1825
  3082  0F81  0828               	movf	___lldiv@divisor,w
  3083  0F82  022C               	subwf	___lldiv@dividend,w
  3084  0F83                     u1825:
  3085  0F83  1C03               	skipc
  3086  0F84  2F8E               	goto	l2100
  3087  0F85  0828               	movf	___lldiv@divisor,w
  3088  0F86  02AC               	subwf	___lldiv@dividend,f
  3089  0F87  0829               	movf	___lldiv@divisor+1,w
  3090  0F88  3BAD               	subwfb	___lldiv@dividend+1,f
  3091  0F89  082A               	movf	___lldiv@divisor+2,w
  3092  0F8A  3BAE               	subwfb	___lldiv@dividend+2,f
  3093  0F8B  082B               	movf	___lldiv@divisor+3,w
  3094  0F8C  3BAF               	subwfb	___lldiv@dividend+3,f
  3095  0F8D  1430               	bsf	___lldiv@quotient,0
  3096  0F8E                     l2100:
  3097  0F8E  3001               	movlw	1
  3098  0F8F                     u1835:
  3099  0F8F  36AB               	lsrf	___lldiv@divisor+3,f
  3100  0F90  0CAA               	rrf	___lldiv@divisor+2,f
  3101  0F91  0CA9               	rrf	___lldiv@divisor+1,f
  3102  0F92  0CA8               	rrf	___lldiv@divisor,f
  3103  0F93  0B89               	decfsz	9,f
  3104  0F94  2F8F               	goto	u1835
  3105  0F95  3001               	movlw	1
  3106  0F96  02B4               	subwf	___lldiv@counter,f
  3107  0F97  1D03               	btfss	3,2
  3108  0F98  2F6E               	goto	l2092
  3109  0F99                     l2104:
  3110  0F99  0833               	movf	___lldiv@quotient+3,w
  3111  0F9A  00AB               	movwf	?___lldiv+3
  3112  0F9B  0832               	movf	___lldiv@quotient+2,w
  3113  0F9C  00AA               	movwf	?___lldiv+2
  3114  0F9D  0831               	movf	___lldiv@quotient+1,w
  3115  0F9E  00A9               	movwf	?___lldiv+1
  3116  0F9F  0830               	movf	___lldiv@quotient,w
  3117  0FA0  00A8               	movwf	?___lldiv
  3118  0FA1  0008               	return
  3119  0FA2                     __end_of___lldiv:
  3120                           
  3121                           	psect	text4
  3122  06D2                     __ptext4:	
  3123 ;; *************** function _init_I2C_buffer *****************
  3124 ;; Defined at:
  3125 ;;		line 175 in file "main.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  i               1    3[BANK0 ] unsigned char 
  3130 ;;  i               1    2[BANK0 ] unsigned char 
  3131 ;;  i               1    1[BANK0 ] unsigned char 
  3132 ;;  i               1    0[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : B1F/1
  3139 ;;		On exit  : 1F/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;Total ram usage:        7 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    2
  3149 ;; This function calls:
  3150 ;;		_eeprom_read
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _init_I2C_buffer
  3158  06D2                     _init_I2C_buffer:
  3159                           
  3160                           ;main.c: 176: I2C_buffer.data.ID = 0x03;
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _init_I2C_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3164  06D2  30F5               	movlw	245
  3165  06D3  0086               	movwf	6
  3166  06D4  3022               	movlw	34
  3167  06D5  0087               	movwf	7
  3168  06D6  3003               	movlw	3
  3169  06D7  3FC0               	movwi [0]fsr1
  3170                           
  3171                           ;main.c: 177: I2C_buffer.data.RESET = 0;
  3172  06D8  30F5               	movlw	245
  3173  06D9  0086               	movwf	6
  3174  06DA  3022               	movlw	34
  3175  06DB  0087               	movwf	7
  3176  06DC  3141               	addfsr 1,1
  3177  06DD  0181               	clrf	1
  3178                           
  3179                           ;main.c: 178: I2C_buffer.data.SAVE = 0;
  3180  06DE  30F5               	movlw	245
  3181  06DF  0086               	movwf	6
  3182  06E0  3022               	movlw	34
  3183  06E1  0087               	movwf	7
  3184  06E2  3142               	addfsr 1,2
  3185  06E3  0181               	clrf	1
  3186                           
  3187                           ;main.c: 179: I2C_buffer.data.dispense = 0;
  3188  06E4  30F5               	movlw	245
  3189  06E5  0086               	movwf	6
  3190  06E6  3022               	movlw	34
  3191  06E7  0087               	movwf	7
  3192  06E8  3143               	addfsr 1,3
  3193  06E9  0181               	clrf	1
  3194                           
  3195                           ;main.c: 180: I2C_buffer.data.selected = 0;
  3196  06EA  30F5               	movlw	245
  3197  06EB  0086               	movwf	6
  3198  06EC  3022               	movlw	34
  3199  06ED  0087               	movwf	7
  3200  06EE  3144               	addfsr 1,4
  3201  06EF  0181               	clrf	1
  3202                           
  3203                           ;main.c: 181: I2C_buffer.data.cancel = 0;
  3204  06F0  30F5               	movlw	245
  3205  06F1  0086               	movwf	6
  3206  06F2  3022               	movlw	34
  3207  06F3  0087               	movwf	7
  3208  06F4  3145               	addfsr 1,5
  3209  06F5  0181               	clrf	1
  3210                           
  3211                           ;main.c: 182: I2C_buffer.data.counter = 0;
  3212  06F6  30FB               	movlw	251
  3213  06F7  0086               	movwf	6
  3214  06F8  3022               	movlw	34
  3215  06F9  0087               	movwf	7
  3216  06FA  3000               	movlw	0
  3217  06FB  3FC0               	movwi [0]fsr1
  3218  06FC  3FC1               	movwi [1]fsr1
  3219  06FD  3FC2               	movwi [2]fsr1
  3220  06FE  3FC3               	movwi [3]fsr1
  3221                           
  3222                           ;main.c: 183: I2C_buffer.data.time = 0;
  3223  06FF  30FF               	movlw	255
  3224  0700  0086               	movwf	6
  3225  0701  3022               	movlw	34
  3226  0702  0087               	movwf	7
  3227  0703  3000               	movlw	0
  3228  0704  3FC0               	movwi [0]fsr1
  3229  0705  3FC1               	movwi [1]fsr1
  3230  0706  3FC2               	movwi [2]fsr1
  3231  0707  3FC3               	movwi [3]fsr1
  3232                           
  3233                           ;main.c: 184: I2C_buffer.data.calibrate = 0;
  3234  0708  30F5               	movlw	245
  3235  0709  0086               	movwf	6
  3236  070A  3022               	movlw	34
  3237  070B  0087               	movwf	7
  3238  070C  314E               	addfsr 1,14
  3239  070D  0181               	clrf	1
  3240                           
  3241                           ;main.c: 185: I2C_buffer.data.relay1 = 0;
  3242  070E  30F5               	movlw	245
  3243  070F  0086               	movwf	6
  3244  0710  3022               	movlw	34
  3245  0711  0087               	movwf	7
  3246  0712  314F               	addfsr 1,15
  3247  0713  0181               	clrf	1
  3248                           
  3249                           ;main.c: 186: I2C_buffer.data.relay2 = 0;
  3250  0714  30F5               	movlw	245
  3251  0715  0086               	movwf	6
  3252  0716  3022               	movlw	34
  3253  0717  0087               	movwf	7
  3254  0718  3150               	addfsr 1,16
  3255  0719  0181               	clrf	1
  3256                           
  3257                           ;main.c: 187: I2C_buffer.data.relay3 = 0;
  3258  071A  30F5               	movlw	245
  3259  071B  0086               	movwf	6
  3260  071C  3022               	movlw	34
  3261  071D  0087               	movwf	7
  3262  071E  3151               	addfsr 1,17
  3263  071F  0181               	clrf	1
  3264                           
  3265                           ;main.c: 188: I2C_buffer.data.relay4 = 0;
  3266  0720  30F5               	movlw	245
  3267  0721  0086               	movwf	6
  3268  0722  3022               	movlw	34
  3269  0723  0087               	movwf	7
  3270  0724  3152               	addfsr 1,18
  3271  0725  0181               	clrf	1
  3272                           
  3273                           ;main.c: 189: I2C_buffer.data.selected1 = 0;
  3274  0726  30F5               	movlw	245
  3275  0727  0086               	movwf	6
  3276  0728  3022               	movlw	34
  3277  0729  0087               	movwf	7
  3278  072A  3153               	addfsr 1,19
  3279  072B  0181               	clrf	1
  3280                           
  3281                           ;main.c: 190: for (unsigned char i = 0; i < 58; i++)
  3282  072C  0020               	movlb	0	; select bank0
  3283  072D  01A0               	clrf	init_I2C_buffer@i
  3284  072E                     l2156:
  3285                           
  3286                           ;main.c: 191: {;main.c: 192: I2C_buffer.byte[(unsigned char) (0x14 + i)] = eeprom_read(i
      +                          );
  3287  072E  0820               	movf	init_I2C_buffer@i,w
  3288  072F  3187  27E5  3186   	fcall	_eeprom_read
  3289  0732  00F6               	movwf	??_init_I2C_buffer
  3290  0733  0020               	movlb	0	; select bank0
  3291  0734  0820               	movf	init_I2C_buffer@i,w
  3292  0735  3E14               	addlw	20
  3293  0736  3EF5               	addlw	245
  3294  0737  00F7               	movwf	??_init_I2C_buffer+1
  3295  0738  01F8               	clrf	??_init_I2C_buffer+2
  3296  0739  3022               	movlw	34
  3297  073A  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3298  073B  0877               	movf	??_init_I2C_buffer+1,w
  3299  073C  0086               	movwf	6
  3300  073D  0878               	movf	??_init_I2C_buffer+2,w
  3301  073E  0087               	movwf	7
  3302  073F  0876               	movf	??_init_I2C_buffer,w
  3303  0740  0081               	movwf	1
  3304  0741  3001               	movlw	1
  3305  0742  00F6               	movwf	??_init_I2C_buffer
  3306  0743  0876               	movf	??_init_I2C_buffer,w
  3307  0744  07A0               	addwf	init_I2C_buffer@i,f
  3308  0745  303A               	movlw	58
  3309  0746  0220               	subwf	init_I2C_buffer@i,w
  3310  0747  1C03               	skipc
  3311  0748  2F2E               	goto	l2156
  3312                           
  3313                           ;main.c: 193: };main.c: 194: I2C_buffer.data.selected2 = 0;
  3314  0749  3042               	movlw	66
  3315  074A  0086               	movwf	6
  3316  074B  3023               	movlw	35
  3317  074C  0087               	movwf	7
  3318  074D  0181               	clrf	1
  3319                           
  3320                           ;main.c: 195: for (unsigned char i = 0; i < 58; i++)
  3321  074E  01A1               	clrf	init_I2C_buffer@i_663
  3322  074F                     l2170:
  3323                           
  3324                           ;main.c: 196: {;main.c: 197: I2C_buffer.byte[(unsigned char) (0x4E + i)] = eeprom_read((
      +                          unsigned char) (58 + i));
  3325  074F  0821               	movf	init_I2C_buffer@i_663,w
  3326  0750  3E3A               	addlw	58
  3327  0751  3187  27E5  3186   	fcall	_eeprom_read
  3328  0754  00F6               	movwf	??_init_I2C_buffer
  3329  0755  0020               	movlb	0	; select bank0
  3330  0756  0821               	movf	init_I2C_buffer@i_663,w
  3331  0757  3E4E               	addlw	78
  3332  0758  3EF5               	addlw	245
  3333  0759  00F7               	movwf	??_init_I2C_buffer+1
  3334  075A  01F8               	clrf	??_init_I2C_buffer+2
  3335  075B  3022               	movlw	34
  3336  075C  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3337  075D  0877               	movf	??_init_I2C_buffer+1,w
  3338  075E  0086               	movwf	6
  3339  075F  0878               	movf	??_init_I2C_buffer+2,w
  3340  0760  0087               	movwf	7
  3341  0761  0876               	movf	??_init_I2C_buffer,w
  3342  0762  0081               	movwf	1
  3343  0763  3001               	movlw	1
  3344  0764  00F6               	movwf	??_init_I2C_buffer
  3345  0765  0876               	movf	??_init_I2C_buffer,w
  3346  0766  07A1               	addwf	init_I2C_buffer@i_663,f
  3347  0767  303A               	movlw	58
  3348  0768  0221               	subwf	init_I2C_buffer@i_663,w
  3349  0769  1C03               	skipc
  3350  076A  2F4F               	goto	l2170
  3351                           
  3352                           ;main.c: 198: };main.c: 199: I2C_buffer.data.selected3 = 0;
  3353  076B  307C               	movlw	124
  3354  076C  0086               	movwf	6
  3355  076D  3023               	movlw	35
  3356  076E  0087               	movwf	7
  3357  076F  0181               	clrf	1
  3358                           
  3359                           ;main.c: 200: for (unsigned char i = 0; i < 58; i++)
  3360  0770  01A2               	clrf	init_I2C_buffer@i_664
  3361  0771                     l2184:
  3362                           
  3363                           ;main.c: 201: {;main.c: 202: I2C_buffer.byte[(unsigned char) (0x88 + i)] = eeprom_read((
      +                          unsigned char) (115 + i));
  3364  0771  0822               	movf	init_I2C_buffer@i_664,w
  3365  0772  3E73               	addlw	115
  3366  0773  3187  27E5  3186   	fcall	_eeprom_read
  3367  0776  00F6               	movwf	??_init_I2C_buffer
  3368  0777  0020               	movlb	0	; select bank0
  3369  0778  0822               	movf	init_I2C_buffer@i_664,w
  3370  0779  3E88               	addlw	136
  3371  077A  3EF5               	addlw	245
  3372  077B  00F7               	movwf	??_init_I2C_buffer+1
  3373  077C  01F8               	clrf	??_init_I2C_buffer+2
  3374  077D  3022               	movlw	34
  3375  077E  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3376  077F  0877               	movf	??_init_I2C_buffer+1,w
  3377  0780  0086               	movwf	6
  3378  0781  0878               	movf	??_init_I2C_buffer+2,w
  3379  0782  0087               	movwf	7
  3380  0783  0876               	movf	??_init_I2C_buffer,w
  3381  0784  0081               	movwf	1
  3382  0785  3001               	movlw	1
  3383  0786  00F6               	movwf	??_init_I2C_buffer
  3384  0787  0876               	movf	??_init_I2C_buffer,w
  3385  0788  07A2               	addwf	init_I2C_buffer@i_664,f
  3386  0789  303A               	movlw	58
  3387  078A  0222               	subwf	init_I2C_buffer@i_664,w
  3388  078B  1C03               	skipc
  3389  078C  2F71               	goto	l2184
  3390                           
  3391                           ;main.c: 203: };main.c: 204: I2C_buffer.data.selected4 = 0;
  3392  078D  30B6               	movlw	182
  3393  078E  0086               	movwf	6
  3394  078F  3023               	movlw	35
  3395  0790  0087               	movwf	7
  3396  0791  0181               	clrf	1
  3397                           
  3398                           ;main.c: 205: for (unsigned char i = 0; i < 58; i++)
  3399  0792  01A3               	clrf	init_I2C_buffer@i_665
  3400  0793                     l2198:
  3401                           
  3402                           ;main.c: 206: {;main.c: 207: I2C_buffer.byte[(unsigned char) (0xC2 + i)] = eeprom_read((
      +                          unsigned char) (172 + i));
  3403  0793  0823               	movf	init_I2C_buffer@i_665,w
  3404  0794  3EAC               	addlw	172
  3405  0795  3187  27E5  3186   	fcall	_eeprom_read
  3406  0798  00F6               	movwf	??_init_I2C_buffer
  3407  0799  0020               	movlb	0	; select bank0
  3408  079A  0823               	movf	init_I2C_buffer@i_665,w
  3409  079B  3EC2               	addlw	194
  3410  079C  3EF5               	addlw	245
  3411  079D  00F7               	movwf	??_init_I2C_buffer+1
  3412  079E  01F8               	clrf	??_init_I2C_buffer+2
  3413  079F  3022               	movlw	34
  3414  07A0  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3415  07A1  0877               	movf	??_init_I2C_buffer+1,w
  3416  07A2  0086               	movwf	6
  3417  07A3  0878               	movf	??_init_I2C_buffer+2,w
  3418  07A4  0087               	movwf	7
  3419  07A5  0876               	movf	??_init_I2C_buffer,w
  3420  07A6  0081               	movwf	1
  3421  07A7  3001               	movlw	1
  3422  07A8  00F6               	movwf	??_init_I2C_buffer
  3423  07A9  0876               	movf	??_init_I2C_buffer,w
  3424  07AA  07A3               	addwf	init_I2C_buffer@i_665,f
  3425  07AB  303A               	movlw	58
  3426  07AC  0223               	subwf	init_I2C_buffer@i_665,w
  3427  07AD  1803               	btfsc	3,0
  3428  07AE  0008               	return
  3429  07AF  2F93               	goto	l2198
  3430  07B0                     __end_of_init_I2C_buffer:
  3431                           
  3432                           	psect	text5
  3433  07E5                     __ptext5:	
  3434 ;; *************** function _eeprom_read *****************
  3435 ;; Defined at:
  3436 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  addr            1    wreg     unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  addr            1    5[COMMON] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      unsigned char 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 1F/0
  3447 ;;		On exit  : 1F/3
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;Total ram usage:        4 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    1
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_init_I2C_buffer
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _eeprom_read
  3466  07E5                     _eeprom_read:
  3467                           
  3468                           ;incstack = 0
  3469                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3470                           ;eeprom_read@addr stored from wreg
  3471  07E5  00F5               	movwf	eeprom_read@addr
  3472  07E6  2FE8               	goto	l374
  3473  07E7                     u1731:
  3474  07E7  0020               	movlb	0	; select bank0
  3475  07E8                     l374:	
  3476                           ;__eeread.c: 8: do
  3477                           
  3478  07E8  0064               	clrwdt	;# 
  3479                           
  3480                           ;__eeread.c: 12: while(EECON1bits.WR);
  3481  07E9  0023               	movlb	3	; select bank3
  3482  07EA  1895               	btfsc	21,1	;volsfr
  3483  07EB  2FE7               	goto	u1731
  3484                           
  3485                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  3486  07EC  0875               	movf	eeprom_read@addr,w
  3487  07ED  00F2               	movwf	??_eeprom_read
  3488  07EE  01F3               	clrf	??_eeprom_read+1
  3489  07EF  0872               	movf	??_eeprom_read,w
  3490  07F0  0091               	movwf	17	;volatile
  3491  07F1  0873               	movf	??_eeprom_read+1,w
  3492  07F2  0092               	movwf	18	;volatile
  3493  07F3  303F               	movlw	63
  3494  07F4  00F4               	movwf	??_eeprom_read+2
  3495  07F5  0874               	movf	??_eeprom_read+2,w
  3496  07F6  0595               	andwf	21,f	;volsfr
  3497  07F7  1415               	bsf	21,0	;volsfr
  3498  07F8  0813               	movf	19,w	;volatile
  3499  07F9  0008               	return
  3500  07FA                     __end_of_eeprom_read:
  3501                           
  3502                           	psect	text6
  3503  0F01                     __ptext6:	
  3504 ;; *************** function _eeprom_write *****************
  3505 ;; Defined at:
  3506 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eewrite.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  addr            1    wreg     unsigned char 
  3509 ;;  value           1    2[COMMON] unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  addr            1    5[COMMON] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 1F/1
  3518 ;;		On exit  : 1F/3
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;Total ram usage:        4 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _eeprom_write
  3537  0F01                     _eeprom_write:
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3541                           ;eeprom_write@addr stored from wreg
  3542  0F01  00F5               	movwf	eeprom_write@addr
  3543  0F02                     l394:	
  3544                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  3545                           
  3546  0F02  0023               	movlb	3	; select bank3
  3547  0F03  1895               	btfsc	21,1	;volsfr
  3548  0F04  2F02               	goto	l394
  3549  0F05  0875               	movf	eeprom_write@addr,w
  3550  0F06  00F3               	movwf	??_eeprom_write
  3551  0F07  01F4               	clrf	??_eeprom_write+1
  3552  0F08  0873               	movf	??_eeprom_write,w
  3553  0F09  0091               	movwf	17	;volatile
  3554  0F0A  0874               	movf	??_eeprom_write+1,w
  3555  0F0B  0092               	movwf	18	;volatile
  3556  0F0C  0872               	movf	eeprom_write@value,w
  3557  0F0D  0093               	movwf	19	;volatile
  3558  0F0E  303F               	movlw	63
  3559  0F0F  00F3               	movwf	??_eeprom_write
  3560  0F10  0873               	movf	??_eeprom_write,w
  3561  0F11  0595               	andwf	21,f	;volsfr
  3562  0F12  1003               	bcf	3,0	;volatile
  3563  0F13  1B8B               	btfsc	11,7	;volatile
  3564  0F14  1403               	bsf	3,0	;volatile
  3565  0F15  138B               	bcf	11,7	;volatile
  3566  0F16  1515               	bsf	21,2	;volsfr
  3567  0F17  3055               	movlw	85
  3568  0F18  0096               	movwf	22	;volsfr
  3569  0F19  30AA               	movlw	170
  3570  0F1A  0096               	movwf	22	;volsfr
  3571  0F1B  1495               	bsf	21,1	;volsfr
  3572  0F1C  1115               	bcf	21,2	;volsfr
  3573  0F1D  1C03               	btfss	3,0	;volatile
  3574  0F1E  0008               	return
  3575  0F1F  178B               	bsf	11,7	;volatile
  3576  0F20  0008               	return
  3577  0F21                     __end_of_eeprom_write:
  3578                           
  3579                           	psect	text7
  3580  07B0                     __ptext7:	
  3581 ;; *************** function ___lwdiv *****************
  3582 ;; Defined at:
  3583 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  divisor         2    2[COMMON] unsigned int 
  3586 ;;  dividend        2    4[COMMON] unsigned int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  quotient        2    1[BANK0 ] unsigned int 
  3589 ;;  counter         1    0[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2    2[COMMON] unsigned int 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 1E/0
  3596 ;;		On exit  : 1F/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;Total ram usage:        8 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function ___lwdiv
  3615  07B0                     ___lwdiv:
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3619  07B0  0020               	movlb	0	; select bank0
  3620  07B1  01A1               	clrf	___lwdiv@quotient
  3621  07B2  01A2               	clrf	___lwdiv@quotient+1
  3622  07B3  0872               	movf	___lwdiv@divisor,w
  3623  07B4  0473               	iorwf	___lwdiv@divisor+1,w
  3624  07B5  1903               	btfsc	3,2
  3625  07B6  2FE0               	goto	l2246
  3626  07B7  01A0               	clrf	___lwdiv@counter
  3627  07B8  0AA0               	incf	___lwdiv@counter,f
  3628  07B9                     l2234:
  3629  07B9  1BF3               	btfsc	___lwdiv@divisor+1,7
  3630  07BA  2FC5               	goto	l2236
  3631  07BB  3001               	movlw	1
  3632  07BC                     u1955:
  3633  07BC  35F2               	lslf	___lwdiv@divisor,f
  3634  07BD  0DF3               	rlf	___lwdiv@divisor+1,f
  3635  07BE  0B89               	decfsz	9,f
  3636  07BF  2FBC               	goto	u1955
  3637  07C0  3001               	movlw	1
  3638  07C1  00F6               	movwf	??___lwdiv
  3639  07C2  0876               	movf	??___lwdiv,w
  3640  07C3  07A0               	addwf	___lwdiv@counter,f
  3641  07C4  2FB9               	goto	l2234
  3642  07C5                     l2236:
  3643  07C5  3001               	movlw	1
  3644  07C6                     u1975:
  3645  07C6  35A1               	lslf	___lwdiv@quotient,f
  3646  07C7  0DA2               	rlf	___lwdiv@quotient+1,f
  3647  07C8  0B89               	decfsz	9,f
  3648  07C9  2FC6               	goto	u1975
  3649  07CA  0873               	movf	___lwdiv@divisor+1,w
  3650  07CB  0275               	subwf	___lwdiv@dividend+1,w
  3651  07CC  1D03               	skipz
  3652  07CD  2FD0               	goto	u1985
  3653  07CE  0872               	movf	___lwdiv@divisor,w
  3654  07CF  0274               	subwf	___lwdiv@dividend,w
  3655  07D0                     u1985:
  3656  07D0  1C03               	skipc
  3657  07D1  2FD7               	goto	l2242
  3658  07D2  0872               	movf	___lwdiv@divisor,w
  3659  07D3  02F4               	subwf	___lwdiv@dividend,f
  3660  07D4  0873               	movf	___lwdiv@divisor+1,w
  3661  07D5  3BF5               	subwfb	___lwdiv@dividend+1,f
  3662  07D6  1421               	bsf	___lwdiv@quotient,0
  3663  07D7                     l2242:
  3664  07D7  3001               	movlw	1
  3665  07D8                     u1995:
  3666  07D8  36F3               	lsrf	___lwdiv@divisor+1,f
  3667  07D9  0CF2               	rrf	___lwdiv@divisor,f
  3668  07DA  0B89               	decfsz	9,f
  3669  07DB  2FD8               	goto	u1995
  3670  07DC  3001               	movlw	1
  3671  07DD  02A0               	subwf	___lwdiv@counter,f
  3672  07DE  1D03               	btfss	3,2
  3673  07DF  2FC5               	goto	l2236
  3674  07E0                     l2246:
  3675  07E0  0822               	movf	___lwdiv@quotient+1,w
  3676  07E1  00F3               	movwf	?___lwdiv+1
  3677  07E2  0821               	movf	___lwdiv@quotient,w
  3678  07E3  00F2               	movwf	?___lwdiv
  3679  07E4  0008               	return
  3680  07E5                     __end_of___lwdiv:
  3681                           
  3682                           	psect	text8
  3683  0EE3                     __ptext8:	
  3684 ;; *************** function _ADC_read *****************
  3685 ;; Defined at:
  3686 ;;		line 165 in file "main.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  channel         1    wreg     unsigned char 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  channel         1    5[COMMON] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  2    2[COMMON] unsigned int 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 1F/0
  3697 ;;		On exit  : 1F/1
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3704 ;;Total ram usage:        4 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    1
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _ADC_read
  3716  0EE3                     _ADC_read:
  3717                           
  3718                           ;incstack = 0
  3719                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  3720                           ;ADC_read@channel stored from wreg
  3721  0EE3  00F5               	movwf	ADC_read@channel
  3722                           
  3723                           ;main.c: 166: ADCON0 = (unsigned char) (channel << 2);
  3724  0EE4  0875               	movf	ADC_read@channel,w
  3725  0EE5  00F4               	movwf	??_ADC_read
  3726  0EE6  3001               	movlw	1
  3727  0EE7                     u1855:
  3728  0EE7  35F4               	lslf	??_ADC_read,f
  3729  0EE8  3EFF               	addlw	-1
  3730  0EE9  1D03               	skipz
  3731  0EEA  2EE7               	goto	u1855
  3732  0EEB  3574               	lslf	??_ADC_read,w
  3733  0EEC  0021               	movlb	1	; select bank1
  3734  0EED  009D               	movwf	29	;volatile
  3735                           
  3736                           ;main.c: 167: ADCON0bits.ADON = 1;
  3737  0EEE  141D               	bsf	29,0	;volatile
  3738                           
  3739                           ;main.c: 168: _delay((unsigned long)((1)*(32000000/4000.0)));
  3740  0EEF  300B               	movlw	11
  3741  0EF0  00F4               	movwf	??_ADC_read
  3742  0EF1  3062               	movlw	98
  3743  0EF2                     u2407:
  3744  0EF2  0B89               	decfsz	9,f
  3745  0EF3  2EF2               	goto	u2407
  3746  0EF4  0BF4               	decfsz	??_ADC_read,f
  3747  0EF5  2EF2               	goto	u2407
  3748  0EF6  3200               	nop2
  3749                           
  3750                           ;main.c: 169: ADCON0bits.GO_nDONE = 1;
  3751  0EF7  0021               	movlb	1	; select bank1
  3752  0EF8  149D               	bsf	29,1	;volatile
  3753  0EF9                     l106:	
  3754                           ;main.c: 170: while (ADCON0bits.GO_nDONE);
  3755                           
  3756  0EF9  189D               	btfsc	29,1	;volatile
  3757  0EFA  2EF9               	goto	l106
  3758                           
  3759                           ;main.c: 171: ADCON0bits.ADON = 0;
  3760  0EFB  101D               	bcf	29,0	;volatile
  3761                           
  3762                           ;main.c: 172: return (((unsigned int) ADRESH) << 8) | ((unsigned int) ADRESL & 0xFF);
  3763  0EFC  081C               	movf	28,w	;volatile
  3764  0EFD  00F3               	movwf	?_ADC_read+1
  3765  0EFE  081B               	movf	27,w	;volatile
  3766  0EFF  00F2               	movwf	?_ADC_read
  3767  0F00  0008               	return
  3768  0F01                     __end_of_ADC_read:
  3769                           
  3770                           	psect	intentry
  3771  0004                     __pintentry:	
  3772 ;; *************** function _isr *****************
  3773 ;; Defined at:
  3774 ;;		line 214 in file "main.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;		None
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 1F/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;Total ram usage:        2 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		Interrupt level 1
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801  0004                     _isr:
  3802                           
  3803                           ;incstack = 0
  3804  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3805                           
  3806                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  3807  0005  3180               	pagesel	$
  3808                           
  3809                           ;main.c: 216: if (INTCONbits.INTF == 1) {
  3810  0006  1C8B               	btfss	11,1	;volatile
  3811  0007  2842               	goto	i1l1694
  3812                           
  3813                           ;main.c: 217: INTCONbits.INTE = 0;
  3814  0008  120B               	bcf	11,4	;volatile
  3815                           
  3816                           ;main.c: 218: if (PORTBbits.RB0 == 0) {
  3817  0009  0020               	movlb	0	; select bank0
  3818  000A  180D               	btfsc	13,0	;volatile
  3819  000B  2840               	goto	i1l1690
  3820                           
  3821                           ;main.c: 219: if (I2C_buffer.data.dispense == 0) {
  3822  000C  30F5               	movlw	245
  3823  000D  0086               	movwf	6
  3824  000E  3022               	movlw	34
  3825  000F  0087               	movwf	7
  3826  0010  3143               	addfsr 1,3
  3827  0011  0801               	movf	1,w
  3828  0012  1D03               	btfss	3,2
  3829  0013  2830               	goto	i1l1688
  3830                           
  3831                           ;main.c: 220: I2C_buffer.data.cancel = 1;
  3832  0014  30FA               	movlw	250
  3833  0015  0086               	movwf	6
  3834  0016  3022               	movlw	34
  3835  0017  0087               	movwf	7
  3836  0018  3001               	movlw	1
  3837  0019  0081               	movwf	1
  3838                           
  3839                           ;main.c: 221: I2C_buffer.data.selected1 = 0;
  3840  001A  30F5               	movlw	245
  3841  001B  0086               	movwf	6
  3842  001C  3022               	movlw	34
  3843  001D  0087               	movwf	7
  3844  001E  3153               	addfsr 1,19
  3845  001F  0181               	clrf	1
  3846                           
  3847                           ;main.c: 222: I2C_buffer.data.selected2 = 0;
  3848  0020  3042               	movlw	66
  3849  0021  0086               	movwf	6
  3850  0022  3023               	movlw	35
  3851  0023  0087               	movwf	7
  3852  0024  0181               	clrf	1
  3853                           
  3854                           ;main.c: 223: I2C_buffer.data.selected3 = 0;
  3855  0025  307C               	movlw	124
  3856  0026  0086               	movwf	6
  3857  0027  3023               	movlw	35
  3858  0028  0087               	movwf	7
  3859  0029  0181               	clrf	1
  3860                           
  3861                           ;main.c: 224: I2C_buffer.data.selected4 = 0;
  3862  002A  30B6               	movlw	182
  3863  002B  0086               	movwf	6
  3864  002C  3023               	movlw	35
  3865  002D  0087               	movwf	7
  3866  002E  0181               	clrf	1
  3867                           
  3868                           ;main.c: 225: } else {
  3869  002F  2840               	goto	i1l1690
  3870  0030                     i1l1688:
  3871                           
  3872                           ;main.c: 226: I2C_buffer.data.counter++;
  3873  0030  30F5               	movlw	245
  3874  0031  0086               	movwf	6
  3875  0032  3022               	movlw	34
  3876  0033  0087               	movwf	7
  3877  0034  3146               	addfsr 1,6
  3878  0035  3001               	movlw	1
  3879  0036  0781               	addwf	1,f
  3880  0037  3141               	addfsr 1,1
  3881  0038  3000               	movlw	0
  3882  0039  3D81               	addwfc	1,f
  3883  003A  3141               	addfsr 1,1
  3884  003B  3000               	movlw	0
  3885  003C  3D81               	addwfc	1,f
  3886  003D  3141               	addfsr 1,1
  3887  003E  3000               	movlw	0
  3888  003F  3D81               	addwfc	1,f
  3889  0040                     i1l1690:
  3890                           
  3891                           ;main.c: 227: };main.c: 228: };main.c: 229: INTCONbits.INTF = 0;
  3892  0040  108B               	bcf	11,1	;volatile
  3893                           
  3894                           ;main.c: 230: INTCONbits.INTE = 1;
  3895  0041  160B               	bsf	11,4	;volatile
  3896  0042                     i1l1694:
  3897                           
  3898                           ;main.c: 231: };main.c: 233: if (INTCONbits.IOCIF == 1) {
  3899  0042  1C0B               	btfss	11,0	;volatile
  3900  0043  28CF               	goto	i1l1748
  3901                           
  3902                           ;main.c: 234: INTCONbits.IOCIE = 0;
  3903  0044  118B               	bcf	11,3	;volatile
  3904                           
  3905                           ;main.c: 235: if (IOCBFbits.IOCBF2 == 1) {
  3906  0045  0027               	movlb	7	; select bank7
  3907  0046  1D16               	btfss	22,2	;volatile
  3908  0047  2866               	goto	i1l1710
  3909                           
  3910                           ;main.c: 236: if (PORTBbits.RB2 == 0) {
  3911  0048  0020               	movlb	0	; select bank0
  3912  0049  190D               	btfsc	13,2	;volatile
  3913  004A  2866               	goto	i1l1710
  3914                           
  3915                           ;main.c: 237: I2C_buffer.data.cancel = 0;
  3916  004B  30F5               	movlw	245
  3917  004C  0086               	movwf	6
  3918  004D  3022               	movlw	34
  3919  004E  0087               	movwf	7
  3920  004F  3145               	addfsr 1,5
  3921  0050  0181               	clrf	1
  3922                           
  3923                           ;main.c: 238: I2C_buffer.data.selected1 = 1;
  3924  0051  3008               	movlw	8
  3925  0052  0086               	movwf	6
  3926  0053  3023               	movlw	35
  3927  0054  0087               	movwf	7
  3928  0055  3001               	movlw	1
  3929  0056  0081               	movwf	1
  3930                           
  3931                           ;main.c: 239: I2C_buffer.data.selected2 = 0;
  3932  0057  3042               	movlw	66
  3933  0058  0086               	movwf	6
  3934  0059  3023               	movlw	35
  3935  005A  0087               	movwf	7
  3936  005B  0181               	clrf	1
  3937                           
  3938                           ;main.c: 240: I2C_buffer.data.selected3 = 0;
  3939  005C  307C               	movlw	124
  3940  005D  0086               	movwf	6
  3941  005E  3023               	movlw	35
  3942  005F  0087               	movwf	7
  3943  0060  0181               	clrf	1
  3944                           
  3945                           ;main.c: 241: I2C_buffer.data.selected4 = 0;
  3946  0061  30B6               	movlw	182
  3947  0062  0086               	movwf	6
  3948  0063  3023               	movlw	35
  3949  0064  0087               	movwf	7
  3950  0065  0181               	clrf	1
  3951  0066                     i1l1710:
  3952                           
  3953                           ;main.c: 242: };main.c: 243: };main.c: 244: if (IOCBFbits.IOCBF3 == 1) {
  3954  0066  0027               	movlb	7	; select bank7
  3955  0067  1D96               	btfss	22,3	;volatile
  3956  0068  2888               	goto	i1l1722
  3957                           
  3958                           ;main.c: 245: if (PORTBbits.RB3 == 0) {
  3959  0069  0020               	movlb	0	; select bank0
  3960  006A  198D               	btfsc	13,3	;volatile
  3961  006B  2888               	goto	i1l1722
  3962                           
  3963                           ;main.c: 246: I2C_buffer.data.cancel = 0;
  3964  006C  30F5               	movlw	245
  3965  006D  0086               	movwf	6
  3966  006E  3022               	movlw	34
  3967  006F  0087               	movwf	7
  3968  0070  3145               	addfsr 1,5
  3969  0071  0181               	clrf	1
  3970                           
  3971                           ;main.c: 247: I2C_buffer.data.selected1 = 0;
  3972  0072  30F5               	movlw	245
  3973  0073  0086               	movwf	6
  3974  0074  3022               	movlw	34
  3975  0075  0087               	movwf	7
  3976  0076  3153               	addfsr 1,19
  3977  0077  0181               	clrf	1
  3978                           
  3979                           ;main.c: 248: I2C_buffer.data.selected2 = 1;
  3980  0078  3042               	movlw	66
  3981  0079  0086               	movwf	6
  3982  007A  3023               	movlw	35
  3983  007B  0087               	movwf	7
  3984  007C  3001               	movlw	1
  3985  007D  0081               	movwf	1
  3986                           
  3987                           ;main.c: 249: I2C_buffer.data.selected3 = 0;
  3988  007E  307C               	movlw	124
  3989  007F  0086               	movwf	6
  3990  0080  3023               	movlw	35
  3991  0081  0087               	movwf	7
  3992  0082  0181               	clrf	1
  3993                           
  3994                           ;main.c: 250: I2C_buffer.data.selected4 = 0;
  3995  0083  30B6               	movlw	182
  3996  0084  0086               	movwf	6
  3997  0085  3023               	movlw	35
  3998  0086  0087               	movwf	7
  3999  0087  0181               	clrf	1
  4000  0088                     i1l1722:
  4001                           
  4002                           ;main.c: 251: };main.c: 252: };main.c: 253: if (IOCBFbits.IOCBF6 == 1) {
  4003  0088  0027               	movlb	7	; select bank7
  4004  0089  1F16               	btfss	22,6	;volatile
  4005  008A  28AA               	goto	i1l1734
  4006                           
  4007                           ;main.c: 254: if (PORTBbits.RB6 == 0) {
  4008  008B  0020               	movlb	0	; select bank0
  4009  008C  1B0D               	btfsc	13,6	;volatile
  4010  008D  28AA               	goto	i1l1734
  4011                           
  4012                           ;main.c: 255: I2C_buffer.data.cancel = 0;
  4013  008E  30F5               	movlw	245
  4014  008F  0086               	movwf	6
  4015  0090  3022               	movlw	34
  4016  0091  0087               	movwf	7
  4017  0092  3145               	addfsr 1,5
  4018  0093  0181               	clrf	1
  4019                           
  4020                           ;main.c: 256: I2C_buffer.data.selected1 = 0;
  4021  0094  30F5               	movlw	245
  4022  0095  0086               	movwf	6
  4023  0096  3022               	movlw	34
  4024  0097  0087               	movwf	7
  4025  0098  3153               	addfsr 1,19
  4026  0099  0181               	clrf	1
  4027                           
  4028                           ;main.c: 257: I2C_buffer.data.selected2 = 0;
  4029  009A  3042               	movlw	66
  4030  009B  0086               	movwf	6
  4031  009C  3023               	movlw	35
  4032  009D  0087               	movwf	7
  4033  009E  0181               	clrf	1
  4034                           
  4035                           ;main.c: 258: I2C_buffer.data.selected3 = 1;
  4036  009F  307C               	movlw	124
  4037  00A0  0086               	movwf	6
  4038  00A1  3023               	movlw	35
  4039  00A2  0087               	movwf	7
  4040  00A3  3001               	movlw	1
  4041  00A4  0081               	movwf	1
  4042                           
  4043                           ;main.c: 259: I2C_buffer.data.selected4 = 0;
  4044  00A5  30B6               	movlw	182
  4045  00A6  0086               	movwf	6
  4046  00A7  3023               	movlw	35
  4047  00A8  0087               	movwf	7
  4048  00A9  0181               	clrf	1
  4049  00AA                     i1l1734:
  4050                           
  4051                           ;main.c: 260: };main.c: 261: };main.c: 262: if (IOCBFbits.IOCBF7 == 1) {
  4052  00AA  0027               	movlb	7	; select bank7
  4053  00AB  1F96               	btfss	22,7	;volatile
  4054  00AC  28CC               	goto	i1l136
  4055                           
  4056                           ;main.c: 263: if (PORTBbits.RB7 == 0) {
  4057  00AD  0020               	movlb	0	; select bank0
  4058  00AE  1B8D               	btfsc	13,7	;volatile
  4059  00AF  28CC               	goto	i1l136
  4060                           
  4061                           ;main.c: 264: I2C_buffer.data.cancel = 0;
  4062  00B0  30F5               	movlw	245
  4063  00B1  0086               	movwf	6
  4064  00B2  3022               	movlw	34
  4065  00B3  0087               	movwf	7
  4066  00B4  3145               	addfsr 1,5
  4067  00B5  0181               	clrf	1
  4068                           
  4069                           ;main.c: 265: I2C_buffer.data.selected1 = 0;
  4070  00B6  30F5               	movlw	245
  4071  00B7  0086               	movwf	6
  4072  00B8  3022               	movlw	34
  4073  00B9  0087               	movwf	7
  4074  00BA  3153               	addfsr 1,19
  4075  00BB  0181               	clrf	1
  4076                           
  4077                           ;main.c: 266: I2C_buffer.data.selected2 = 0;
  4078  00BC  3042               	movlw	66
  4079  00BD  0086               	movwf	6
  4080  00BE  3023               	movlw	35
  4081  00BF  0087               	movwf	7
  4082  00C0  0181               	clrf	1
  4083                           
  4084                           ;main.c: 267: I2C_buffer.data.selected3 = 0;
  4085  00C1  307C               	movlw	124
  4086  00C2  0086               	movwf	6
  4087  00C3  3023               	movlw	35
  4088  00C4  0087               	movwf	7
  4089  00C5  0181               	clrf	1
  4090                           
  4091                           ;main.c: 268: I2C_buffer.data.selected4 = 1;
  4092  00C6  30B6               	movlw	182
  4093  00C7  0086               	movwf	6
  4094  00C8  3023               	movlw	35
  4095  00C9  0087               	movwf	7
  4096  00CA  3001               	movlw	1
  4097  00CB  0081               	movwf	1
  4098  00CC                     i1l136:
  4099                           
  4100                           ;main.c: 269: };main.c: 270: };main.c: 271: IOCBF = 0;
  4101  00CC  0027               	movlb	7	; select bank7
  4102  00CD  0196               	clrf	22	;volatile
  4103                           
  4104                           ;main.c: 272: INTCONbits.IOCIE = 1;
  4105  00CE  158B               	bsf	11,3	;volatile
  4106  00CF                     i1l1748:
  4107                           
  4108                           ;main.c: 273: };main.c: 275: if (PIR1bits.TMR1IF == 1)
  4109  00CF  0020               	movlb	0	; select bank0
  4110  00D0  1C11               	btfss	17,0	;volatile
  4111  00D1  28D9               	goto	i1l138
  4112                           
  4113                           ;main.c: 276: {;main.c: 277: T1CONbits.TMR1ON = 0;
  4114  00D2  1018               	bcf	24,0	;volatile
  4115  00D3  0064               	clrwdt	;# 
  4116                           
  4117                           ;main.c: 279: readADC = 1;
  4118  00D4  0020               	movlb	0	; select bank0
  4119  00D5  01ED               	clrf	_readADC
  4120  00D6  0AED               	incf	_readADC,f
  4121                           
  4122                           ;main.c: 280: PIR1bits.TMR1IF = 0;
  4123  00D7  1011               	bcf	17,0	;volatile
  4124                           
  4125                           ;main.c: 281: T1CONbits.TMR1ON = 1;
  4126  00D8  1418               	bsf	24,0	;volatile
  4127  00D9                     i1l138:
  4128                           
  4129                           ;main.c: 282: };main.c: 284: static unsigned char junk = 0;;main.c: 286: if (PIR1bits.SS
      +                          P1IF)
  4130  00D9  1D91               	btfss	17,3	;volatile
  4131  00DA  293D               	goto	i1l1808
  4132                           
  4133                           ;main.c: 287: {;main.c: 288: INTCONbits.IOCIE = 0;
  4134  00DB  118B               	bcf	11,3	;volatile
  4135                           
  4136                           ;main.c: 289: PIE1bits.TMR1IE = 0;
  4137  00DC  0021               	movlb	1	; select bank1
  4138  00DD  1011               	bcf	17,0	;volatile
  4139                           
  4140                           ;main.c: 290: if (SSP1STATbits.R_nW)
  4141  00DE  0024               	movlb	4	; select bank4
  4142  00DF  1D14               	btfss	20,2	;volatile
  4143  00E0  28FF               	goto	i1l1770
  4144                           
  4145                           ;main.c: 291: {;main.c: 292: if (!SSP1STATbits.D_nA)
  4146  00E1  1A94               	btfsc	20,5	;volatile
  4147  00E2  28F0               	goto	i1l1762
  4148                           
  4149                           ;main.c: 293: {;main.c: 294: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4150  00E3  087A               	movf	_index_i2c,w	;volatile
  4151  00E4  3EF5               	addlw	245
  4152  00E5  0086               	movwf	6
  4153  00E6  0187               	clrf	7
  4154  00E7  3022               	movlw	34
  4155  00E8  3D87               	addwfc	7,f
  4156  00E9  0801               	movf	1,w
  4157  00EA  0091               	movwf	17	;volatile
  4158  00EB  3001               	movlw	1
  4159  00EC  00F0               	movwf	??_isr
  4160  00ED  0870               	movf	??_isr,w
  4161  00EE  07FA               	addwf	_index_i2c,f	;volatile
  4162                           
  4163                           ;main.c: 295: SSP1CON1bits.CKP = 1;
  4164  00EF  1615               	bsf	21,4	;volatile
  4165  00F0                     i1l1762:
  4166                           
  4167                           ;main.c: 296: };main.c: 297: if (SSP1STATbits.D_nA)
  4168  00F0  1E94               	btfss	20,5	;volatile
  4169  00F1  28FF               	goto	i1l1770
  4170                           
  4171                           ;main.c: 298: {;main.c: 299: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4172  00F2  087A               	movf	_index_i2c,w	;volatile
  4173  00F3  3EF5               	addlw	245
  4174  00F4  0086               	movwf	6
  4175  00F5  0187               	clrf	7
  4176  00F6  3022               	movlw	34
  4177  00F7  3D87               	addwfc	7,f
  4178  00F8  0801               	movf	1,w
  4179  00F9  0091               	movwf	17	;volatile
  4180  00FA  3001               	movlw	1
  4181  00FB  00F0               	movwf	??_isr
  4182  00FC  0870               	movf	??_isr,w
  4183  00FD  07FA               	addwf	_index_i2c,f	;volatile
  4184                           
  4185                           ;main.c: 300: SSP1CON1bits.CKP = 1;
  4186  00FE  1615               	bsf	21,4	;volatile
  4187  00FF                     i1l1770:
  4188                           
  4189                           ;main.c: 301: };main.c: 302: };main.c: 303: if (!SSP1STATbits.R_nW)
  4190  00FF  1914               	btfsc	20,2	;volatile
  4191  0100  2938               	goto	i1l1802
  4192                           
  4193                           ;main.c: 304: {;main.c: 305: if (!SSP1STATbits.D_nA)
  4194  0101  1A94               	btfsc	20,5	;volatile
  4195  0102  290C               	goto	i1l1778
  4196                           
  4197                           ;main.c: 306: {;main.c: 307: first_i2c = 1;
  4198  0103  3001               	movlw	1
  4199  0104  00F0               	movwf	??_isr
  4200  0105  0870               	movf	??_isr,w
  4201  0106  00FB               	movwf	_first_i2c	;volatile
  4202                           
  4203                           ;main.c: 308: junk = SSP1BUF;
  4204  0107  0811               	movf	17,w	;volatile
  4205  0108  00F0               	movwf	??_isr
  4206  0109  0870               	movf	??_isr,w
  4207  010A  00F9               	movwf	isr@junk
  4208                           
  4209                           ;main.c: 309: SSP1CON1bits.CKP = 1;
  4210  010B  1615               	bsf	21,4	;volatile
  4211  010C                     i1l1778:
  4212                           
  4213                           ;main.c: 310: };main.c: 311: if (SSP1STATbits.D_nA)
  4214  010C  1E94               	btfss	20,5	;volatile
  4215  010D  2938               	goto	i1l1802
  4216                           
  4217                           ;main.c: 312: {;main.c: 313: if (first_i2c) {
  4218  010E  087B               	movf	_first_i2c,w	;volatile
  4219  010F  1903               	btfsc	3,2
  4220  0110  2917               	goto	i1l1786
  4221                           
  4222                           ;main.c: 314: index_i2c = SSP1BUF;
  4223  0111  0811               	movf	17,w	;volatile
  4224  0112  00F0               	movwf	??_isr
  4225  0113  0870               	movf	??_isr,w
  4226  0114  00FA               	movwf	_index_i2c	;volatile
  4227                           
  4228                           ;main.c: 315: first_i2c = 0;
  4229  0115  01FB               	clrf	_first_i2c	;volatile
  4230                           
  4231                           ;main.c: 316: }
  4232  0116  2930               	goto	i1l1794
  4233  0117                     i1l1786:
  4234                           
  4235                           ;main.c: 318: else {;main.c: 319: if (index_i2c < RX_ELMNTS)
  4236  0117  30FB               	movlw	251
  4237  0118  027A               	subwf	_index_i2c,w	;volatile
  4238  0119  1803               	skipnc
  4239  011A  292C               	goto	i1l1792
  4240                           
  4241                           ;main.c: 320: {;main.c: 321: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  4242  011B  087A               	movf	_index_i2c,w	;volatile
  4243  011C  3EF5               	addlw	245
  4244  011D  00F0               	movwf	??_isr
  4245  011E  01F1               	clrf	??_isr+1
  4246  011F  3022               	movlw	34
  4247  0120  3DF1               	addwfc	??_isr+1,f
  4248  0121  0870               	movf	??_isr,w
  4249  0122  0086               	movwf	6
  4250  0123  0871               	movf	??_isr+1,w
  4251  0124  0087               	movwf	7
  4252  0125  0811               	movf	17,w	;volatile
  4253  0126  0081               	movwf	1
  4254  0127  3001               	movlw	1
  4255  0128  00F0               	movwf	??_isr
  4256  0129  0870               	movf	??_isr,w
  4257  012A  07FA               	addwf	_index_i2c,f	;volatile
  4258                           
  4259                           ;main.c: 322: } else {
  4260  012B  2930               	goto	i1l1794
  4261  012C                     i1l1792:
  4262                           
  4263                           ;main.c: 323: junk = SSP1BUF;
  4264  012C  0811               	movf	17,w	;volatile
  4265  012D  00F0               	movwf	??_isr
  4266  012E  0870               	movf	??_isr,w
  4267  012F  00F9               	movwf	isr@junk
  4268  0130                     i1l1794:
  4269                           
  4270                           ;main.c: 324: };main.c: 325: };main.c: 326: if (SSP1CON1bits.WCOL)
  4271  0130  1F95               	btfss	21,7	;volatile
  4272  0131  2937               	goto	i1l1800
  4273                           
  4274                           ;main.c: 327: {;main.c: 328: SSP1CON1bits.WCOL = 0;
  4275  0132  1395               	bcf	21,7	;volatile
  4276                           
  4277                           ;main.c: 329: junk = SSP1BUF;
  4278  0133  0811               	movf	17,w	;volatile
  4279  0134  00F0               	movwf	??_isr
  4280  0135  0870               	movf	??_isr,w
  4281  0136  00F9               	movwf	isr@junk
  4282  0137                     i1l1800:
  4283                           
  4284                           ;main.c: 330: };main.c: 331: SSP1CON1bits.CKP = 1;
  4285  0137  1615               	bsf	21,4	;volatile
  4286  0138                     i1l1802:
  4287                           
  4288                           ;main.c: 332: };main.c: 333: };main.c: 334: PIR1bits.SSP1IF = 0;
  4289  0138  0020               	movlb	0	; select bank0
  4290  0139  1191               	bcf	17,3	;volatile
  4291                           
  4292                           ;main.c: 335: INTCONbits.IOCIE = 1;
  4293  013A  158B               	bsf	11,3	;volatile
  4294                           
  4295                           ;main.c: 336: PIE1bits.TMR1IE = 1;
  4296  013B  0021               	movlb	1	; select bank1
  4297  013C  1411               	bsf	17,0	;volatile
  4298  013D                     i1l1808:
  4299                           
  4300                           ;main.c: 337: };main.c: 339: if (PIR2bits.BCL1IF)
  4301  013D  0020               	movlb	0	; select bank0
  4302  013E  1D92               	btfss	18,3	;volatile
  4303  013F  294B               	goto	i1l154
  4304                           
  4305                           ;main.c: 340: {;main.c: 341: junk = SSP1BUF;
  4306  0140  0024               	movlb	4	; select bank4
  4307  0141  0811               	movf	17,w	;volatile
  4308  0142  00F0               	movwf	??_isr
  4309  0143  0870               	movf	??_isr,w
  4310  0144  00F9               	movwf	isr@junk
  4311                           
  4312                           ;main.c: 342: PIR2bits.BCL1IF = 0;
  4313  0145  0020               	movlb	0	; select bank0
  4314  0146  1192               	bcf	18,3	;volatile
  4315                           
  4316                           ;main.c: 343: SSP1CON1bits.CKP = 1;
  4317  0147  0024               	movlb	4	; select bank4
  4318  0148  1615               	bsf	21,4	;volatile
  4319                           
  4320                           ;main.c: 344: PIR1bits.SSP1IF = 0;
  4321  0149  0020               	movlb	0	; select bank0
  4322  014A  1191               	bcf	17,3	;volatile
  4323  014B                     i1l154:
  4324  014B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4325  014C  0009               	retfie
  4326  014D                     __end_of_isr:
  4327  007E                     btemp	set	126	;btemp
  4328  007E                     int$flags	set	126
  4329  007E                     wtemp0	set	126
  4330  22F5                     
  4331                           	psect	config
  4332                           
  4333                           ;Config register CONFIG1 @ 0x8007
  4334                           ;	Oscillator Selection
  4335                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4336                           ;	Watchdog Timer Enable
  4337                           ;	WDTE = ON, WDT enabled
  4338                           ;	Power-up Timer Enable
  4339                           ;	PWRTE = ON, PWRT enabled
  4340                           ;	MCLR Pin Function Select
  4341                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4342                           ;	Flash Program Memory Code Protection
  4343                           ;	CP = OFF, Program memory code protection is disabled
  4344                           ;	Data Memory Code Protection
  4345                           ;	CPD = OFF, Data memory code protection is disabled
  4346                           ;	Brown-out Reset Enable
  4347                           ;	BOREN = ON, Brown-out Reset enabled
  4348                           ;	Clock Out Enable
  4349                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4350                           ;	Internal/External Switchover
  4351                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4352                           ;	Fail-Safe Clock Monitor Enable
  4353                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4354  8007                     	org	32775
  4355  8007  0FDC               	dw	4060
  4356                           
  4357                           ;Config register CONFIG2 @ 0x8008
  4358                           ;	Flash Memory Self-Write Protection
  4359                           ;	WRT = OFF, Write protection off
  4360                           ;	PLL Enable
  4361                           ;	PLLEN = ON, 4x PLL enabled
  4362                           ;	Stack Overflow/Underflow Reset Enable
  4363                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4364                           ;	Brown-out Reset Voltage Selection
  4365                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4366                           ;	Low-Voltage Programming Enable
  4367                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4368  8008                     	org	32776
  4369  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    1
    Data        1
    BSS         12
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     71      79
    BANK1            80      4       6
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            37      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init_I2C_buffer
    _map->___lldiv
    _map->___lwdiv
    ___lldiv->___lmul
    _init_I2C_buffer->_eeprom_read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _map->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    14      4    5959
                                             57 BANK0     14    10      4
                                              0 BANK1      4     4      0
                           _ADC_read
                            ___lwdiv
                       _eeprom_write
                    _init_I2C_buffer
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    2754
                                             21 BANK0     36    16     20
                            ___lldiv
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              2 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              6 COMMON     1     1      0
                                              8 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      7     7      0     551
                                              6 COMMON     3     3      0
                                              0 BANK0      4     4      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         4     3      1     422
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1681
                                              2 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2      31
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
   ___lwdiv
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read
   _map
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4       6       7        7.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      61      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               25      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      61      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jun 18 14:13:14 2021

                     l106 0EF9                       l202 04C3                       l204 04CF  
                     l206 04DA                       l208 04E5                       l182 02FE  
                     l174 0274                       l191 040D                       l159 01AA  
                     l184 0384                       l176 02FB                       l196 0410  
                     l189 0387                       l374 07E8                       l198 0496  
                     l394 0F02                       _map 0FA2                       _isr 0004  
                     wreg 0009                      l2100 0F8E                      l2104 0F99  
                    l2072 0F29                      l2242 07D7                      l2234 07B9  
                    l2170 074F                      l2090 0F60                      l2236 07C5  
                    l2156 072E                      l2092 0F6E                      l2076 0F33  
                    l2324 01BD                      l2246 07E0                      l2406 0329  
                    l2184 0771                      l2424 03B2                      l2360 0213  
                    l2336 01D9                      l2450 0498                      l2442 043B  
                    l2370 023E                      l2348 01F6                      l2198 0793  
                    l2470 04DB                      l2462 04C5                      l2454 049F  
                    l2456 04B2                      l2482 0517                      l2474 04E6  
                    l2466 04D0                      l2458 04B8                      l2388 02A0  
                    l2486 056D                      l2488 06C6                      ?_map 0035  
                    ?_isr 0070                      u2105 02C8                      u2115 02F1  
                    u2205 03DA                      _LATA 010C                      _LATB 010D  
                    u2215 0403                      u2155 0351                      u2165 037A  
                    u2407 0EF2                      u2255 0463                      u2265 048C  
                    u1731 07E7                      u2357 0239                      u1815 0F6F  
                    u2367 028A                      u1825 0F83                      u2377 0314  
                    u1835 0F8F                      u1755 0F34                      u2387 039D  
                    u1765 0F3B                      u2397 0426                      u1855 0EE7  
                    u1955 07BC                      u1795 0F63                      u1975 07C6  
                    u1985 07D0                      u1995 07D8                      _WPUA 020C  
                    _WPUB 020D            ??_eeprom_write 0073                      _main 016E  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    map@x 0035                      btemp 007E                      start 014D  
        __end_of_ADC_read 0F01                     ??_map 0049                     ??_isr 0070  
                   ?_main 0059                     _EEADR 0191           __end_of___lldiv 0FA2  
                   _T1CON 0018                     _IOCBF 0396                     _IOCBN 0395  
         __end_of___lwdiv 07E5                     i1l136 00CC                     i1l154 014B  
                   i1l138 00D9                     _TRISA 008C                     _TRISB 008D  
     ___lmul@multiplicand 0024                     main@i 00A0                     status 0003  
                   wtemp0 007E           __initialization 014F              __end_of_main 06D2  
                  ??_main 005D                    _ADCON0 009D                    _ADCON1 009E  
                  _ADRESH 009C                    _ADRESL 009B                    _EEDATA 0193  
                  _EECON1 0195                    _EECON2 0196                    _ANSELA 018C  
                  _ANSELB 018D                    i1l1710 0066                    i1l1800 0137  
                  i1l1802 0138                    i1l1722 0088                    i1l1734 00AA  
                  i1l1808 013D                    i1l1762 00F0                    i1l1770 00FF  
                  i1l1690 0040                    i1l1748 00CF                    i1l1694 0042  
                  i1l1792 012C                    i1l1688 0030                    i1l1794 0130  
                  i1l1786 0117                    i1l1778 010C                    _INTCON 000B  
                  _OSCCON 0099      __size_of_eeprom_read 0015                    ___lmul 0F21  
               ??___lldiv 0076                 ??___lwdiv 0076      __end_of_eeprom_write 0F21  
                  _stock1 006B                    _stock2 0069                    _stock3 0067  
                  _stock4 00A4  __size_of_init_I2C_buffer 00DE              __pdataCOMMON 007B  
               ?_ADC_read 0072         __end_of_RX_ELMNTS 1001   __end_of__initialization 016A  
         eeprom_read@addr 0075            __pcstackCOMMON 0070      init_I2C_buffer@i_663 0021  
    init_I2C_buffer@i_664 0022      init_I2C_buffer@i_665 0023            _OPTION_REGbits 0095  
         ADC_read@channel 0075                ??_ADC_read 0074         eeprom_write@value 0072  
              __pbssBANK0 0067                __pbssBANK1 00A4                __pmaintext 016E  
                 ?___lmul 0020                __pintentry 0004            ___lmul@product 0072  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0076  
   __size_of_eeprom_write 0020           __size_of___lmul 002F                   ___lldiv 0F50  
                 ___lwdiv 07B0                   __ptext1 0FA2                   __ptext2 0F21  
                 __ptext3 0F50                   __ptext4 06D2                   __ptext5 07E5  
                 __ptext6 0F01                   __ptext7 07B0                   __ptext8 0EE3  
                 _average 006E                   _readADC 006D                 _T1CONbits 0018  
            __size_of_map 005E              __size_of_isr 0149                 _IOCBFbits 0396  
                 clrloop0 0ED8      end_of_initialization 016A                   isr@junk 0079  
            _eeprom_write 0F01           ___lldiv@divisor 0028           ___lldiv@counter 0034  
               _PORTBbits 000D         __size_of_ADC_read 001E                map@out_max 0045  
              map@out_min 0041                 _RX_ELMNTS 1000             ??_eeprom_read 0072  
          __end_of___lmul 0F50             __pidataCOMMON 07FA       start_initialization 014F  
             __end_of_map 1000               __end_of_isr 014D                  ??___lmul 0072  
     __end_of_eeprom_read 07FA           _init_I2C_buffer 06D2               __pbssBIGRAM 22F5  
             __pbssCOMMON 0079                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0          init_I2C_buffer@i 0020          eeprom_write@addr 0075  
        ___lwdiv@dividend 0074                  ?___lldiv 0028                  ?___lwdiv 0072  
               _first_i2c 007B                 _index_i2c 007A                  _ADC_read 0EE3  
        ___lwdiv@quotient 0021                  _LATAbits 010C                  _LATBbits 010D  
               clear_ram0 0ED7               _eeprom_read 07E5                  _PIE1bits 0091  
                _PIE2bits 0092                  _PIR1bits 0011                  _PIR2bits 0012  
 __end_of_init_I2C_buffer 07B0                  _SSP1CON1 0215                  _SSP1STAT 0214  
               map@in_max 003D                 map@in_min 0039                _ADCON0bits 009D  
               main@i_845 00A1                 main@i_846 00A2                 main@i_847 00A3  
       ___lmul@multiplier 0020                _I2C_buffer 22F5                _EECON1bits 0195  
        __size_of___lldiv 0052          __size_of___lwdiv 0035           ___lwdiv@divisor 0072  
         ___lwdiv@counter 0020              _SSP1CON1bits 0215              _SSP1CON2bits 0216  
            _SSP1CON3bits 0217             __size_of_main 0564          ?_init_I2C_buffer 0070  
                int$flags 007E                  main@argc 0059                  main@argv 005B  
            _SSP1STATbits 0214                _INTCONbits 000B                  intlevel1 0000  
        ___lldiv@dividend 002C             __pstringtext1 1000          ___lldiv@quotient 0030  
           ?_eeprom_write 0072                _STATUSbits 0003              ?_eeprom_read 0070  
