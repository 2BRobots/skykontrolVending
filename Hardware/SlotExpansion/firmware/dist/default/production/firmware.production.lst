

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 22:39:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1847
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x620,48
    27                           	dabs	1,0x5A0,80
    28                           	dabs	1,0x520,80
    29                           	dabs	1,0x4C5,43
    30                           	dabs	1,0x22F5,0,_I2C_buffer
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1847 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0219                     	;# 
   168  021A                     	;# 
   169  021B                     	;# 
   170  021C                     	;# 
   171  021D                     	;# 
   172  021E                     	;# 
   173  021F                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0295                     	;# 
   180  0295                     	;# 
   181  0296                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029B                     	;# 
   187  029C                     	;# 
   188  029C                     	;# 
   189  029D                     	;# 
   190  029E                     	;# 
   191  029E                     	;# 
   192  0311                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0318                     	;# 
   197  0318                     	;# 
   198  0319                     	;# 
   199  031A                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225                           
   226                           	psect	eeprom_data
   227  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   228  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   229  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   230  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   231  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   232  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   233  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   234  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   235  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   236  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   237  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   238  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   239  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   240  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   241  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   242  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   243  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   244  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   245  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   246  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   247  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   248  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   249  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   250  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   251  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   252  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   253  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   254  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   255  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0113                     	;# 
   307  0114                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0117                     	;# 
   311  0118                     	;# 
   312  0119                     	;# 
   313  011A                     	;# 
   314  011B                     	;# 
   315  011D                     	;# 
   316  011E                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0194                     	;# 
   326  0195                     	;# 
   327  0196                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020C                     	;# 
   340  020D                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0219                     	;# 
   357  021A                     	;# 
   358  021B                     	;# 
   359  021C                     	;# 
   360  021D                     	;# 
   361  021E                     	;# 
   362  021F                     	;# 
   363  0291                     	;# 
   364  0291                     	;# 
   365  0292                     	;# 
   366  0293                     	;# 
   367  0294                     	;# 
   368  0295                     	;# 
   369  0295                     	;# 
   370  0296                     	;# 
   371  0298                     	;# 
   372  0298                     	;# 
   373  0299                     	;# 
   374  029A                     	;# 
   375  029B                     	;# 
   376  029C                     	;# 
   377  029C                     	;# 
   378  029D                     	;# 
   379  029E                     	;# 
   380  029E                     	;# 
   381  0311                     	;# 
   382  0311                     	;# 
   383  0312                     	;# 
   384  0313                     	;# 
   385  0318                     	;# 
   386  0318                     	;# 
   387  0319                     	;# 
   388  031A                     	;# 
   389  0394                     	;# 
   390  0395                     	;# 
   391  0396                     	;# 
   392  039A                     	;# 
   393  039C                     	;# 
   394  039D                     	;# 
   395  039E                     	;# 
   396  039F                     	;# 
   397  0415                     	;# 
   398  0416                     	;# 
   399  0417                     	;# 
   400  041C                     	;# 
   401  041D                     	;# 
   402  041E                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  0111                     	;# 
   463  0112                     	;# 
   464  0113                     	;# 
   465  0114                     	;# 
   466  0115                     	;# 
   467  0116                     	;# 
   468  0117                     	;# 
   469  0118                     	;# 
   470  0119                     	;# 
   471  011A                     	;# 
   472  011B                     	;# 
   473  011D                     	;# 
   474  011E                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477  0191                     	;# 
   478  0191                     	;# 
   479  0192                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0194                     	;# 
   484  0195                     	;# 
   485  0196                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0219                     	;# 
   515  021A                     	;# 
   516  021B                     	;# 
   517  021C                     	;# 
   518  021D                     	;# 
   519  021E                     	;# 
   520  021F                     	;# 
   521  0291                     	;# 
   522  0291                     	;# 
   523  0292                     	;# 
   524  0293                     	;# 
   525  0294                     	;# 
   526  0295                     	;# 
   527  0295                     	;# 
   528  0296                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  029B                     	;# 
   534  029C                     	;# 
   535  029C                     	;# 
   536  029D                     	;# 
   537  029E                     	;# 
   538  029E                     	;# 
   539  0311                     	;# 
   540  0311                     	;# 
   541  0312                     	;# 
   542  0313                     	;# 
   543  0318                     	;# 
   544  0318                     	;# 
   545  0319                     	;# 
   546  031A                     	;# 
   547  0394                     	;# 
   548  0395                     	;# 
   549  0396                     	;# 
   550  039A                     	;# 
   551  039C                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0014                     	;# 
   590  0015                     	;# 
   591  0016                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  0019                     	;# 
   596  001A                     	;# 
   597  001B                     	;# 
   598  001C                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  0111                     	;# 
   621  0112                     	;# 
   622  0113                     	;# 
   623  0114                     	;# 
   624  0115                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  0118                     	;# 
   628  0119                     	;# 
   629  011A                     	;# 
   630  011B                     	;# 
   631  011D                     	;# 
   632  011E                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0191                     	;# 
   636  0191                     	;# 
   637  0192                     	;# 
   638  0193                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0194                     	;# 
   642  0195                     	;# 
   643  0196                     	;# 
   644  0199                     	;# 
   645  019A                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019C                     	;# 
   651  019C                     	;# 
   652  019D                     	;# 
   653  019E                     	;# 
   654  019F                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  0211                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0212                     	;# 
   661  0213                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  0219                     	;# 
   673  021A                     	;# 
   674  021B                     	;# 
   675  021C                     	;# 
   676  021D                     	;# 
   677  021E                     	;# 
   678  021F                     	;# 
   679  0291                     	;# 
   680  0291                     	;# 
   681  0292                     	;# 
   682  0293                     	;# 
   683  0294                     	;# 
   684  0295                     	;# 
   685  0295                     	;# 
   686  0296                     	;# 
   687  0298                     	;# 
   688  0298                     	;# 
   689  0299                     	;# 
   690  029A                     	;# 
   691  029B                     	;# 
   692  029C                     	;# 
   693  029C                     	;# 
   694  029D                     	;# 
   695  029E                     	;# 
   696  029E                     	;# 
   697  0311                     	;# 
   698  0311                     	;# 
   699  0312                     	;# 
   700  0313                     	;# 
   701  0318                     	;# 
   702  0318                     	;# 
   703  0319                     	;# 
   704  031A                     	;# 
   705  0394                     	;# 
   706  0395                     	;# 
   707  0396                     	;# 
   708  039A                     	;# 
   709  039C                     	;# 
   710  039D                     	;# 
   711  039E                     	;# 
   712  039F                     	;# 
   713  0415                     	;# 
   714  0416                     	;# 
   715  0417                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  0FE4                     	;# 
   720  0FE5                     	;# 
   721  0FE6                     	;# 
   722  0FE7                     	;# 
   723  0FE8                     	;# 
   724  0FE9                     	;# 
   725  0FEA                     	;# 
   726  0FEB                     	;# 
   727  0FED                     	;# 
   728  0FEE                     	;# 
   729  0FEF                     	;_I2C_buffer
   730                           
   731                           	psect	idataCOMMON
   732  07FA                     __pidataCOMMON:	
   733                           
   734                           ;initializer for _first_i2c
   735  07FA  3401               	retlw	1
   736                           
   737                           	psect	stringtext1
   738  1000                     __pstringtext1:	
   739  1000                     _RX_ELMNTS:	
   740  1000  34FB               	retlw	251
   741  1001                     __end_of_RX_ELMNTS:	
   742  0003                     _STATUSbits	set	3
   743  0018                     _T1CON	set	24
   744  000B                     _INTCON	set	11
   745  0012                     _PIR2bits	set	18
   746  0018                     _T1CONbits	set	24
   747  0011                     _PIR1bits	set	17
   748  000D                     _PORTBbits	set	13
   749  000B                     _INTCONbits	set	11
   750  0092                     _PIE2bits	set	146
   751  008D                     _TRISB	set	141
   752  008C                     _TRISA	set	140
   753  009E                     _ADCON1	set	158
   754  0095                     _OPTION_REGbits	set	149
   755  0099                     _OSCCON	set	153
   756  0091                     _PIE1bits	set	145
   757  009B                     _ADRESL	set	155
   758  009C                     _ADRESH	set	156
   759  009D                     _ADCON0bits	set	157
   760  009D                     _ADCON0	set	157
   761  010D                     _LATBbits	set	269
   762  010C                     _LATAbits	set	268
   763  010D                     _LATB	set	269
   764  010C                     _LATA	set	268
   765  0191                     _EEADR	set	401
   766  0196                     _EECON2	set	406
   767  0193                     _EEDATA	set	403
   768  0195                     _EECON1	set	405
   769  0195                     _EECON1bits	set	405
   770  018D                     _ANSELB	set	397
   771  018C                     _ANSELA	set	396
   772  0212                     _SSP1ADD	set	530
   773  0217                     _SSP1CON3bits	set	535
   774  0216                     _SSP1CON2bits	set	534
   775  0215                     _SSP1CON1	set	533
   776  0214                     _SSP1STAT	set	532
   777  020D                     _WPUB	set	525
   778  020C                     _WPUA	set	524
   779  0215                     _SSP1CON1bits	set	533
   780  0211                     _SSP1BUF	set	529
   781  0214                     _SSP1STATbits	set	532
   782  0395                     _IOCBN	set	917
   783  0396                     _IOCBF	set	918
   784  0396                     _IOCBFbits	set	918
   785                           
   786                           ; #config settings
   787  0000                     
   788                           	psect	cinit
   789  014F                     start_initialization:	
   790  014F                     __initialization:		;BIGRAM
   791                           
   792                           ; Initialize objects allocated to COMMON
   793  014F  3187  27FA  3181   	fcall	__pidataCOMMON	;fetch initializer
   794  0152  00FB               	movwf	__pdataCOMMON& (0+127)
   795                           
   796                           ; Clear objects allocated to BIGRAM
   797  0153  30F5               	movlw	low (0+8949)
   798  0154  0084               	movwf	4
   799  0155  3022               	movlw	high (0+8949)
   800  0156  0085               	movwf	5
   801  0157  30FB               	movlw	251
   802  0158  00FE               	movwf	btemp
   803  0159  3000               	movlw	0
   804  015A  00FF               	movwf	btemp+1
   805  015B  318E  26D7         	fcall	clear_ram0
   806                           
   807                           ; Clear objects allocated to COMMON
   808  015D  01F9               	clrf	__pbssCOMMON& (0+127)
   809  015E  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   810                           
   811                           ; Clear objects allocated to BANK0
   812  015F  01E7               	clrf	__pbssBANK0& (0+127)
   813  0160  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   814  0161  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   815  0162  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   816  0163  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   817  0164  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   818  0165  01ED               	clrf	(__pbssBANK0+6)& (0+127)
   819  0166  01EE               	clrf	(__pbssBANK0+7)& (0+127)
   820                           
   821                           ; Clear objects allocated to BANK1
   822  0167  0021               	movlb	1	; select bank1
   823  0168  01A4               	clrf	__pbssBANK1& (0+127)
   824  0169  01A5               	clrf	(__pbssBANK1+1)& (0+127)
   825  016A                     end_of_initialization:	
   826                           ;End of C runtime variable initialization code
   827                           
   828  016A                     __end_of__initialization:	
   829  016A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   830  016B  0020               	movlb	0
   831  016C  3181  296E         	ljmp	_main	;jump to C main() function
   832                           
   833                           	psect	bssCOMMON
   834  0079                     __pbssCOMMON:	
   835  0079                     isr@junk:	
   836  0079                     	ds	1
   837  007A                     _index_i2c:	
   838  007A                     	ds	1
   839                           
   840                           	psect	dataCOMMON
   841  007B                     __pdataCOMMON:	
   842  007B                     _first_i2c:	
   843  007B                     	ds	1
   844                           
   845                           	psect	bssBANK0
   846  0067                     __pbssBANK0:	
   847  0067                     _stock3:	
   848  0067                     	ds	2
   849  0069                     _stock2:	
   850  0069                     	ds	2
   851  006B                     _stock1:	
   852  006B                     	ds	2
   853  006D                     _readADC:	
   854  006D                     	ds	1
   855  006E                     _average:	
   856  006E                     	ds	1
   857                           
   858                           	psect	bssBANK1
   859  00A4                     __pbssBANK1:	
   860  00A4                     _stock4:	
   861  00A4                     	ds	2
   862                           
   863                           	psect	clrtext
   864  0ED7                     clear_ram0:	
   865                           ;	Called with FSR0 containing the base address, and
   866                           ;	btemp/btemp+1 has the size to clear
   867                           
   868  0ED7  0064               	clrwdt	;clear the watchdog before getting into this loop
   869  0ED8                     clrloop0:	
   870  0ED8  0180               	clrf	0	;clear RAM location pointed to by FSR
   871  0ED9  3101               	addfsr 0,1
   872  0EDA  3001               	movlw	1
   873  0EDB  02FE               	subwf	126,f
   874  0EDC  3000               	movlw	0
   875  0EDD  3BFF               	subwfb	127,f
   876  0EDE  087F               	movf	127,w
   877  0EDF  047E               	iorwf	126,w
   878  0EE0  1903               	btfsc	3,2
   879  0EE1  3400               	retlw	0	;all done for this memory range, return
   880  0EE2  2ED8               	goto	clrloop0	;have we reached the end yet?
   881                           
   882                           	psect	cstackBANK1
   883  00A0                     __pcstackBANK1:	
   884  00A0                     main@i:	
   885                           
   886                           ; 1 bytes @ 0x0
   887  00A0                     	ds	1
   888  00A1                     main@i_845:	
   889                           
   890                           ; 1 bytes @ 0x1
   891  00A1                     	ds	1
   892  00A2                     main@i_846:	
   893                           
   894                           ; 1 bytes @ 0x2
   895  00A2                     	ds	1
   896  00A3                     main@i_847:	
   897                           
   898                           ; 1 bytes @ 0x3
   899  00A3                     	ds	1
   900                           
   901                           	psect	cstackCOMMON
   902  0070                     __pcstackCOMMON:	
   903  0070                     ?_eeprom_read:	
   904  0070                     ?_init_I2C_buffer:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_isr:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ??_isr:	
   911                           ; 1 bytes @ 0x0
   912                           
   913                           
   914                           ; 1 bytes @ 0x0
   915  0070                     	ds	2
   916  0072                     ??_eeprom_read:	
   917  0072                     ?_eeprom_write:	
   918                           ; 1 bytes @ 0x2
   919                           
   920  0072                     ??___lmul:	
   921                           ; 1 bytes @ 0x2
   922                           
   923  0072                     ?_ADC_read:	
   924                           ; 1 bytes @ 0x2
   925                           
   926  0072                     ?___lwdiv:	
   927                           ; 2 bytes @ 0x2
   928                           
   929  0072                     eeprom_write@value:	
   930                           ; 2 bytes @ 0x2
   931                           
   932  0072                     ___lwdiv@divisor:	
   933                           ; 1 bytes @ 0x2
   934                           
   935  0072                     ___lmul@product:	
   936                           ; 2 bytes @ 0x2
   937                           
   938                           
   939                           ; 4 bytes @ 0x2
   940  0072                     	ds	1
   941  0073                     ??_eeprom_write:	
   942                           
   943                           ; 1 bytes @ 0x3
   944  0073                     	ds	1
   945  0074                     ??_ADC_read:	
   946  0074                     ___lwdiv@dividend:	
   947                           ; 1 bytes @ 0x4
   948                           
   949                           
   950                           ; 2 bytes @ 0x4
   951  0074                     	ds	1
   952  0075                     ADC_read@channel:	
   953  0075                     eeprom_read@addr:	
   954                           ; 1 bytes @ 0x5
   955                           
   956  0075                     eeprom_write@addr:	
   957                           ; 1 bytes @ 0x5
   958                           
   959                           
   960                           ; 1 bytes @ 0x5
   961  0075                     	ds	1
   962  0076                     ??_init_I2C_buffer:	
   963  0076                     ??___lldiv:	
   964                           ; 1 bytes @ 0x6
   965                           
   966  0076                     ??___lwdiv:	
   967                           ; 1 bytes @ 0x6
   968                           
   969                           
   970                           ; 1 bytes @ 0x6
   971  0076                     	ds	3
   972                           
   973                           	psect	cstackBANK0
   974  0020                     __pcstackBANK0:	
   975  0020                     ?___lmul:	
   976  0020                     init_I2C_buffer@i:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0020                     ___lwdiv@counter:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0020                     ___lmul@multiplier:	
   983                           ; 1 bytes @ 0x0
   984                           
   985                           
   986                           ; 4 bytes @ 0x0
   987  0020                     	ds	1
   988  0021                     init_I2C_buffer@i_663:	
   989  0021                     ___lwdiv@quotient:	
   990                           ; 1 bytes @ 0x1
   991                           
   992                           
   993                           ; 2 bytes @ 0x1
   994  0021                     	ds	1
   995  0022                     init_I2C_buffer@i_664:	
   996                           
   997                           ; 1 bytes @ 0x2
   998  0022                     	ds	1
   999  0023                     init_I2C_buffer@i_665:	
  1000                           
  1001                           ; 1 bytes @ 0x3
  1002  0023                     	ds	1
  1003  0024                     ___lmul@multiplicand:	
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  0024                     	ds	4
  1007  0028                     ?___lldiv:	
  1008  0028                     ___lldiv@divisor:	
  1009                           ; 4 bytes @ 0x8
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x8
  1013  0028                     	ds	4
  1014  002C                     ___lldiv@dividend:	
  1015                           
  1016                           ; 4 bytes @ 0xC
  1017  002C                     	ds	4
  1018  0030                     ___lldiv@quotient:	
  1019                           
  1020                           ; 4 bytes @ 0x10
  1021  0030                     	ds	4
  1022  0034                     ___lldiv@counter:	
  1023                           
  1024                           ; 1 bytes @ 0x14
  1025  0034                     	ds	1
  1026  0035                     ?_map:	
  1027  0035                     map@x:	
  1028                           ; 4 bytes @ 0x15
  1029                           
  1030                           
  1031                           ; 4 bytes @ 0x15
  1032  0035                     	ds	4
  1033  0039                     map@in_min:	
  1034                           
  1035                           ; 4 bytes @ 0x19
  1036  0039                     	ds	4
  1037  003D                     map@in_max:	
  1038                           
  1039                           ; 4 bytes @ 0x1D
  1040  003D                     	ds	4
  1041  0041                     map@out_min:	
  1042                           
  1043                           ; 4 bytes @ 0x21
  1044  0041                     	ds	4
  1045  0045                     map@out_max:	
  1046                           
  1047                           ; 4 bytes @ 0x25
  1048  0045                     	ds	4
  1049  0049                     ??_map:	
  1050                           
  1051                           ; 1 bytes @ 0x29
  1052  0049                     	ds	16
  1053  0059                     ?_main:	
  1054  0059                     main@argc:	
  1055                           ; 2 bytes @ 0x39
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x39
  1059  0059                     	ds	2
  1060  005B                     main@argv:	
  1061                           
  1062                           ; 2 bytes @ 0x3B
  1063  005B                     	ds	2
  1064  005D                     ??_main:	
  1065                           
  1066                           ; 1 bytes @ 0x3D
  1067  005D                     	ds	10
  1068                           
  1069                           	psect	maintext
  1070  016E                     __pmaintext:	
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  1073 ;;
  1074 ;; *************** function _main *****************
  1075 ;; Defined at:
  1076 ;;		line 347 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  argc            2   57[BANK0 ] int 
  1079 ;;  argv            2   59[BANK0 ] PTR PTR unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  i               1    3[BANK1 ] unsigned char 
  1082 ;;  i               1    2[BANK1 ] unsigned char 
  1083 ;;  i               1    1[BANK1 ] unsigned char 
  1084 ;;  i               1    0[BANK1 ] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  2   57[BANK0 ] int 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : B1F/0
  1091 ;;		On exit  : 1F/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1095 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1097 ;;      Totals:         0      14       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1098 ;;Total ram usage:       18 bytes
  1099 ;; Hardware stack levels required when called:    3
  1100 ;; This function calls:
  1101 ;;		_ADC_read
  1102 ;;		___lwdiv
  1103 ;;		_eeprom_write
  1104 ;;		_init_I2C_buffer
  1105 ;;		_map
  1106 ;; This function is called by:
  1107 ;;		Startup code after reset
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _main
  1113  016E                     _main:	
  1114                           
  1115                           ;main.c: 348: OSCCON = 0b11110000;
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1119  016E  30F0               	movlw	240
  1120  016F  0021               	movlb	1	; select bank1
  1121  0170  0099               	movwf	25	;volatile
  1122                           
  1123                           ;main.c: 349: init_I2C_buffer();
  1124  0171  3186  26D2  3181   	fcall	_init_I2C_buffer
  1125                           
  1126                           ;main.c: 350: OPTION_REGbits.nWPUEN = 1;
  1127  0174  0021               	movlb	1	; select bank1
  1128  0175  1795               	bsf	21,7	;volatile
  1129                           
  1130                           ;main.c: 351: ADCON1 = 0b11110000;
  1131  0176  30F0               	movlw	240
  1132  0177  009E               	movwf	30	;volatile
  1133                           
  1134                           ;main.c: 352: TRISA = 0b00101111;
  1135  0178  302F               	movlw	47
  1136  0179  008C               	movwf	12	;volatile
  1137                           
  1138                           ;main.c: 353: ANSELA = 0b00001111;
  1139  017A  300F               	movlw	15
  1140  017B  0023               	movlb	3	; select bank3
  1141  017C  008C               	movwf	12	;volatile
  1142                           
  1143                           ;main.c: 354: TRISB = 0b11011111;
  1144  017D  30DF               	movlw	223
  1145  017E  0021               	movlb	1	; select bank1
  1146  017F  008D               	movwf	13	;volatile
  1147                           
  1148                           ;main.c: 355: ANSELB = 0b00000000;
  1149  0180  0023               	movlb	3	; select bank3
  1150  0181  018D               	clrf	13	;volatile
  1151                           
  1152                           ;main.c: 356: WPUA = 0b00100000;
  1153  0182  3020               	movlw	32
  1154  0183  0024               	movlb	4	; select bank4
  1155  0184  008C               	movwf	12	;volatile
  1156                           
  1157                           ;main.c: 357: WPUB = 0b11001101;
  1158  0185  30CD               	movlw	205
  1159  0186  008D               	movwf	13	;volatile
  1160                           
  1161                           ;main.c: 358: LATA = 0b00000000;
  1162  0187  0022               	movlb	2	; select bank2
  1163  0188  018C               	clrf	12	;volatile
  1164                           
  1165                           ;main.c: 359: LATB = 0b00000000;
  1166  0189  018D               	clrf	13	;volatile
  1167                           
  1168                           ;main.c: 360: SSP1STAT = 0b10000000;
  1169  018A  3080               	movlw	128
  1170  018B  0024               	movlb	4	; select bank4
  1171  018C  0094               	movwf	20	;volatile
  1172                           
  1173                           ;main.c: 361: SSP1CON1 = 0b00110110;
  1174  018D  3036               	movlw	54
  1175  018E  0095               	movwf	21	;volatile
  1176                           
  1177                           ;main.c: 362: SSP1CON2bits.SEN = 1;
  1178  018F  1416               	bsf	22,0	;volatile
  1179                           
  1180                           ;main.c: 363: SSP1CON3bits.BOEN = 1;
  1181  0190  1617               	bsf	23,4	;volatile
  1182                           
  1183                           ;main.c: 364: SSP1CON3bits.SDAHT = 1;
  1184  0191  1597               	bsf	23,3	;volatile
  1185                           
  1186                           ;main.c: 365: SSP1CON3bits.SBCDE = 1;
  1187  0192  1517               	bsf	23,2	;volatile
  1188                           
  1189                           ;main.c: 366: SSP1ADD = (char) (0x40 << 1);
  1190  0193  3080               	movlw	128
  1191  0194  0092               	movwf	18	;volatile
  1192                           
  1193                           ;main.c: 367: PIR1bits.SSP1IF = 0;
  1194  0195  0020               	movlb	0	; select bank0
  1195  0196  1191               	bcf	17,3	;volatile
  1196                           
  1197                           ;main.c: 368: PIR2bits.BCL1IF = 0;
  1198  0197  1192               	bcf	18,3	;volatile
  1199                           
  1200                           ;main.c: 369: PIE2bits.BCL1IE = 1;
  1201  0198  0021               	movlb	1	; select bank1
  1202  0199  1592               	bsf	18,3	;volatile
  1203                           
  1204                           ;main.c: 370: PIE1bits.SSP1IE = 1;
  1205  019A  1591               	bsf	17,3	;volatile
  1206                           
  1207                           ;main.c: 371: INTCONbits.PEIE = 1;
  1208  019B  170B               	bsf	11,6	;volatile
  1209                           
  1210                           ;main.c: 372: OPTION_REGbits.INTEDG = 0;
  1211  019C  1315               	bcf	21,6	;volatile
  1212                           
  1213                           ;main.c: 373: IOCBN = 0b11001100;
  1214  019D  30CC               	movlw	204
  1215  019E  0027               	movlb	7	; select bank7
  1216  019F  0095               	movwf	21	;volatile
  1217                           
  1218                           ;main.c: 374: INTCON = 0b01011000;
  1219  01A0  3058               	movlw	88
  1220  01A1  008B               	movwf	11	;volatile
  1221                           
  1222                           ;main.c: 375: T1CON = 0b00110100;
  1223  01A2  3034               	movlw	52
  1224  01A3  0020               	movlb	0	; select bank0
  1225  01A4  0098               	movwf	24	;volatile
  1226                           
  1227                           ;main.c: 376: PIE1bits.TMR1IE = 1;
  1228  01A5  0021               	movlb	1	; select bank1
  1229  01A6  1411               	bsf	17,0	;volatile
  1230                           
  1231                           ;main.c: 377: T1CONbits.TMR1ON = 1;
  1232  01A7  0020               	movlb	0	; select bank0
  1233  01A8  1418               	bsf	24,0	;volatile
  1234                           
  1235                           ;main.c: 378: INTCONbits.GIE = 1;
  1236  01A9  178B               	bsf	11,7	;volatile
  1237  01AA                     l159:	
  1238                           ;main.c: 380: while (1) {
  1239                           
  1240  01AA  0064               	clrwdt	;# 
  1241                           
  1242                           ;main.c: 382: if (I2C_buffer.data.RESET == 1) {
  1243  01AB  30F5               	movlw	245
  1244  01AC  0086               	movwf	6
  1245  01AD  3022               	movlw	34
  1246  01AE  0087               	movwf	7
  1247  01AF  3141               	addfsr 1,1
  1248  01B0  0301               	decf	1,w
  1249  01B1  1903               	btfsc	3,2
  1250  01B2  0001               	reset	;# 
  1251                           
  1252                           ;main.c: 384: };main.c: 386: if (I2C_buffer.data.SAVE == 1) {
  1253  01B3  30F5               	movlw	245
  1254  01B4  0086               	movwf	6
  1255  01B5  3022               	movlw	34
  1256  01B6  0087               	movwf	7
  1257  01B7  3142               	addfsr 1,2
  1258  01B8  0301               	decf	1,w
  1259  01B9  1D03               	btfss	3,2
  1260  01BA  2A3E               	goto	l2370
  1261                           
  1262                           ;main.c: 388: for (unsigned char i = 0; i < 58; i++)
  1263  01BB  0021               	movlb	1	; select bank1
  1264  01BC  01A0               	clrf	main@i^(0+128)
  1265  01BD                     l2324:	
  1266                           
  1267                           ;main.c: 389: {;main.c: 390: eeprom_write(i, I2C_buffer.byte[(unsigned char) (0x14 + i)]
      +                          );
  1268  01BD  0820               	movf	main@i^(0+128),w
  1269  01BE  3E14               	addlw	20
  1270  01BF  3EF5               	addlw	245
  1271  01C0  0086               	movwf	6
  1272  01C1  0187               	clrf	7
  1273  01C2  3022               	movlw	34
  1274  01C3  3D87               	addwfc	7,f
  1275  01C4  0801               	movf	1,w
  1276  01C5  0020               	movlb	0	; select bank0
  1277  01C6  00DD               	movwf	??_main
  1278  01C7  085D               	movf	??_main,w
  1279  01C8  00F2               	movwf	eeprom_write@value
  1280  01C9  0021               	movlb	1	; select bank1
  1281  01CA  0820               	movf	main@i^(0+128),w
  1282  01CB  318F  2701  3181   	fcall	_eeprom_write
  1283  01CE  3001               	movlw	1
  1284  01CF  0020               	movlb	0	; select bank0
  1285  01D0  00DD               	movwf	??_main
  1286  01D1  085D               	movf	??_main,w
  1287  01D2  0021               	movlb	1	; select bank1
  1288  01D3  07A0               	addwf	main@i^(0+128),f
  1289  01D4  303A               	movlw	58
  1290  01D5  0220               	subwf	main@i^(0+128),w
  1291  01D6  1C03               	skipc
  1292  01D7  29BD               	goto	l2324
  1293                           
  1294                           ;main.c: 391: };main.c: 392: for (unsigned char i = 0; i < 58; i++)
  1295  01D8  01A1               	clrf	main@i_845^(0+128)
  1296  01D9                     l2336:	
  1297                           
  1298                           ;main.c: 393: {;main.c: 394: eeprom_write((unsigned char) (58 + i), I2C_buffer.byte[(uns
      +                          igned char) (0x4E + i)]);
  1299  01D9  0821               	movf	main@i_845^(0+128),w
  1300  01DA  3E4E               	addlw	78
  1301  01DB  3EF5               	addlw	245
  1302  01DC  0086               	movwf	6
  1303  01DD  0187               	clrf	7
  1304  01DE  3022               	movlw	34
  1305  01DF  3D87               	addwfc	7,f
  1306  01E0  0801               	movf	1,w
  1307  01E1  0020               	movlb	0	; select bank0
  1308  01E2  00DD               	movwf	??_main
  1309  01E3  085D               	movf	??_main,w
  1310  01E4  00F2               	movwf	eeprom_write@value
  1311  01E5  0021               	movlb	1	; select bank1
  1312  01E6  0821               	movf	main@i_845^(0+128),w
  1313  01E7  3E3A               	addlw	58
  1314  01E8  318F  2701  3181   	fcall	_eeprom_write
  1315  01EB  3001               	movlw	1
  1316  01EC  0020               	movlb	0	; select bank0
  1317  01ED  00DD               	movwf	??_main
  1318  01EE  085D               	movf	??_main,w
  1319  01EF  0021               	movlb	1	; select bank1
  1320  01F0  07A1               	addwf	main@i_845^(0+128),f
  1321  01F1  303A               	movlw	58
  1322  01F2  0221               	subwf	main@i_845^(0+128),w
  1323  01F3  1C03               	skipc
  1324  01F4  29D9               	goto	l2336
  1325                           
  1326                           ;main.c: 395: };main.c: 396: for (unsigned char i = 0; i < 58; i++)
  1327  01F5  01A2               	clrf	main@i_846^(0+128)
  1328  01F6                     l2348:	
  1329                           
  1330                           ;main.c: 397: {;main.c: 398: eeprom_write((unsigned char) (115 + i), I2C_buffer.byte[(un
      +                          signed char) (0x88 + i)]);
  1331  01F6  0822               	movf	main@i_846^(0+128),w
  1332  01F7  3E88               	addlw	136
  1333  01F8  3EF5               	addlw	245
  1334  01F9  0086               	movwf	6
  1335  01FA  0187               	clrf	7
  1336  01FB  3022               	movlw	34
  1337  01FC  3D87               	addwfc	7,f
  1338  01FD  0801               	movf	1,w
  1339  01FE  0020               	movlb	0	; select bank0
  1340  01FF  00DD               	movwf	??_main
  1341  0200  085D               	movf	??_main,w
  1342  0201  00F2               	movwf	eeprom_write@value
  1343  0202  0021               	movlb	1	; select bank1
  1344  0203  0822               	movf	main@i_846^(0+128),w
  1345  0204  3E73               	addlw	115
  1346  0205  318F  2701  3181   	fcall	_eeprom_write
  1347  0208  3001               	movlw	1
  1348  0209  0020               	movlb	0	; select bank0
  1349  020A  00DD               	movwf	??_main
  1350  020B  085D               	movf	??_main,w
  1351  020C  0021               	movlb	1	; select bank1
  1352  020D  07A2               	addwf	main@i_846^(0+128),f
  1353  020E  303A               	movlw	58
  1354  020F  0222               	subwf	main@i_846^(0+128),w
  1355  0210  1C03               	skipc
  1356  0211  29F6               	goto	l2348
  1357                           
  1358                           ;main.c: 399: };main.c: 400: for (unsigned char i = 0; i < 58; i++)
  1359  0212  01A3               	clrf	main@i_847^(0+128)
  1360  0213                     l2360:	
  1361                           
  1362                           ;main.c: 401: {;main.c: 402: eeprom_write((unsigned char) (172 + i), I2C_buffer.byte[(un
      +                          signed char) (0xC2 + i)]);
  1363  0213  0823               	movf	main@i_847^(0+128),w
  1364  0214  3EC2               	addlw	194
  1365  0215  3EF5               	addlw	245
  1366  0216  0086               	movwf	6
  1367  0217  0187               	clrf	7
  1368  0218  3022               	movlw	34
  1369  0219  3D87               	addwfc	7,f
  1370  021A  0801               	movf	1,w
  1371  021B  0020               	movlb	0	; select bank0
  1372  021C  00DD               	movwf	??_main
  1373  021D  085D               	movf	??_main,w
  1374  021E  00F2               	movwf	eeprom_write@value
  1375  021F  0021               	movlb	1	; select bank1
  1376  0220  0823               	movf	main@i_847^(0+128),w
  1377  0221  3EAC               	addlw	172
  1378  0222  318F  2701  3181   	fcall	_eeprom_write
  1379  0225  3001               	movlw	1
  1380  0226  0020               	movlb	0	; select bank0
  1381  0227  00DD               	movwf	??_main
  1382  0228  085D               	movf	??_main,w
  1383  0229  0021               	movlb	1	; select bank1
  1384  022A  07A3               	addwf	main@i_847^(0+128),f
  1385  022B  303A               	movlw	58
  1386  022C  0223               	subwf	main@i_847^(0+128),w
  1387  022D  1C03               	skipc
  1388  022E  2A13               	goto	l2360
  1389                           
  1390                           ;main.c: 403: };main.c: 404: I2C_buffer.data.SAVE = 0;
  1391  022F  30F5               	movlw	245
  1392  0230  0086               	movwf	6
  1393  0231  3022               	movlw	34
  1394  0232  0087               	movwf	7
  1395  0233  3142               	addfsr 1,2
  1396  0234  0181               	clrf	1
  1397                           
  1398                           ;main.c: 405: _delay((unsigned long)((10)*(32000000/4000.0)));
  1399  0235  3068               	movlw	104
  1400  0236  0020               	movlb	0	; select bank0
  1401  0237  00DD               	movwf	??_main
  1402  0238  30E4               	movlw	228
  1403  0239                     u2357:	
  1404  0239  0B89               	decfsz	9,f
  1405  023A  2A39               	goto	u2357
  1406  023B  0BDD               	decfsz	??_main,f
  1407  023C  2A39               	goto	u2357
  1408  023D  0000               	nop
  1409  023E                     l2370:	
  1410                           
  1411                           ;main.c: 406: };main.c: 408: if (I2C_buffer.data.dispense == 1) {
  1412  023E  30F5               	movlw	245
  1413  023F  0086               	movwf	6
  1414  0240  3022               	movlw	34
  1415  0241  0087               	movwf	7
  1416  0242  3143               	addfsr 1,3
  1417  0243  0301               	decf	1,w
  1418  0244  1D03               	btfss	3,2
  1419  0245  2CB8               	goto	l2458
  1420                           
  1421                           ;main.c: 409: I2C_buffer.data.time = 0;
  1422  0246  30FF               	movlw	255
  1423  0247  0086               	movwf	6
  1424  0248  3022               	movlw	34
  1425  0249  0087               	movwf	7
  1426  024A  3000               	movlw	0
  1427  024B  3FC0               	movwi [0]fsr1
  1428  024C  3FC1               	movwi [1]fsr1
  1429  024D  3FC2               	movwi [2]fsr1
  1430  024E  3FC3               	movwi [3]fsr1
  1431                           
  1432                           ;main.c: 410: I2C_buffer.data.counter = 0;
  1433  024F  30FB               	movlw	251
  1434  0250  0086               	movwf	6
  1435  0251  3022               	movlw	34
  1436  0252  0087               	movwf	7
  1437  0253  3000               	movlw	0
  1438  0254  3FC0               	movwi [0]fsr1
  1439  0255  3FC1               	movwi [1]fsr1
  1440  0256  3FC2               	movwi [2]fsr1
  1441  0257  3FC3               	movwi [3]fsr1
  1442                           
  1443                           ;main.c: 411: I2C_buffer.data.cancel = 0;
  1444  0258  30F5               	movlw	245
  1445  0259  0086               	movwf	6
  1446  025A  3022               	movlw	34
  1447  025B  0087               	movwf	7
  1448  025C  3145               	addfsr 1,5
  1449  025D  0181               	clrf	1
  1450                           
  1451                           ;main.c: 412: I2C_buffer.data.selected1 = 0;
  1452  025E  30F5               	movlw	245
  1453  025F  0086               	movwf	6
  1454  0260  3022               	movlw	34
  1455  0261  0087               	movwf	7
  1456  0262  3153               	addfsr 1,19
  1457  0263  0181               	clrf	1
  1458                           
  1459                           ;main.c: 413: I2C_buffer.data.selected2 = 0;
  1460  0264  3042               	movlw	66
  1461  0265  0086               	movwf	6
  1462  0266  3023               	movlw	35
  1463  0267  0087               	movwf	7
  1464  0268  0181               	clrf	1
  1465                           
  1466                           ;main.c: 414: I2C_buffer.data.selected3 = 0;
  1467  0269  307C               	movlw	124
  1468  026A  0086               	movwf	6
  1469  026B  3023               	movlw	35
  1470  026C  0087               	movwf	7
  1471  026D  0181               	clrf	1
  1472                           
  1473                           ;main.c: 415: I2C_buffer.data.selected4 = 0;
  1474  026E  30B6               	movlw	182
  1475  026F  0086               	movwf	6
  1476  0270  3023               	movlw	35
  1477  0271  0087               	movwf	7
  1478  0272  0181               	clrf	1
  1479                           
  1480                           ;main.c: 416: switch (I2C_buffer.data.selected) {
  1481  0273  2C9F               	goto	l2454
  1482  0274                     l174:	
  1483                           
  1484                           ;main.c: 419: LATAbits.LATA4 = 1;
  1485  0274  0022               	movlb	2	; select bank2
  1486  0275  160C               	bsf	12,4	;volatile
  1487                           
  1488                           ;main.c: 420: I2C_buffer.data.time++;
  1489  0276  30F5               	movlw	245
  1490  0277  0086               	movwf	6
  1491  0278  3022               	movlw	34
  1492  0279  0087               	movwf	7
  1493  027A  314A               	addfsr 1,10
  1494  027B  3001               	movlw	1
  1495  027C  0781               	addwf	1,f
  1496  027D  3141               	addfsr 1,1
  1497  027E  3000               	movlw	0
  1498  027F  3D81               	addwfc	1,f
  1499  0280  3141               	addfsr 1,1
  1500  0281  3000               	movlw	0
  1501  0282  3D81               	addwfc	1,f
  1502  0283  3141               	addfsr 1,1
  1503  0284  3000               	movlw	0
  1504  0285  3D81               	addwfc	1,f
  1505                           
  1506                           ;main.c: 421: _delay((unsigned long)((1)*(32000000/4000.0)));
  1507  0286  300B               	movlw	11
  1508  0287  0020               	movlb	0	; select bank0
  1509  0288  00DD               	movwf	??_main
  1510  0289  3062               	movlw	98
  1511  028A                     u2367:	
  1512  028A  0B89               	decfsz	9,f
  1513  028B  2A8A               	goto	u2367
  1514  028C  0BDD               	decfsz	??_main,f
  1515  028D  2A8A               	goto	u2367
  1516  028E  0000               	nop
  1517  028F  0064               	clrwdt	;# 
  1518                           
  1519                           ;main.c: 423: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected1 == 1) brea
      +                          k;
  1520  0290  30F5               	movlw	245
  1521  0291  0086               	movwf	6
  1522  0292  3022               	movlw	34
  1523  0293  0087               	movwf	7
  1524  0294  314E               	addfsr 1,14
  1525  0295  0301               	decf	1,w
  1526  0296  1D03               	btfss	3,2
  1527  0297  2AA0               	goto	l2388
  1528  0298  30F5               	movlw	245
  1529  0299  0086               	movwf	6
  1530  029A  3022               	movlw	34
  1531  029B  0087               	movwf	7
  1532  029C  3153               	addfsr 1,19
  1533  029D  0301               	decf	1,w
  1534  029E  1903               	btfsc	3,2
  1535  029F  2AFB               	goto	l176
  1536  02A0                     l2388:	
  1537  02A0  302E               	movlw	46
  1538  02A1  0086               	movwf	6
  1539  02A2  3023               	movlw	35
  1540  02A3  0087               	movwf	7
  1541  02A4  3F40               	moviw [0]fsr1
  1542  02A5  0020               	movlb	0	; select bank0
  1543  02A6  00DD               	movwf	??_main
  1544  02A7  3F41               	moviw [1]fsr1
  1545  02A8  00DE               	movwf	??_main+1
  1546  02A9  3F42               	moviw [2]fsr1
  1547  02AA  00DF               	movwf	??_main+2
  1548  02AB  3F43               	moviw [3]fsr1
  1549  02AC  00E0               	movwf	??_main+3
  1550  02AD  30F5               	movlw	245
  1551  02AE  0086               	movwf	6
  1552  02AF  3022               	movlw	34
  1553  02B0  0087               	movwf	7
  1554  02B1  314A               	addfsr 1,10
  1555  02B2  3F40               	moviw [0]fsr1
  1556  02B3  00E1               	movwf	??_main+4
  1557  02B4  3F41               	moviw [1]fsr1
  1558  02B5  00E2               	movwf	??_main+5
  1559  02B6  3F42               	moviw [2]fsr1
  1560  02B7  00E3               	movwf	??_main+6
  1561  02B8  3F43               	moviw [3]fsr1
  1562  02B9  00E4               	movwf	??_main+7
  1563  02BA  0860               	movf	??_main+3,w
  1564  02BB  0264               	subwf	??_main+7,w
  1565  02BC  1D03               	skipz
  1566  02BD  2AC8               	goto	u2105
  1567  02BE  085F               	movf	??_main+2,w
  1568  02BF  0263               	subwf	??_main+6,w
  1569  02C0  1D03               	skipz
  1570  02C1  2AC8               	goto	u2105
  1571  02C2  085E               	movf	??_main+1,w
  1572  02C3  0262               	subwf	??_main+5,w
  1573  02C4  1D03               	skipz
  1574  02C5  2AC8               	goto	u2105
  1575  02C6  085D               	movf	??_main,w
  1576  02C7  0261               	subwf	??_main+4,w
  1577  02C8                     u2105:	
  1578  02C8  1803               	skipnc
  1579  02C9  2AFB               	goto	l176
  1580  02CA  3032               	movlw	50
  1581  02CB  0086               	movwf	6
  1582  02CC  3023               	movlw	35
  1583  02CD  0087               	movwf	7
  1584  02CE  3F40               	moviw [0]fsr1
  1585  02CF  00DD               	movwf	??_main
  1586  02D0  3F41               	moviw [1]fsr1
  1587  02D1  00DE               	movwf	??_main+1
  1588  02D2  3F42               	moviw [2]fsr1
  1589  02D3  00DF               	movwf	??_main+2
  1590  02D4  3F43               	moviw [3]fsr1
  1591  02D5  00E0               	movwf	??_main+3
  1592  02D6  30F5               	movlw	245
  1593  02D7  0086               	movwf	6
  1594  02D8  3022               	movlw	34
  1595  02D9  0087               	movwf	7
  1596  02DA  3146               	addfsr 1,6
  1597  02DB  3F40               	moviw [0]fsr1
  1598  02DC  00E1               	movwf	??_main+4
  1599  02DD  3F41               	moviw [1]fsr1
  1600  02DE  00E2               	movwf	??_main+5
  1601  02DF  3F42               	moviw [2]fsr1
  1602  02E0  00E3               	movwf	??_main+6
  1603  02E1  3F43               	moviw [3]fsr1
  1604  02E2  00E4               	movwf	??_main+7
  1605  02E3  0860               	movf	??_main+3,w
  1606  02E4  0264               	subwf	??_main+7,w
  1607  02E5  1D03               	skipz
  1608  02E6  2AF1               	goto	u2115
  1609  02E7  085F               	movf	??_main+2,w
  1610  02E8  0263               	subwf	??_main+6,w
  1611  02E9  1D03               	skipz
  1612  02EA  2AF1               	goto	u2115
  1613  02EB  085E               	movf	??_main+1,w
  1614  02EC  0262               	subwf	??_main+5,w
  1615  02ED  1D03               	skipz
  1616  02EE  2AF1               	goto	u2115
  1617  02EF  085D               	movf	??_main,w
  1618  02F0  0261               	subwf	??_main+4,w
  1619  02F1                     u2115:	
  1620  02F1  1803               	skipnc
  1621  02F2  2AFB               	goto	l176
  1622  02F3  30F5               	movlw	245
  1623  02F4  0086               	movwf	6
  1624  02F5  3022               	movlw	34
  1625  02F6  0087               	movwf	7
  1626  02F7  3143               	addfsr 1,3
  1627  02F8  0301               	decf	1,w
  1628  02F9  1903               	btfsc	3,2
  1629  02FA  2A74               	goto	l174
  1630  02FB                     l176:	
  1631                           
  1632                           ;main.c: 424: };main.c: 425: LATAbits.LATA4 = 0;
  1633  02FB  0022               	movlb	2	; select bank2
  1634  02FC  120C               	bcf	12,4	;volatile
  1635  02FD  2C98               	goto	l2450
  1636  02FE                     l182:	
  1637                           ;main.c: 427: break;
  1638                           
  1639                           ;main.c: 426: I2C_buffer.data.dispense = 0;
  1640                           
  1641                           
  1642                           ;main.c: 430: LATAbits.LATA6 = 1;
  1643  02FE  0022               	movlb	2	; select bank2
  1644  02FF  170C               	bsf	12,6	;volatile
  1645                           
  1646                           ;main.c: 431: I2C_buffer.data.time++;
  1647  0300  30F5               	movlw	245
  1648  0301  0086               	movwf	6
  1649  0302  3022               	movlw	34
  1650  0303  0087               	movwf	7
  1651  0304  314A               	addfsr 1,10
  1652  0305  3001               	movlw	1
  1653  0306  0781               	addwf	1,f
  1654  0307  3141               	addfsr 1,1
  1655  0308  3000               	movlw	0
  1656  0309  3D81               	addwfc	1,f
  1657  030A  3141               	addfsr 1,1
  1658  030B  3000               	movlw	0
  1659  030C  3D81               	addwfc	1,f
  1660  030D  3141               	addfsr 1,1
  1661  030E  3000               	movlw	0
  1662  030F  3D81               	addwfc	1,f
  1663                           
  1664                           ;main.c: 432: _delay((unsigned long)((1)*(32000000/4000.0)));
  1665  0310  300B               	movlw	11
  1666  0311  0020               	movlb	0	; select bank0
  1667  0312  00DD               	movwf	??_main
  1668  0313  3062               	movlw	98
  1669  0314                     u2377:	
  1670  0314  0B89               	decfsz	9,f
  1671  0315  2B14               	goto	u2377
  1672  0316  0BDD               	decfsz	??_main,f
  1673  0317  2B14               	goto	u2377
  1674  0318  0000               	nop
  1675  0319  0064               	clrwdt	;# 
  1676                           
  1677                           ;main.c: 434: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected2 == 1) brea
      +                          k;
  1678  031A  30F5               	movlw	245
  1679  031B  0086               	movwf	6
  1680  031C  3022               	movlw	34
  1681  031D  0087               	movwf	7
  1682  031E  314E               	addfsr 1,14
  1683  031F  0301               	decf	1,w
  1684  0320  1D03               	btfss	3,2
  1685  0321  2B29               	goto	l2406
  1686  0322  3042               	movlw	66
  1687  0323  0086               	movwf	6
  1688  0324  3023               	movlw	35
  1689  0325  0087               	movwf	7
  1690  0326  0301               	decf	1,w
  1691  0327  1903               	btfsc	3,2
  1692  0328  2B84               	goto	l184
  1693  0329                     l2406:	
  1694  0329  3068               	movlw	104
  1695  032A  0086               	movwf	6
  1696  032B  3023               	movlw	35
  1697  032C  0087               	movwf	7
  1698  032D  3F40               	moviw [0]fsr1
  1699  032E  0020               	movlb	0	; select bank0
  1700  032F  00DD               	movwf	??_main
  1701  0330  3F41               	moviw [1]fsr1
  1702  0331  00DE               	movwf	??_main+1
  1703  0332  3F42               	moviw [2]fsr1
  1704  0333  00DF               	movwf	??_main+2
  1705  0334  3F43               	moviw [3]fsr1
  1706  0335  00E0               	movwf	??_main+3
  1707  0336  30F5               	movlw	245
  1708  0337  0086               	movwf	6
  1709  0338  3022               	movlw	34
  1710  0339  0087               	movwf	7
  1711  033A  314A               	addfsr 1,10
  1712  033B  3F40               	moviw [0]fsr1
  1713  033C  00E1               	movwf	??_main+4
  1714  033D  3F41               	moviw [1]fsr1
  1715  033E  00E2               	movwf	??_main+5
  1716  033F  3F42               	moviw [2]fsr1
  1717  0340  00E3               	movwf	??_main+6
  1718  0341  3F43               	moviw [3]fsr1
  1719  0342  00E4               	movwf	??_main+7
  1720  0343  0860               	movf	??_main+3,w
  1721  0344  0264               	subwf	??_main+7,w
  1722  0345  1D03               	skipz
  1723  0346  2B51               	goto	u2155
  1724  0347  085F               	movf	??_main+2,w
  1725  0348  0263               	subwf	??_main+6,w
  1726  0349  1D03               	skipz
  1727  034A  2B51               	goto	u2155
  1728  034B  085E               	movf	??_main+1,w
  1729  034C  0262               	subwf	??_main+5,w
  1730  034D  1D03               	skipz
  1731  034E  2B51               	goto	u2155
  1732  034F  085D               	movf	??_main,w
  1733  0350  0261               	subwf	??_main+4,w
  1734  0351                     u2155:	
  1735  0351  1803               	skipnc
  1736  0352  2B84               	goto	l184
  1737  0353  306C               	movlw	108
  1738  0354  0086               	movwf	6
  1739  0355  3023               	movlw	35
  1740  0356  0087               	movwf	7
  1741  0357  3F40               	moviw [0]fsr1
  1742  0358  00DD               	movwf	??_main
  1743  0359  3F41               	moviw [1]fsr1
  1744  035A  00DE               	movwf	??_main+1
  1745  035B  3F42               	moviw [2]fsr1
  1746  035C  00DF               	movwf	??_main+2
  1747  035D  3F43               	moviw [3]fsr1
  1748  035E  00E0               	movwf	??_main+3
  1749  035F  30F5               	movlw	245
  1750  0360  0086               	movwf	6
  1751  0361  3022               	movlw	34
  1752  0362  0087               	movwf	7
  1753  0363  3146               	addfsr 1,6
  1754  0364  3F40               	moviw [0]fsr1
  1755  0365  00E1               	movwf	??_main+4
  1756  0366  3F41               	moviw [1]fsr1
  1757  0367  00E2               	movwf	??_main+5
  1758  0368  3F42               	moviw [2]fsr1
  1759  0369  00E3               	movwf	??_main+6
  1760  036A  3F43               	moviw [3]fsr1
  1761  036B  00E4               	movwf	??_main+7
  1762  036C  0860               	movf	??_main+3,w
  1763  036D  0264               	subwf	??_main+7,w
  1764  036E  1D03               	skipz
  1765  036F  2B7A               	goto	u2165
  1766  0370  085F               	movf	??_main+2,w
  1767  0371  0263               	subwf	??_main+6,w
  1768  0372  1D03               	skipz
  1769  0373  2B7A               	goto	u2165
  1770  0374  085E               	movf	??_main+1,w
  1771  0375  0262               	subwf	??_main+5,w
  1772  0376  1D03               	skipz
  1773  0377  2B7A               	goto	u2165
  1774  0378  085D               	movf	??_main,w
  1775  0379  0261               	subwf	??_main+4,w
  1776  037A                     u2165:	
  1777  037A  1803               	skipnc
  1778  037B  2B84               	goto	l184
  1779  037C  30F5               	movlw	245
  1780  037D  0086               	movwf	6
  1781  037E  3022               	movlw	34
  1782  037F  0087               	movwf	7
  1783  0380  3143               	addfsr 1,3
  1784  0381  0301               	decf	1,w
  1785  0382  1903               	btfsc	3,2
  1786  0383  2AFE               	goto	l182
  1787  0384                     l184:	
  1788                           
  1789                           ;main.c: 435: };main.c: 436: LATAbits.LATA6 = 0;
  1790  0384  0022               	movlb	2	; select bank2
  1791  0385  130C               	bcf	12,6	;volatile
  1792  0386  2C98               	goto	l2450
  1793  0387                     l189:	
  1794                           ;main.c: 438: break;
  1795                           
  1796                           ;main.c: 437: I2C_buffer.data.dispense = 0;
  1797                           
  1798                           
  1799                           ;main.c: 441: LATAbits.LATA7 = 1;
  1800  0387  0022               	movlb	2	; select bank2
  1801  0388  178C               	bsf	12,7	;volatile
  1802                           
  1803                           ;main.c: 442: I2C_buffer.data.time++;
  1804  0389  30F5               	movlw	245
  1805  038A  0086               	movwf	6
  1806  038B  3022               	movlw	34
  1807  038C  0087               	movwf	7
  1808  038D  314A               	addfsr 1,10
  1809  038E  3001               	movlw	1
  1810  038F  0781               	addwf	1,f
  1811  0390  3141               	addfsr 1,1
  1812  0391  3000               	movlw	0
  1813  0392  3D81               	addwfc	1,f
  1814  0393  3141               	addfsr 1,1
  1815  0394  3000               	movlw	0
  1816  0395  3D81               	addwfc	1,f
  1817  0396  3141               	addfsr 1,1
  1818  0397  3000               	movlw	0
  1819  0398  3D81               	addwfc	1,f
  1820                           
  1821                           ;main.c: 443: _delay((unsigned long)((1)*(32000000/4000.0)));
  1822  0399  300B               	movlw	11
  1823  039A  0020               	movlb	0	; select bank0
  1824  039B  00DD               	movwf	??_main
  1825  039C  3062               	movlw	98
  1826  039D                     u2387:	
  1827  039D  0B89               	decfsz	9,f
  1828  039E  2B9D               	goto	u2387
  1829  039F  0BDD               	decfsz	??_main,f
  1830  03A0  2B9D               	goto	u2387
  1831  03A1  0000               	nop
  1832  03A2  0064               	clrwdt	;# 
  1833                           
  1834                           ;main.c: 445: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected3 == 1) brea
      +                          k;
  1835  03A3  30F5               	movlw	245
  1836  03A4  0086               	movwf	6
  1837  03A5  3022               	movlw	34
  1838  03A6  0087               	movwf	7
  1839  03A7  314E               	addfsr 1,14
  1840  03A8  0301               	decf	1,w
  1841  03A9  1D03               	btfss	3,2
  1842  03AA  2BB2               	goto	l2424
  1843  03AB  307C               	movlw	124
  1844  03AC  0086               	movwf	6
  1845  03AD  3023               	movlw	35
  1846  03AE  0087               	movwf	7
  1847  03AF  0301               	decf	1,w
  1848  03B0  1903               	btfsc	3,2
  1849  03B1  2C0D               	goto	l191
  1850  03B2                     l2424:	
  1851  03B2  30A2               	movlw	162
  1852  03B3  0086               	movwf	6
  1853  03B4  3023               	movlw	35
  1854  03B5  0087               	movwf	7
  1855  03B6  3F40               	moviw [0]fsr1
  1856  03B7  0020               	movlb	0	; select bank0
  1857  03B8  00DD               	movwf	??_main
  1858  03B9  3F41               	moviw [1]fsr1
  1859  03BA  00DE               	movwf	??_main+1
  1860  03BB  3F42               	moviw [2]fsr1
  1861  03BC  00DF               	movwf	??_main+2
  1862  03BD  3F43               	moviw [3]fsr1
  1863  03BE  00E0               	movwf	??_main+3
  1864  03BF  30F5               	movlw	245
  1865  03C0  0086               	movwf	6
  1866  03C1  3022               	movlw	34
  1867  03C2  0087               	movwf	7
  1868  03C3  314A               	addfsr 1,10
  1869  03C4  3F40               	moviw [0]fsr1
  1870  03C5  00E1               	movwf	??_main+4
  1871  03C6  3F41               	moviw [1]fsr1
  1872  03C7  00E2               	movwf	??_main+5
  1873  03C8  3F42               	moviw [2]fsr1
  1874  03C9  00E3               	movwf	??_main+6
  1875  03CA  3F43               	moviw [3]fsr1
  1876  03CB  00E4               	movwf	??_main+7
  1877  03CC  0860               	movf	??_main+3,w
  1878  03CD  0264               	subwf	??_main+7,w
  1879  03CE  1D03               	skipz
  1880  03CF  2BDA               	goto	u2205
  1881  03D0  085F               	movf	??_main+2,w
  1882  03D1  0263               	subwf	??_main+6,w
  1883  03D2  1D03               	skipz
  1884  03D3  2BDA               	goto	u2205
  1885  03D4  085E               	movf	??_main+1,w
  1886  03D5  0262               	subwf	??_main+5,w
  1887  03D6  1D03               	skipz
  1888  03D7  2BDA               	goto	u2205
  1889  03D8  085D               	movf	??_main,w
  1890  03D9  0261               	subwf	??_main+4,w
  1891  03DA                     u2205:	
  1892  03DA  1803               	skipnc
  1893  03DB  2C0D               	goto	l191
  1894  03DC  30A6               	movlw	166
  1895  03DD  0086               	movwf	6
  1896  03DE  3023               	movlw	35
  1897  03DF  0087               	movwf	7
  1898  03E0  3F40               	moviw [0]fsr1
  1899  03E1  00DD               	movwf	??_main
  1900  03E2  3F41               	moviw [1]fsr1
  1901  03E3  00DE               	movwf	??_main+1
  1902  03E4  3F42               	moviw [2]fsr1
  1903  03E5  00DF               	movwf	??_main+2
  1904  03E6  3F43               	moviw [3]fsr1
  1905  03E7  00E0               	movwf	??_main+3
  1906  03E8  30F5               	movlw	245
  1907  03E9  0086               	movwf	6
  1908  03EA  3022               	movlw	34
  1909  03EB  0087               	movwf	7
  1910  03EC  3146               	addfsr 1,6
  1911  03ED  3F40               	moviw [0]fsr1
  1912  03EE  00E1               	movwf	??_main+4
  1913  03EF  3F41               	moviw [1]fsr1
  1914  03F0  00E2               	movwf	??_main+5
  1915  03F1  3F42               	moviw [2]fsr1
  1916  03F2  00E3               	movwf	??_main+6
  1917  03F3  3F43               	moviw [3]fsr1
  1918  03F4  00E4               	movwf	??_main+7
  1919  03F5  0860               	movf	??_main+3,w
  1920  03F6  0264               	subwf	??_main+7,w
  1921  03F7  1D03               	skipz
  1922  03F8  2C03               	goto	u2215
  1923  03F9  085F               	movf	??_main+2,w
  1924  03FA  0263               	subwf	??_main+6,w
  1925  03FB  1D03               	skipz
  1926  03FC  2C03               	goto	u2215
  1927  03FD  085E               	movf	??_main+1,w
  1928  03FE  0262               	subwf	??_main+5,w
  1929  03FF  1D03               	skipz
  1930  0400  2C03               	goto	u2215
  1931  0401  085D               	movf	??_main,w
  1932  0402  0261               	subwf	??_main+4,w
  1933  0403                     u2215:	
  1934  0403  1803               	skipnc
  1935  0404  2C0D               	goto	l191
  1936  0405  30F5               	movlw	245
  1937  0406  0086               	movwf	6
  1938  0407  3022               	movlw	34
  1939  0408  0087               	movwf	7
  1940  0409  3143               	addfsr 1,3
  1941  040A  0301               	decf	1,w
  1942  040B  1903               	btfsc	3,2
  1943  040C  2B87               	goto	l189
  1944  040D                     l191:	
  1945                           
  1946                           ;main.c: 446: };main.c: 447: LATAbits.LATA7 = 0;
  1947  040D  0022               	movlb	2	; select bank2
  1948  040E  138C               	bcf	12,7	;volatile
  1949  040F  2C98               	goto	l2450
  1950  0410                     l196:	
  1951                           ;main.c: 449: break;
  1952                           
  1953                           ;main.c: 448: I2C_buffer.data.dispense = 0;
  1954                           
  1955                           
  1956                           ;main.c: 452: LATBbits.LATB5 = 1;
  1957  0410  0022               	movlb	2	; select bank2
  1958  0411  168D               	bsf	13,5	;volatile
  1959                           
  1960                           ;main.c: 453: I2C_buffer.data.time++;
  1961  0412  30F5               	movlw	245
  1962  0413  0086               	movwf	6
  1963  0414  3022               	movlw	34
  1964  0415  0087               	movwf	7
  1965  0416  314A               	addfsr 1,10
  1966  0417  3001               	movlw	1
  1967  0418  0781               	addwf	1,f
  1968  0419  3141               	addfsr 1,1
  1969  041A  3000               	movlw	0
  1970  041B  3D81               	addwfc	1,f
  1971  041C  3141               	addfsr 1,1
  1972  041D  3000               	movlw	0
  1973  041E  3D81               	addwfc	1,f
  1974  041F  3141               	addfsr 1,1
  1975  0420  3000               	movlw	0
  1976  0421  3D81               	addwfc	1,f
  1977                           
  1978                           ;main.c: 454: _delay((unsigned long)((1)*(32000000/4000.0)));
  1979  0422  300B               	movlw	11
  1980  0423  0020               	movlb	0	; select bank0
  1981  0424  00DD               	movwf	??_main
  1982  0425  3062               	movlw	98
  1983  0426                     u2397:	
  1984  0426  0B89               	decfsz	9,f
  1985  0427  2C26               	goto	u2397
  1986  0428  0BDD               	decfsz	??_main,f
  1987  0429  2C26               	goto	u2397
  1988  042A  0000               	nop
  1989  042B  0064               	clrwdt	;# 
  1990                           
  1991                           ;main.c: 456: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected4 == 1) brea
      +                          k;
  1992  042C  30F5               	movlw	245
  1993  042D  0086               	movwf	6
  1994  042E  3022               	movlw	34
  1995  042F  0087               	movwf	7
  1996  0430  314E               	addfsr 1,14
  1997  0431  0301               	decf	1,w
  1998  0432  1D03               	btfss	3,2
  1999  0433  2C3B               	goto	l2442
  2000  0434  30B6               	movlw	182
  2001  0435  0086               	movwf	6
  2002  0436  3023               	movlw	35
  2003  0437  0087               	movwf	7
  2004  0438  0301               	decf	1,w
  2005  0439  1903               	btfsc	3,2
  2006  043A  2C96               	goto	l198
  2007  043B                     l2442:	
  2008  043B  30DC               	movlw	220
  2009  043C  0086               	movwf	6
  2010  043D  3023               	movlw	35
  2011  043E  0087               	movwf	7
  2012  043F  3F40               	moviw [0]fsr1
  2013  0440  0020               	movlb	0	; select bank0
  2014  0441  00DD               	movwf	??_main
  2015  0442  3F41               	moviw [1]fsr1
  2016  0443  00DE               	movwf	??_main+1
  2017  0444  3F42               	moviw [2]fsr1
  2018  0445  00DF               	movwf	??_main+2
  2019  0446  3F43               	moviw [3]fsr1
  2020  0447  00E0               	movwf	??_main+3
  2021  0448  30F5               	movlw	245
  2022  0449  0086               	movwf	6
  2023  044A  3022               	movlw	34
  2024  044B  0087               	movwf	7
  2025  044C  314A               	addfsr 1,10
  2026  044D  3F40               	moviw [0]fsr1
  2027  044E  00E1               	movwf	??_main+4
  2028  044F  3F41               	moviw [1]fsr1
  2029  0450  00E2               	movwf	??_main+5
  2030  0451  3F42               	moviw [2]fsr1
  2031  0452  00E3               	movwf	??_main+6
  2032  0453  3F43               	moviw [3]fsr1
  2033  0454  00E4               	movwf	??_main+7
  2034  0455  0860               	movf	??_main+3,w
  2035  0456  0264               	subwf	??_main+7,w
  2036  0457  1D03               	skipz
  2037  0458  2C63               	goto	u2255
  2038  0459  085F               	movf	??_main+2,w
  2039  045A  0263               	subwf	??_main+6,w
  2040  045B  1D03               	skipz
  2041  045C  2C63               	goto	u2255
  2042  045D  085E               	movf	??_main+1,w
  2043  045E  0262               	subwf	??_main+5,w
  2044  045F  1D03               	skipz
  2045  0460  2C63               	goto	u2255
  2046  0461  085D               	movf	??_main,w
  2047  0462  0261               	subwf	??_main+4,w
  2048  0463                     u2255:	
  2049  0463  1803               	skipnc
  2050  0464  2C96               	goto	l198
  2051  0465  30E0               	movlw	224
  2052  0466  0086               	movwf	6
  2053  0467  3023               	movlw	35
  2054  0468  0087               	movwf	7
  2055  0469  3F40               	moviw [0]fsr1
  2056  046A  00DD               	movwf	??_main
  2057  046B  3F41               	moviw [1]fsr1
  2058  046C  00DE               	movwf	??_main+1
  2059  046D  3F42               	moviw [2]fsr1
  2060  046E  00DF               	movwf	??_main+2
  2061  046F  3F43               	moviw [3]fsr1
  2062  0470  00E0               	movwf	??_main+3
  2063  0471  30F5               	movlw	245
  2064  0472  0086               	movwf	6
  2065  0473  3022               	movlw	34
  2066  0474  0087               	movwf	7
  2067  0475  3146               	addfsr 1,6
  2068  0476  3F40               	moviw [0]fsr1
  2069  0477  00E1               	movwf	??_main+4
  2070  0478  3F41               	moviw [1]fsr1
  2071  0479  00E2               	movwf	??_main+5
  2072  047A  3F42               	moviw [2]fsr1
  2073  047B  00E3               	movwf	??_main+6
  2074  047C  3F43               	moviw [3]fsr1
  2075  047D  00E4               	movwf	??_main+7
  2076  047E  0860               	movf	??_main+3,w
  2077  047F  0264               	subwf	??_main+7,w
  2078  0480  1D03               	skipz
  2079  0481  2C8C               	goto	u2265
  2080  0482  085F               	movf	??_main+2,w
  2081  0483  0263               	subwf	??_main+6,w
  2082  0484  1D03               	skipz
  2083  0485  2C8C               	goto	u2265
  2084  0486  085E               	movf	??_main+1,w
  2085  0487  0262               	subwf	??_main+5,w
  2086  0488  1D03               	skipz
  2087  0489  2C8C               	goto	u2265
  2088  048A  085D               	movf	??_main,w
  2089  048B  0261               	subwf	??_main+4,w
  2090  048C                     u2265:	
  2091  048C  1803               	skipnc
  2092  048D  2C96               	goto	l198
  2093  048E  30F5               	movlw	245
  2094  048F  0086               	movwf	6
  2095  0490  3022               	movlw	34
  2096  0491  0087               	movwf	7
  2097  0492  3143               	addfsr 1,3
  2098  0493  0301               	decf	1,w
  2099  0494  1903               	btfsc	3,2
  2100  0495  2C10               	goto	l196
  2101  0496                     l198:	
  2102                           
  2103                           ;main.c: 457: };main.c: 458: LATBbits.LATB5 = 0;
  2104  0496  0022               	movlb	2	; select bank2
  2105  0497  128D               	bcf	13,5	;volatile
  2106  0498                     l2450:	
  2107                           ;main.c: 460: break;
  2108                           
  2109                           ;main.c: 459: I2C_buffer.data.dispense = 0;
  2110                           
  2111                           
  2112                           ;main.c: 462: I2C_buffer.data.dispense = 0;
  2113  0498  30F5               	movlw	245
  2114  0499  0086               	movwf	6
  2115  049A  3022               	movlw	34
  2116  049B  0087               	movwf	7
  2117  049C  3143               	addfsr 1,3
  2118  049D  0181               	clrf	1
  2119                           
  2120                           ;main.c: 463: break;
  2121  049E  2CB2               	goto	l2456
  2122  049F                     l2454:	
  2123  049F  30F5               	movlw	245
  2124  04A0  0086               	movwf	6
  2125  04A1  3022               	movlw	34
  2126  04A2  0087               	movwf	7
  2127  04A3  3144               	addfsr 1,4
  2128  04A4  0801               	movf	1,w
  2129                           
  2130                           ; Switch size 1, requested type "simple"
  2131                           ; Number of cases is 4, Range of values is 1 to 4
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte           13     7 (average)
  2135                           ; direct_byte           17     9 (fixed)
  2136                           ; jumptable            263     9 (fixed)
  2137                           ;	Chosen strategy is simple_byte
  2138  04A5  3A01               	xorlw	1	; case 1
  2139  04A6  1903               	skipnz
  2140  04A7  2AA0               	goto	l2388
  2141  04A8  3A03               	xorlw	3	; case 2
  2142  04A9  1903               	skipnz
  2143  04AA  2B29               	goto	l2406
  2144  04AB  3A01               	xorlw	1	; case 3
  2145  04AC  1903               	skipnz
  2146  04AD  2BB2               	goto	l2424
  2147  04AE  3A07               	xorlw	7	; case 4
  2148  04AF  1903               	skipnz
  2149  04B0  2C3B               	goto	l2442
  2150  04B1  2C98               	goto	l2450
  2151  04B2                     l2456:	
  2152                           
  2153                           ;main.c: 465: I2C_buffer.data.selected = 0;
  2154  04B2  30F5               	movlw	245
  2155  04B3  0086               	movwf	6
  2156  04B4  3022               	movlw	34
  2157  04B5  0087               	movwf	7
  2158  04B6  3144               	addfsr 1,4
  2159  04B7  0181               	clrf	1
  2160  04B8                     l2458:	
  2161                           
  2162                           ;main.c: 466: };main.c: 468: if (I2C_buffer.data.relay1 == 1) {
  2163  04B8  30F5               	movlw	245
  2164  04B9  0086               	movwf	6
  2165  04BA  3022               	movlw	34
  2166  04BB  0087               	movwf	7
  2167  04BC  314F               	addfsr 1,15
  2168  04BD  0301               	decf	1,w
  2169  04BE  1D03               	btfss	3,2
  2170  04BF  2CC3               	goto	l202
  2171                           
  2172                           ;main.c: 469: LATAbits.LATA4 = 1;
  2173  04C0  0022               	movlb	2	; select bank2
  2174  04C1  160C               	bsf	12,4	;volatile
  2175                           
  2176                           ;main.c: 470: } else {
  2177  04C2  2CC5               	goto	l2462
  2178  04C3                     l202:	
  2179                           
  2180                           ;main.c: 471: LATAbits.LATA4 = 0;
  2181  04C3  0022               	movlb	2	; select bank2
  2182  04C4  120C               	bcf	12,4	;volatile
  2183  04C5                     l2462:	
  2184                           
  2185                           ;main.c: 472: };main.c: 474: if (I2C_buffer.data.relay2 == 1) {
  2186  04C5  30F5               	movlw	245
  2187  04C6  0086               	movwf	6
  2188  04C7  3022               	movlw	34
  2189  04C8  0087               	movwf	7
  2190  04C9  3150               	addfsr 1,16
  2191  04CA  0301               	decf	1,w
  2192  04CB  1D03               	btfss	3,2
  2193  04CC  2CCF               	goto	l204
  2194                           
  2195                           ;main.c: 475: LATAbits.LATA6 = 1;
  2196  04CD  170C               	bsf	12,6	;volatile
  2197                           
  2198                           ;main.c: 476: } else {
  2199  04CE  2CD0               	goto	l2466
  2200  04CF                     l204:	
  2201                           
  2202                           ;main.c: 477: LATAbits.LATA6 = 0;
  2203  04CF  130C               	bcf	12,6	;volatile
  2204  04D0                     l2466:	
  2205                           
  2206                           ;main.c: 478: };main.c: 480: if (I2C_buffer.data.relay3 == 1) {
  2207  04D0  30F5               	movlw	245
  2208  04D1  0086               	movwf	6
  2209  04D2  3022               	movlw	34
  2210  04D3  0087               	movwf	7
  2211  04D4  3151               	addfsr 1,17
  2212  04D5  0301               	decf	1,w
  2213  04D6  1D03               	btfss	3,2
  2214  04D7  2CDA               	goto	l206
  2215                           
  2216                           ;main.c: 481: LATAbits.LATA7 = 1;
  2217  04D8  178C               	bsf	12,7	;volatile
  2218                           
  2219                           ;main.c: 482: } else {
  2220  04D9  2CDB               	goto	l2470
  2221  04DA                     l206:	
  2222                           
  2223                           ;main.c: 483: LATAbits.LATA7 = 0;
  2224  04DA  138C               	bcf	12,7	;volatile
  2225  04DB                     l2470:	
  2226                           
  2227                           ;main.c: 484: };main.c: 486: if (I2C_buffer.data.relay4 == 1) {
  2228  04DB  30F5               	movlw	245
  2229  04DC  0086               	movwf	6
  2230  04DD  3022               	movlw	34
  2231  04DE  0087               	movwf	7
  2232  04DF  3152               	addfsr 1,18
  2233  04E0  0301               	decf	1,w
  2234  04E1  1D03               	btfss	3,2
  2235  04E2  2CE5               	goto	l208
  2236                           
  2237                           ;main.c: 487: LATBbits.LATB5 = 1;
  2238  04E3  168D               	bsf	13,5	;volatile
  2239                           
  2240                           ;main.c: 488: } else {
  2241  04E4  2CE6               	goto	l2474
  2242  04E5                     l208:	
  2243                           
  2244                           ;main.c: 489: LATBbits.LATB5 = 0;
  2245  04E5  128D               	bcf	13,5	;volatile
  2246  04E6                     l2474:	
  2247                           
  2248                           ;main.c: 490: };main.c: 492: if (readADC == 1) {
  2249  04E6  0020               	movlb	0	; select bank0
  2250  04E7  036D               	decf	_readADC,w
  2251  04E8  1D03               	btfss	3,2
  2252  04E9  29AA               	goto	l159
  2253                           
  2254                           ;main.c: 493: if (average < 10) {
  2255  04EA  300A               	movlw	10
  2256  04EB  026E               	subwf	_average,w
  2257  04EC  1803               	skipnc
  2258  04ED  2D17               	goto	l2482
  2259                           
  2260                           ;main.c: 494: stock1 += ADC_read(0x00);
  2261  04EE  3000               	movlw	0
  2262  04EF  318E  26E3  3181   	fcall	_ADC_read
  2263  04F2  0872               	movf	?_ADC_read,w
  2264  04F3  0020               	movlb	0	; select bank0
  2265  04F4  07EB               	addwf	_stock1,f
  2266  04F5  0873               	movf	?_ADC_read+1,w
  2267  04F6  3DEC               	addwfc	_stock1+1,f
  2268                           
  2269                           ;main.c: 495: stock2 += ADC_read(0x01);
  2270  04F7  3001               	movlw	1
  2271  04F8  318E  26E3  3181   	fcall	_ADC_read
  2272  04FB  0872               	movf	?_ADC_read,w
  2273  04FC  0020               	movlb	0	; select bank0
  2274  04FD  07E9               	addwf	_stock2,f
  2275  04FE  0873               	movf	?_ADC_read+1,w
  2276  04FF  3DEA               	addwfc	_stock2+1,f
  2277                           
  2278                           ;main.c: 496: stock3 += ADC_read(0x02);
  2279  0500  3002               	movlw	2
  2280  0501  318E  26E3  3181   	fcall	_ADC_read
  2281  0504  0872               	movf	?_ADC_read,w
  2282  0505  0020               	movlb	0	; select bank0
  2283  0506  07E7               	addwf	_stock3,f
  2284  0507  0873               	movf	?_ADC_read+1,w
  2285  0508  3DE8               	addwfc	_stock3+1,f
  2286                           
  2287                           ;main.c: 497: stock4 += ADC_read(0x03);
  2288  0509  3003               	movlw	3
  2289  050A  318E  26E3  3181   	fcall	_ADC_read
  2290  050D  0872               	movf	?_ADC_read,w
  2291  050E  07A4               	addwf	_stock4^(0+128),f
  2292  050F  0873               	movf	?_ADC_read+1,w
  2293  0510  3DA5               	addwfc	(_stock4+1)^(0+128),f
  2294                           
  2295                           ;main.c: 498: average++;
  2296  0511  3001               	movlw	1
  2297  0512  0020               	movlb	0	; select bank0
  2298  0513  00DD               	movwf	??_main
  2299  0514  085D               	movf	??_main,w
  2300  0515  07EE               	addwf	_average,f
  2301                           
  2302                           ;main.c: 499: } else {
  2303  0516  29AA               	goto	l159
  2304  0517                     l2482:	
  2305                           
  2306                           ;main.c: 500: if (I2C_buffer.data.calibrate == 1) {
  2307  0517  30F5               	movlw	245
  2308  0518  0086               	movwf	6
  2309  0519  3022               	movlw	34
  2310  051A  0087               	movwf	7
  2311  051B  314E               	addfsr 1,14
  2312  051C  0301               	decf	1,w
  2313  051D  1D03               	btfss	3,2
  2314  051E  2D6D               	goto	l2486
  2315                           
  2316                           ;main.c: 501: I2C_buffer.data.stock1 = stock1 / 10;
  2317  051F  300A               	movlw	10
  2318  0520  00F2               	movwf	___lwdiv@divisor
  2319  0521  3000               	movlw	0
  2320  0522  00F3               	movwf	___lwdiv@divisor+1
  2321  0523  086C               	movf	_stock1+1,w
  2322  0524  00F5               	movwf	___lwdiv@dividend+1
  2323  0525  086B               	movf	_stock1,w
  2324  0526  00F4               	movwf	___lwdiv@dividend
  2325  0527  3187  27B0  3181   	fcall	___lwdiv
  2326  052A  303A               	movlw	58
  2327  052B  0086               	movwf	6
  2328  052C  3023               	movlw	35
  2329  052D  0087               	movwf	7
  2330  052E  0872               	movf	?___lwdiv,w
  2331  052F  3FC0               	movwi [0]fsr1
  2332  0530  0873               	movf	?___lwdiv+1,w
  2333  0531  3FC1               	movwi [1]fsr1
  2334                           
  2335                           ;main.c: 502: I2C_buffer.data.stock2 = stock2 / 10;
  2336  0532  300A               	movlw	10
  2337  0533  00F2               	movwf	___lwdiv@divisor
  2338  0534  3000               	movlw	0
  2339  0535  00F3               	movwf	___lwdiv@divisor+1
  2340  0536  086A               	movf	_stock2+1,w
  2341  0537  00F5               	movwf	___lwdiv@dividend+1
  2342  0538  0869               	movf	_stock2,w
  2343  0539  00F4               	movwf	___lwdiv@dividend
  2344  053A  3187  27B0  3181   	fcall	___lwdiv
  2345  053D  3074               	movlw	116
  2346  053E  0086               	movwf	6
  2347  053F  3023               	movlw	35
  2348  0540  0087               	movwf	7
  2349  0541  0872               	movf	?___lwdiv,w
  2350  0542  3FC0               	movwi [0]fsr1
  2351  0543  0873               	movf	?___lwdiv+1,w
  2352  0544  3FC1               	movwi [1]fsr1
  2353                           
  2354                           ;main.c: 503: I2C_buffer.data.stock3 = stock3 / 10;
  2355  0545  300A               	movlw	10
  2356  0546  00F2               	movwf	___lwdiv@divisor
  2357  0547  3000               	movlw	0
  2358  0548  00F3               	movwf	___lwdiv@divisor+1
  2359  0549  0868               	movf	_stock3+1,w
  2360  054A  00F5               	movwf	___lwdiv@dividend+1
  2361  054B  0867               	movf	_stock3,w
  2362  054C  00F4               	movwf	___lwdiv@dividend
  2363  054D  3187  27B0  3181   	fcall	___lwdiv
  2364  0550  30AE               	movlw	174
  2365  0551  0086               	movwf	6
  2366  0552  3023               	movlw	35
  2367  0553  0087               	movwf	7
  2368  0554  0872               	movf	?___lwdiv,w
  2369  0555  3FC0               	movwi [0]fsr1
  2370  0556  0873               	movf	?___lwdiv+1,w
  2371  0557  3FC1               	movwi [1]fsr1
  2372                           
  2373                           ;main.c: 504: I2C_buffer.data.stock4 = stock4 / 10;
  2374  0558  300A               	movlw	10
  2375  0559  00F2               	movwf	___lwdiv@divisor
  2376  055A  3000               	movlw	0
  2377  055B  00F3               	movwf	___lwdiv@divisor+1
  2378  055C  0021               	movlb	1	; select bank1
  2379  055D  0825               	movf	(_stock4+1)^(0+128),w
  2380  055E  00F5               	movwf	___lwdiv@dividend+1
  2381  055F  0824               	movf	_stock4^(0+128),w
  2382  0560  00F4               	movwf	___lwdiv@dividend
  2383  0561  3187  27B0  3181   	fcall	___lwdiv
  2384  0564  30E8               	movlw	232
  2385  0565  0086               	movwf	6
  2386  0566  3023               	movlw	35
  2387  0567  0087               	movwf	7
  2388  0568  0872               	movf	?___lwdiv,w
  2389  0569  3FC0               	movwi [0]fsr1
  2390  056A  0873               	movf	?___lwdiv+1,w
  2391  056B  3FC1               	movwi [1]fsr1
  2392                           
  2393                           ;main.c: 505: } else {
  2394  056C  2EC6               	goto	l2488
  2395  056D                     l2486:	
  2396                           
  2397                           ;main.c: 506: I2C_buffer.data.stock1 = map((stock1 / 10), I2C_buffer.data.emptyLevel1, I
      +                          2C_buffer.data.fullLevel1, 0, I2C_buffer.data.capacity1);
  2398  056D  300A               	movlw	10
  2399  056E  00F2               	movwf	___lwdiv@divisor
  2400  056F  3000               	movlw	0
  2401  0570  00F3               	movwf	___lwdiv@divisor+1
  2402  0571  086C               	movf	_stock1+1,w
  2403  0572  00F5               	movwf	___lwdiv@dividend+1
  2404  0573  086B               	movf	_stock1,w
  2405  0574  00F4               	movwf	___lwdiv@dividend
  2406  0575  3187  27B0  3181   	fcall	___lwdiv
  2407  0578  0872               	movf	?___lwdiv,w
  2408  0579  00DD               	movwf	??_main
  2409  057A  0873               	movf	?___lwdiv+1,w
  2410  057B  00DE               	movwf	??_main+1
  2411  057C  01DF               	clrf	??_main+2
  2412  057D  01E0               	clrf	??_main+3
  2413  057E  0860               	movf	??_main+3,w
  2414  057F  00B8               	movwf	map@x+3
  2415  0580  085F               	movf	??_main+2,w
  2416  0581  00B7               	movwf	map@x+2
  2417  0582  085E               	movf	??_main+1,w
  2418  0583  00B6               	movwf	map@x+1
  2419  0584  085D               	movf	??_main,w
  2420  0585  00B5               	movwf	map@x
  2421  0586  303E               	movlw	62
  2422  0587  0086               	movwf	6
  2423  0588  3023               	movlw	35
  2424  0589  0087               	movwf	7
  2425  058A  3F40               	moviw [0]fsr1
  2426  058B  00E1               	movwf	??_main+4
  2427  058C  3F41               	moviw [1]fsr1
  2428  058D  00E2               	movwf	??_main+5
  2429  058E  0861               	movf	??_main+4,w
  2430  058F  00B9               	movwf	map@in_min
  2431  0590  0862               	movf	??_main+5,w
  2432  0591  00BA               	movwf	map@in_min+1
  2433  0592  01BB               	clrf	map@in_min+2
  2434  0593  01BC               	clrf	map@in_min+3
  2435  0594  3040               	movlw	64
  2436  0595  0086               	movwf	6
  2437  0596  3023               	movlw	35
  2438  0597  0087               	movwf	7
  2439  0598  3F40               	moviw [0]fsr1
  2440  0599  00E3               	movwf	??_main+6
  2441  059A  3F41               	moviw [1]fsr1
  2442  059B  00E4               	movwf	??_main+7
  2443  059C  0863               	movf	??_main+6,w
  2444  059D  00BD               	movwf	map@in_max
  2445  059E  0864               	movf	??_main+7,w
  2446  059F  00BE               	movwf	map@in_max+1
  2447  05A0  01BF               	clrf	map@in_max+2
  2448  05A1  01C0               	clrf	map@in_max+3
  2449  05A2  3000               	movlw	0
  2450  05A3  00C4               	movwf	map@out_min+3
  2451  05A4  3000               	movlw	0
  2452  05A5  00C3               	movwf	map@out_min+2
  2453  05A6  3000               	movlw	0
  2454  05A7  00C2               	movwf	map@out_min+1
  2455  05A8  3000               	movlw	0
  2456  05A9  00C1               	movwf	map@out_min
  2457  05AA  303C               	movlw	60
  2458  05AB  0086               	movwf	6
  2459  05AC  3023               	movlw	35
  2460  05AD  0087               	movwf	7
  2461  05AE  3F40               	moviw [0]fsr1
  2462  05AF  00E5               	movwf	??_main+8
  2463  05B0  3F41               	moviw [1]fsr1
  2464  05B1  00E6               	movwf	??_main+9
  2465  05B2  0865               	movf	??_main+8,w
  2466  05B3  00C5               	movwf	map@out_max
  2467  05B4  0866               	movf	??_main+9,w
  2468  05B5  00C6               	movwf	map@out_max+1
  2469  05B6  01C7               	clrf	map@out_max+2
  2470  05B7  01C8               	clrf	map@out_max+3
  2471  05B8  318F  27A2  3181   	fcall	_map
  2472  05BB  303A               	movlw	58
  2473  05BC  0086               	movwf	6
  2474  05BD  3023               	movlw	35
  2475  05BE  0087               	movwf	7
  2476  05BF  0835               	movf	?_map,w
  2477  05C0  3FC0               	movwi [0]fsr1
  2478  05C1  0836               	movf	?_map+1,w
  2479  05C2  3FC1               	movwi [1]fsr1
  2480                           
  2481                           ;main.c: 507: I2C_buffer.data.stock2 = map((stock2 / 10), I2C_buffer.data.emptyLevel2, I
      +                          2C_buffer.data.fullLevel2, 0, I2C_buffer.data.capacity2);
  2482  05C3  300A               	movlw	10
  2483  05C4  00F2               	movwf	___lwdiv@divisor
  2484  05C5  3000               	movlw	0
  2485  05C6  00F3               	movwf	___lwdiv@divisor+1
  2486  05C7  086A               	movf	_stock2+1,w
  2487  05C8  00F5               	movwf	___lwdiv@dividend+1
  2488  05C9  0869               	movf	_stock2,w
  2489  05CA  00F4               	movwf	___lwdiv@dividend
  2490  05CB  3187  27B0  3181   	fcall	___lwdiv
  2491  05CE  0872               	movf	?___lwdiv,w
  2492  05CF  00DD               	movwf	??_main
  2493  05D0  0873               	movf	?___lwdiv+1,w
  2494  05D1  00DE               	movwf	??_main+1
  2495  05D2  01DF               	clrf	??_main+2
  2496  05D3  01E0               	clrf	??_main+3
  2497  05D4  0860               	movf	??_main+3,w
  2498  05D5  00B8               	movwf	map@x+3
  2499  05D6  085F               	movf	??_main+2,w
  2500  05D7  00B7               	movwf	map@x+2
  2501  05D8  085E               	movf	??_main+1,w
  2502  05D9  00B6               	movwf	map@x+1
  2503  05DA  085D               	movf	??_main,w
  2504  05DB  00B5               	movwf	map@x
  2505  05DC  3078               	movlw	120
  2506  05DD  0086               	movwf	6
  2507  05DE  3023               	movlw	35
  2508  05DF  0087               	movwf	7
  2509  05E0  3F40               	moviw [0]fsr1
  2510  05E1  00E1               	movwf	??_main+4
  2511  05E2  3F41               	moviw [1]fsr1
  2512  05E3  00E2               	movwf	??_main+5
  2513  05E4  0861               	movf	??_main+4,w
  2514  05E5  00B9               	movwf	map@in_min
  2515  05E6  0862               	movf	??_main+5,w
  2516  05E7  00BA               	movwf	map@in_min+1
  2517  05E8  01BB               	clrf	map@in_min+2
  2518  05E9  01BC               	clrf	map@in_min+3
  2519  05EA  307A               	movlw	122
  2520  05EB  0086               	movwf	6
  2521  05EC  3023               	movlw	35
  2522  05ED  0087               	movwf	7
  2523  05EE  3F40               	moviw [0]fsr1
  2524  05EF  00E3               	movwf	??_main+6
  2525  05F0  3F41               	moviw [1]fsr1
  2526  05F1  00E4               	movwf	??_main+7
  2527  05F2  0863               	movf	??_main+6,w
  2528  05F3  00BD               	movwf	map@in_max
  2529  05F4  0864               	movf	??_main+7,w
  2530  05F5  00BE               	movwf	map@in_max+1
  2531  05F6  01BF               	clrf	map@in_max+2
  2532  05F7  01C0               	clrf	map@in_max+3
  2533  05F8  3000               	movlw	0
  2534  05F9  00C4               	movwf	map@out_min+3
  2535  05FA  3000               	movlw	0
  2536  05FB  00C3               	movwf	map@out_min+2
  2537  05FC  3000               	movlw	0
  2538  05FD  00C2               	movwf	map@out_min+1
  2539  05FE  3000               	movlw	0
  2540  05FF  00C1               	movwf	map@out_min
  2541  0600  3076               	movlw	118
  2542  0601  0086               	movwf	6
  2543  0602  3023               	movlw	35
  2544  0603  0087               	movwf	7
  2545  0604  3F40               	moviw [0]fsr1
  2546  0605  00E5               	movwf	??_main+8
  2547  0606  3F41               	moviw [1]fsr1
  2548  0607  00E6               	movwf	??_main+9
  2549  0608  0865               	movf	??_main+8,w
  2550  0609  00C5               	movwf	map@out_max
  2551  060A  0866               	movf	??_main+9,w
  2552  060B  00C6               	movwf	map@out_max+1
  2553  060C  01C7               	clrf	map@out_max+2
  2554  060D  01C8               	clrf	map@out_max+3
  2555  060E  318F  27A2  3181   	fcall	_map
  2556  0611  3074               	movlw	116
  2557  0612  0086               	movwf	6
  2558  0613  3023               	movlw	35
  2559  0614  0087               	movwf	7
  2560  0615  0835               	movf	?_map,w
  2561  0616  3FC0               	movwi [0]fsr1
  2562  0617  0836               	movf	?_map+1,w
  2563  0618  3FC1               	movwi [1]fsr1
  2564                           
  2565                           ;main.c: 508: I2C_buffer.data.stock3 = map((stock3 / 10), I2C_buffer.data.emptyLevel3, I
      +                          2C_buffer.data.fullLevel3, 0, I2C_buffer.data.capacity3);
  2566  0619  300A               	movlw	10
  2567  061A  00F2               	movwf	___lwdiv@divisor
  2568  061B  3000               	movlw	0
  2569  061C  00F3               	movwf	___lwdiv@divisor+1
  2570  061D  0868               	movf	_stock3+1,w
  2571  061E  00F5               	movwf	___lwdiv@dividend+1
  2572  061F  0867               	movf	_stock3,w
  2573  0620  00F4               	movwf	___lwdiv@dividend
  2574  0621  3187  27B0  3181   	fcall	___lwdiv
  2575  0624  0872               	movf	?___lwdiv,w
  2576  0625  00DD               	movwf	??_main
  2577  0626  0873               	movf	?___lwdiv+1,w
  2578  0627  00DE               	movwf	??_main+1
  2579  0628  01DF               	clrf	??_main+2
  2580  0629  01E0               	clrf	??_main+3
  2581  062A  0860               	movf	??_main+3,w
  2582  062B  00B8               	movwf	map@x+3
  2583  062C  085F               	movf	??_main+2,w
  2584  062D  00B7               	movwf	map@x+2
  2585  062E  085E               	movf	??_main+1,w
  2586  062F  00B6               	movwf	map@x+1
  2587  0630  085D               	movf	??_main,w
  2588  0631  00B5               	movwf	map@x
  2589  0632  30B2               	movlw	178
  2590  0633  0086               	movwf	6
  2591  0634  3023               	movlw	35
  2592  0635  0087               	movwf	7
  2593  0636  3F40               	moviw [0]fsr1
  2594  0637  00E1               	movwf	??_main+4
  2595  0638  3F41               	moviw [1]fsr1
  2596  0639  00E2               	movwf	??_main+5
  2597  063A  0861               	movf	??_main+4,w
  2598  063B  00B9               	movwf	map@in_min
  2599  063C  0862               	movf	??_main+5,w
  2600  063D  00BA               	movwf	map@in_min+1
  2601  063E  01BB               	clrf	map@in_min+2
  2602  063F  01BC               	clrf	map@in_min+3
  2603  0640  30B4               	movlw	180
  2604  0641  0086               	movwf	6
  2605  0642  3023               	movlw	35
  2606  0643  0087               	movwf	7
  2607  0644  3F40               	moviw [0]fsr1
  2608  0645  00E3               	movwf	??_main+6
  2609  0646  3F41               	moviw [1]fsr1
  2610  0647  00E4               	movwf	??_main+7
  2611  0648  0863               	movf	??_main+6,w
  2612  0649  00BD               	movwf	map@in_max
  2613  064A  0864               	movf	??_main+7,w
  2614  064B  00BE               	movwf	map@in_max+1
  2615  064C  01BF               	clrf	map@in_max+2
  2616  064D  01C0               	clrf	map@in_max+3
  2617  064E  3000               	movlw	0
  2618  064F  00C4               	movwf	map@out_min+3
  2619  0650  3000               	movlw	0
  2620  0651  00C3               	movwf	map@out_min+2
  2621  0652  3000               	movlw	0
  2622  0653  00C2               	movwf	map@out_min+1
  2623  0654  3000               	movlw	0
  2624  0655  00C1               	movwf	map@out_min
  2625  0656  30B0               	movlw	176
  2626  0657  0086               	movwf	6
  2627  0658  3023               	movlw	35
  2628  0659  0087               	movwf	7
  2629  065A  3F40               	moviw [0]fsr1
  2630  065B  00E5               	movwf	??_main+8
  2631  065C  3F41               	moviw [1]fsr1
  2632  065D  00E6               	movwf	??_main+9
  2633  065E  0865               	movf	??_main+8,w
  2634  065F  00C5               	movwf	map@out_max
  2635  0660  0866               	movf	??_main+9,w
  2636  0661  00C6               	movwf	map@out_max+1
  2637  0662  01C7               	clrf	map@out_max+2
  2638  0663  01C8               	clrf	map@out_max+3
  2639  0664  318F  27A2  3181   	fcall	_map
  2640  0667  30AE               	movlw	174
  2641  0668  0086               	movwf	6
  2642  0669  3023               	movlw	35
  2643  066A  0087               	movwf	7
  2644  066B  0835               	movf	?_map,w
  2645  066C  3FC0               	movwi [0]fsr1
  2646  066D  0836               	movf	?_map+1,w
  2647  066E  3FC1               	movwi [1]fsr1
  2648                           
  2649                           ;main.c: 509: I2C_buffer.data.stock4 = map((stock4 / 10), I2C_buffer.data.emptyLevel4, I
      +                          2C_buffer.data.fullLevel4, 0, I2C_buffer.data.capacity4);
  2650  066F  300A               	movlw	10
  2651  0670  00F2               	movwf	___lwdiv@divisor
  2652  0671  3000               	movlw	0
  2653  0672  00F3               	movwf	___lwdiv@divisor+1
  2654  0673  0021               	movlb	1	; select bank1
  2655  0674  0825               	movf	(_stock4+1)^(0+128),w
  2656  0675  00F5               	movwf	___lwdiv@dividend+1
  2657  0676  0824               	movf	_stock4^(0+128),w
  2658  0677  00F4               	movwf	___lwdiv@dividend
  2659  0678  3187  27B0  3181   	fcall	___lwdiv
  2660  067B  0872               	movf	?___lwdiv,w
  2661  067C  00DD               	movwf	??_main
  2662  067D  0873               	movf	?___lwdiv+1,w
  2663  067E  00DE               	movwf	??_main+1
  2664  067F  01DF               	clrf	??_main+2
  2665  0680  01E0               	clrf	??_main+3
  2666  0681  0860               	movf	??_main+3,w
  2667  0682  00B8               	movwf	map@x+3
  2668  0683  085F               	movf	??_main+2,w
  2669  0684  00B7               	movwf	map@x+2
  2670  0685  085E               	movf	??_main+1,w
  2671  0686  00B6               	movwf	map@x+1
  2672  0687  085D               	movf	??_main,w
  2673  0688  00B5               	movwf	map@x
  2674  0689  30EC               	movlw	236
  2675  068A  0086               	movwf	6
  2676  068B  3023               	movlw	35
  2677  068C  0087               	movwf	7
  2678  068D  3F40               	moviw [0]fsr1
  2679  068E  00E1               	movwf	??_main+4
  2680  068F  3F41               	moviw [1]fsr1
  2681  0690  00E2               	movwf	??_main+5
  2682  0691  0861               	movf	??_main+4,w
  2683  0692  00B9               	movwf	map@in_min
  2684  0693  0862               	movf	??_main+5,w
  2685  0694  00BA               	movwf	map@in_min+1
  2686  0695  01BB               	clrf	map@in_min+2
  2687  0696  01BC               	clrf	map@in_min+3
  2688  0697  30EE               	movlw	238
  2689  0698  0086               	movwf	6
  2690  0699  3023               	movlw	35
  2691  069A  0087               	movwf	7
  2692  069B  3F40               	moviw [0]fsr1
  2693  069C  00E3               	movwf	??_main+6
  2694  069D  3F41               	moviw [1]fsr1
  2695  069E  00E4               	movwf	??_main+7
  2696  069F  0863               	movf	??_main+6,w
  2697  06A0  00BD               	movwf	map@in_max
  2698  06A1  0864               	movf	??_main+7,w
  2699  06A2  00BE               	movwf	map@in_max+1
  2700  06A3  01BF               	clrf	map@in_max+2
  2701  06A4  01C0               	clrf	map@in_max+3
  2702  06A5  3000               	movlw	0
  2703  06A6  00C4               	movwf	map@out_min+3
  2704  06A7  3000               	movlw	0
  2705  06A8  00C3               	movwf	map@out_min+2
  2706  06A9  3000               	movlw	0
  2707  06AA  00C2               	movwf	map@out_min+1
  2708  06AB  3000               	movlw	0
  2709  06AC  00C1               	movwf	map@out_min
  2710  06AD  30EA               	movlw	234
  2711  06AE  0086               	movwf	6
  2712  06AF  3023               	movlw	35
  2713  06B0  0087               	movwf	7
  2714  06B1  3F40               	moviw [0]fsr1
  2715  06B2  00E5               	movwf	??_main+8
  2716  06B3  3F41               	moviw [1]fsr1
  2717  06B4  00E6               	movwf	??_main+9
  2718  06B5  0865               	movf	??_main+8,w
  2719  06B6  00C5               	movwf	map@out_max
  2720  06B7  0866               	movf	??_main+9,w
  2721  06B8  00C6               	movwf	map@out_max+1
  2722  06B9  01C7               	clrf	map@out_max+2
  2723  06BA  01C8               	clrf	map@out_max+3
  2724  06BB  318F  27A2  3181   	fcall	_map
  2725  06BE  30E8               	movlw	232
  2726  06BF  0086               	movwf	6
  2727  06C0  3023               	movlw	35
  2728  06C1  0087               	movwf	7
  2729  06C2  0835               	movf	?_map,w
  2730  06C3  3FC0               	movwi [0]fsr1
  2731  06C4  0836               	movf	?_map+1,w
  2732  06C5  3FC1               	movwi [1]fsr1
  2733  06C6                     l2488:	
  2734                           
  2735                           ;main.c: 510: };main.c: 511: stock1 = 0;
  2736  06C6  01EB               	clrf	_stock1
  2737  06C7  01EC               	clrf	_stock1+1
  2738                           
  2739                           ;main.c: 512: stock2 = 0;
  2740  06C8  01E9               	clrf	_stock2
  2741  06C9  01EA               	clrf	_stock2+1
  2742                           
  2743                           ;main.c: 513: stock3 = 0;
  2744  06CA  01E7               	clrf	_stock3
  2745  06CB  01E8               	clrf	_stock3+1
  2746                           
  2747                           ;main.c: 514: stock4 = 0;
  2748  06CC  0021               	movlb	1	; select bank1
  2749  06CD  01A4               	clrf	_stock4^(0+128)
  2750  06CE  01A5               	clrf	(_stock4+1)^(0+128)
  2751                           
  2752                           ;main.c: 515: average = 0;
  2753  06CF  0020               	movlb	0	; select bank0
  2754  06D0  01EE               	clrf	_average
  2755  06D1  29AA               	goto	l159
  2756  06D2                     __end_of_main:	
  2757                           
  2758                           	psect	text1
  2759  0FA2                     __ptext1:	
  2760 ;; *************** function _map *****************
  2761 ;; Defined at:
  2762 ;;		line 160 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  x               4   21[BANK0 ] unsigned long 
  2765 ;;  in_min          4   25[BANK0 ] unsigned long 
  2766 ;;  in_max          4   29[BANK0 ] unsigned long 
  2767 ;;  out_min         4   33[BANK0 ] unsigned long 
  2768 ;;  out_max         4   37[BANK0 ] unsigned long 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  4   21[BANK0 ] unsigned long 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0, pclath, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 1F/0
  2777 ;;		On exit  : 1F/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2780 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2783 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;Total ram usage:       36 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    2
  2787 ;; This function calls:
  2788 ;;		___lldiv
  2789 ;;		___lmul
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function _map
  2797  0FA2                     _map:	
  2798                           
  2799                           ;main.c: 161: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2803  0FA2  0839               	movf	map@in_min,w
  2804  0FA3  023D               	subwf	map@in_max,w
  2805  0FA4  00C9               	movwf	??_map
  2806  0FA5  083A               	movf	map@in_min+1,w
  2807  0FA6  3B3E               	subwfb	map@in_max+1,w
  2808  0FA7  00CA               	movwf	??_map+1
  2809  0FA8  083B               	movf	map@in_min+2,w
  2810  0FA9  3B3F               	subwfb	map@in_max+2,w
  2811  0FAA  00CB               	movwf	??_map+2
  2812  0FAB  083C               	movf	map@in_min+3,w
  2813  0FAC  3B40               	subwfb	map@in_max+3,w
  2814  0FAD  00CC               	movwf	??_map+3
  2815  0FAE  084C               	movf	??_map+3,w
  2816  0FAF  00AB               	movwf	___lldiv@divisor+3
  2817  0FB0  084B               	movf	??_map+2,w
  2818  0FB1  00AA               	movwf	___lldiv@divisor+2
  2819  0FB2  084A               	movf	??_map+1,w
  2820  0FB3  00A9               	movwf	___lldiv@divisor+1
  2821  0FB4  0849               	movf	??_map,w
  2822  0FB5  00A8               	movwf	___lldiv@divisor
  2823  0FB6  0839               	movf	map@in_min,w
  2824  0FB7  0235               	subwf	map@x,w
  2825  0FB8  00CD               	movwf	??_map+4
  2826  0FB9  083A               	movf	map@in_min+1,w
  2827  0FBA  3B36               	subwfb	map@x+1,w
  2828  0FBB  00CE               	movwf	??_map+5
  2829  0FBC  083B               	movf	map@in_min+2,w
  2830  0FBD  3B37               	subwfb	map@x+2,w
  2831  0FBE  00CF               	movwf	??_map+6
  2832  0FBF  083C               	movf	map@in_min+3,w
  2833  0FC0  3B38               	subwfb	map@x+3,w
  2834  0FC1  00D0               	movwf	??_map+7
  2835  0FC2  0850               	movf	??_map+7,w
  2836  0FC3  00A3               	movwf	___lmul@multiplier+3
  2837  0FC4  084F               	movf	??_map+6,w
  2838  0FC5  00A2               	movwf	___lmul@multiplier+2
  2839  0FC6  084E               	movf	??_map+5,w
  2840  0FC7  00A1               	movwf	___lmul@multiplier+1
  2841  0FC8  084D               	movf	??_map+4,w
  2842  0FC9  00A0               	movwf	___lmul@multiplier
  2843  0FCA  0841               	movf	map@out_min,w
  2844  0FCB  0245               	subwf	map@out_max,w
  2845  0FCC  00D1               	movwf	??_map+8
  2846  0FCD  0842               	movf	map@out_min+1,w
  2847  0FCE  3B46               	subwfb	map@out_max+1,w
  2848  0FCF  00D2               	movwf	??_map+9
  2849  0FD0  0843               	movf	map@out_min+2,w
  2850  0FD1  3B47               	subwfb	map@out_max+2,w
  2851  0FD2  00D3               	movwf	??_map+10
  2852  0FD3  0844               	movf	map@out_min+3,w
  2853  0FD4  3B48               	subwfb	map@out_max+3,w
  2854  0FD5  00D4               	movwf	??_map+11
  2855  0FD6  0854               	movf	??_map+11,w
  2856  0FD7  00A7               	movwf	___lmul@multiplicand+3
  2857  0FD8  0853               	movf	??_map+10,w
  2858  0FD9  00A6               	movwf	___lmul@multiplicand+2
  2859  0FDA  0852               	movf	??_map+9,w
  2860  0FDB  00A5               	movwf	___lmul@multiplicand+1
  2861  0FDC  0851               	movf	??_map+8,w
  2862  0FDD  00A4               	movwf	___lmul@multiplicand
  2863  0FDE  318F  2721  318F   	fcall	___lmul
  2864  0FE1  0823               	movf	?___lmul+3,w
  2865  0FE2  00AF               	movwf	___lldiv@dividend+3
  2866  0FE3  0822               	movf	?___lmul+2,w
  2867  0FE4  00AE               	movwf	___lldiv@dividend+2
  2868  0FE5  0821               	movf	?___lmul+1,w
  2869  0FE6  00AD               	movwf	___lldiv@dividend+1
  2870  0FE7  0820               	movf	?___lmul,w
  2871  0FE8  00AC               	movwf	___lldiv@dividend
  2872  0FE9  318F  2750         	fcall	___lldiv
  2873  0FEB  0828               	movf	?___lldiv,w
  2874  0FEC  0741               	addwf	map@out_min,w
  2875  0FED  00D5               	movwf	??_map+12
  2876  0FEE  0829               	movf	?___lldiv+1,w
  2877  0FEF  3D42               	addwfc	map@out_min+1,w
  2878  0FF0  00D6               	movwf	??_map+13
  2879  0FF1  082A               	movf	?___lldiv+2,w
  2880  0FF2  3D43               	addwfc	map@out_min+2,w
  2881  0FF3  00D7               	movwf	??_map+14
  2882  0FF4  082B               	movf	?___lldiv+3,w
  2883  0FF5  3D44               	addwfc	map@out_min+3,w
  2884  0FF6  00D8               	movwf	??_map+15
  2885  0FF7  0858               	movf	??_map+15,w
  2886  0FF8  00B8               	movwf	?_map+3
  2887  0FF9  0857               	movf	??_map+14,w
  2888  0FFA  00B7               	movwf	?_map+2
  2889  0FFB  0856               	movf	??_map+13,w
  2890  0FFC  00B6               	movwf	?_map+1
  2891  0FFD  0855               	movf	??_map+12,w
  2892  0FFE  00B5               	movwf	?_map
  2893  0FFF  0008               	return
  2894  1000                     __end_of_map:	
  2895                           
  2896                           	psect	text2
  2897  0F21                     __ptext2:	
  2898 ;; *************** function ___lmul *****************
  2899 ;; Defined at:
  2900 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2903 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  product         4    2[COMMON] unsigned long 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  4    0[BANK0 ] unsigned long 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 1F/0
  2912 ;;		On exit  : 1F/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2915 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;Total ram usage:       12 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    1
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_map
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function ___lmul
  2931  0F21                     ___lmul:	
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2935  0F21  3000               	movlw	0
  2936  0F22  00F5               	movwf	___lmul@product+3
  2937  0F23  3000               	movlw	0
  2938  0F24  00F4               	movwf	___lmul@product+2
  2939  0F25  3000               	movlw	0
  2940  0F26  00F3               	movwf	___lmul@product+1
  2941  0F27  3000               	movlw	0
  2942  0F28  00F2               	movwf	___lmul@product
  2943  0F29                     l2072:	
  2944  0F29  1C20               	btfss	___lmul@multiplier,0
  2945  0F2A  2F33               	goto	l2076
  2946  0F2B  0824               	movf	___lmul@multiplicand,w
  2947  0F2C  07F2               	addwf	___lmul@product,f
  2948  0F2D  0825               	movf	___lmul@multiplicand+1,w
  2949  0F2E  3DF3               	addwfc	___lmul@product+1,f
  2950  0F2F  0826               	movf	___lmul@multiplicand+2,w
  2951  0F30  3DF4               	addwfc	___lmul@product+2,f
  2952  0F31  0827               	movf	___lmul@multiplicand+3,w
  2953  0F32  3DF5               	addwfc	___lmul@product+3,f
  2954  0F33                     l2076:	
  2955  0F33  3001               	movlw	1
  2956  0F34                     u1755:	
  2957  0F34  35A4               	lslf	___lmul@multiplicand,f
  2958  0F35  0DA5               	rlf	___lmul@multiplicand+1,f
  2959  0F36  0DA6               	rlf	___lmul@multiplicand+2,f
  2960  0F37  0DA7               	rlf	___lmul@multiplicand+3,f
  2961  0F38  0B89               	decfsz	9,f
  2962  0F39  2F34               	goto	u1755
  2963  0F3A  3001               	movlw	1
  2964  0F3B                     u1765:	
  2965  0F3B  36A3               	lsrf	___lmul@multiplier+3,f
  2966  0F3C  0CA2               	rrf	___lmul@multiplier+2,f
  2967  0F3D  0CA1               	rrf	___lmul@multiplier+1,f
  2968  0F3E  0CA0               	rrf	___lmul@multiplier,f
  2969  0F3F  0B89               	decfsz	9,f
  2970  0F40  2F3B               	goto	u1765
  2971  0F41  0823               	movf	___lmul@multiplier+3,w
  2972  0F42  0422               	iorwf	___lmul@multiplier+2,w
  2973  0F43  0421               	iorwf	___lmul@multiplier+1,w
  2974  0F44  0420               	iorwf	___lmul@multiplier,w
  2975  0F45  1D03               	skipz
  2976  0F46  2F29               	goto	l2072
  2977  0F47  0875               	movf	___lmul@product+3,w
  2978  0F48  00A3               	movwf	?___lmul+3
  2979  0F49  0874               	movf	___lmul@product+2,w
  2980  0F4A  00A2               	movwf	?___lmul+2
  2981  0F4B  0873               	movf	___lmul@product+1,w
  2982  0F4C  00A1               	movwf	?___lmul+1
  2983  0F4D  0872               	movf	___lmul@product,w
  2984  0F4E  00A0               	movwf	?___lmul
  2985  0F4F  0008               	return
  2986  0F50                     __end_of___lmul:	
  2987                           
  2988                           	psect	text3
  2989  0F50                     __ptext3:	
  2990 ;; *************** function ___lldiv *****************
  2991 ;; Defined at:
  2992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  divisor         4    8[BANK0 ] unsigned long 
  2995 ;;  dividend        4   12[BANK0 ] unsigned long 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  quotient        4   16[BANK0 ] unsigned long 
  2998 ;;  counter         1   20[BANK0 ] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  4    8[BANK0 ] unsigned long 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 1F/0
  3005 ;;		On exit  : 1F/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3008 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;Total ram usage:       14 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_map
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function ___lldiv
  3024  0F50                     ___lldiv:	
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3028  0F50  3000               	movlw	0
  3029  0F51  00B3               	movwf	___lldiv@quotient+3
  3030  0F52  3000               	movlw	0
  3031  0F53  00B2               	movwf	___lldiv@quotient+2
  3032  0F54  3000               	movlw	0
  3033  0F55  00B1               	movwf	___lldiv@quotient+1
  3034  0F56  3000               	movlw	0
  3035  0F57  00B0               	movwf	___lldiv@quotient
  3036  0F58  082B               	movf	___lldiv@divisor+3,w
  3037  0F59  042A               	iorwf	___lldiv@divisor+2,w
  3038  0F5A  0429               	iorwf	___lldiv@divisor+1,w
  3039  0F5B  0428               	iorwf	___lldiv@divisor,w
  3040  0F5C  1903               	skipnz
  3041  0F5D  2F99               	goto	l2104
  3042  0F5E  01B4               	clrf	___lldiv@counter
  3043  0F5F  0AB4               	incf	___lldiv@counter,f
  3044  0F60                     l2090:	
  3045  0F60  1BAB               	btfsc	___lldiv@divisor+3,7
  3046  0F61  2F6E               	goto	l2092
  3047  0F62  3001               	movlw	1
  3048  0F63                     u1795:	
  3049  0F63  35A8               	lslf	___lldiv@divisor,f
  3050  0F64  0DA9               	rlf	___lldiv@divisor+1,f
  3051  0F65  0DAA               	rlf	___lldiv@divisor+2,f
  3052  0F66  0DAB               	rlf	___lldiv@divisor+3,f
  3053  0F67  0B89               	decfsz	9,f
  3054  0F68  2F63               	goto	u1795
  3055  0F69  3001               	movlw	1
  3056  0F6A  00F6               	movwf	??___lldiv
  3057  0F6B  0876               	movf	??___lldiv,w
  3058  0F6C  07B4               	addwf	___lldiv@counter,f
  3059  0F6D  2F60               	goto	l2090
  3060  0F6E                     l2092:	
  3061  0F6E  3001               	movlw	1
  3062  0F6F                     u1815:	
  3063  0F6F  35B0               	lslf	___lldiv@quotient,f
  3064  0F70  0DB1               	rlf	___lldiv@quotient+1,f
  3065  0F71  0DB2               	rlf	___lldiv@quotient+2,f
  3066  0F72  0DB3               	rlf	___lldiv@quotient+3,f
  3067  0F73  0B89               	decfsz	9,f
  3068  0F74  2F6F               	goto	u1815
  3069  0F75  082B               	movf	___lldiv@divisor+3,w
  3070  0F76  022F               	subwf	___lldiv@dividend+3,w
  3071  0F77  1D03               	skipz
  3072  0F78  2F83               	goto	u1825
  3073  0F79  082A               	movf	___lldiv@divisor+2,w
  3074  0F7A  022E               	subwf	___lldiv@dividend+2,w
  3075  0F7B  1D03               	skipz
  3076  0F7C  2F83               	goto	u1825
  3077  0F7D  0829               	movf	___lldiv@divisor+1,w
  3078  0F7E  022D               	subwf	___lldiv@dividend+1,w
  3079  0F7F  1D03               	skipz
  3080  0F80  2F83               	goto	u1825
  3081  0F81  0828               	movf	___lldiv@divisor,w
  3082  0F82  022C               	subwf	___lldiv@dividend,w
  3083  0F83                     u1825:	
  3084  0F83  1C03               	skipc
  3085  0F84  2F8E               	goto	l2100
  3086  0F85  0828               	movf	___lldiv@divisor,w
  3087  0F86  02AC               	subwf	___lldiv@dividend,f
  3088  0F87  0829               	movf	___lldiv@divisor+1,w
  3089  0F88  3BAD               	subwfb	___lldiv@dividend+1,f
  3090  0F89  082A               	movf	___lldiv@divisor+2,w
  3091  0F8A  3BAE               	subwfb	___lldiv@dividend+2,f
  3092  0F8B  082B               	movf	___lldiv@divisor+3,w
  3093  0F8C  3BAF               	subwfb	___lldiv@dividend+3,f
  3094  0F8D  1430               	bsf	___lldiv@quotient,0
  3095  0F8E                     l2100:	
  3096  0F8E  3001               	movlw	1
  3097  0F8F                     u1835:	
  3098  0F8F  36AB               	lsrf	___lldiv@divisor+3,f
  3099  0F90  0CAA               	rrf	___lldiv@divisor+2,f
  3100  0F91  0CA9               	rrf	___lldiv@divisor+1,f
  3101  0F92  0CA8               	rrf	___lldiv@divisor,f
  3102  0F93  0B89               	decfsz	9,f
  3103  0F94  2F8F               	goto	u1835
  3104  0F95  3001               	movlw	1
  3105  0F96  02B4               	subwf	___lldiv@counter,f
  3106  0F97  1D03               	btfss	3,2
  3107  0F98  2F6E               	goto	l2092
  3108  0F99                     l2104:	
  3109  0F99  0833               	movf	___lldiv@quotient+3,w
  3110  0F9A  00AB               	movwf	?___lldiv+3
  3111  0F9B  0832               	movf	___lldiv@quotient+2,w
  3112  0F9C  00AA               	movwf	?___lldiv+2
  3113  0F9D  0831               	movf	___lldiv@quotient+1,w
  3114  0F9E  00A9               	movwf	?___lldiv+1
  3115  0F9F  0830               	movf	___lldiv@quotient,w
  3116  0FA0  00A8               	movwf	?___lldiv
  3117  0FA1  0008               	return
  3118  0FA2                     __end_of___lldiv:	
  3119                           
  3120                           	psect	text4
  3121  06D2                     __ptext4:	
  3122 ;; *************** function _init_I2C_buffer *****************
  3123 ;; Defined at:
  3124 ;;		line 174 in file "main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  i               1    3[BANK0 ] unsigned char 
  3129 ;;  i               1    2[BANK0 ] unsigned char 
  3130 ;;  i               1    1[BANK0 ] unsigned char 
  3131 ;;  i               1    0[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : B1F/1
  3138 ;;		On exit  : 1F/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3145 ;;Total ram usage:        7 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		_eeprom_read
  3150 ;; This function is called by:
  3151 ;;		_main
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _init_I2C_buffer
  3157  06D2                     _init_I2C_buffer:	
  3158                           
  3159                           ;main.c: 175: I2C_buffer.data.ID = 0x03;
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _init_I2C_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3163  06D2  30F5               	movlw	245
  3164  06D3  0086               	movwf	6
  3165  06D4  3022               	movlw	34
  3166  06D5  0087               	movwf	7
  3167  06D6  3003               	movlw	3
  3168  06D7  3FC0               	movwi [0]fsr1
  3169                           
  3170                           ;main.c: 176: I2C_buffer.data.RESET = 0;
  3171  06D8  30F5               	movlw	245
  3172  06D9  0086               	movwf	6
  3173  06DA  3022               	movlw	34
  3174  06DB  0087               	movwf	7
  3175  06DC  3141               	addfsr 1,1
  3176  06DD  0181               	clrf	1
  3177                           
  3178                           ;main.c: 177: I2C_buffer.data.SAVE = 0;
  3179  06DE  30F5               	movlw	245
  3180  06DF  0086               	movwf	6
  3181  06E0  3022               	movlw	34
  3182  06E1  0087               	movwf	7
  3183  06E2  3142               	addfsr 1,2
  3184  06E3  0181               	clrf	1
  3185                           
  3186                           ;main.c: 178: I2C_buffer.data.dispense = 0;
  3187  06E4  30F5               	movlw	245
  3188  06E5  0086               	movwf	6
  3189  06E6  3022               	movlw	34
  3190  06E7  0087               	movwf	7
  3191  06E8  3143               	addfsr 1,3
  3192  06E9  0181               	clrf	1
  3193                           
  3194                           ;main.c: 179: I2C_buffer.data.selected = 0;
  3195  06EA  30F5               	movlw	245
  3196  06EB  0086               	movwf	6
  3197  06EC  3022               	movlw	34
  3198  06ED  0087               	movwf	7
  3199  06EE  3144               	addfsr 1,4
  3200  06EF  0181               	clrf	1
  3201                           
  3202                           ;main.c: 180: I2C_buffer.data.cancel = 0;
  3203  06F0  30F5               	movlw	245
  3204  06F1  0086               	movwf	6
  3205  06F2  3022               	movlw	34
  3206  06F3  0087               	movwf	7
  3207  06F4  3145               	addfsr 1,5
  3208  06F5  0181               	clrf	1
  3209                           
  3210                           ;main.c: 181: I2C_buffer.data.counter = 0;
  3211  06F6  30FB               	movlw	251
  3212  06F7  0086               	movwf	6
  3213  06F8  3022               	movlw	34
  3214  06F9  0087               	movwf	7
  3215  06FA  3000               	movlw	0
  3216  06FB  3FC0               	movwi [0]fsr1
  3217  06FC  3FC1               	movwi [1]fsr1
  3218  06FD  3FC2               	movwi [2]fsr1
  3219  06FE  3FC3               	movwi [3]fsr1
  3220                           
  3221                           ;main.c: 182: I2C_buffer.data.time = 0;
  3222  06FF  30FF               	movlw	255
  3223  0700  0086               	movwf	6
  3224  0701  3022               	movlw	34
  3225  0702  0087               	movwf	7
  3226  0703  3000               	movlw	0
  3227  0704  3FC0               	movwi [0]fsr1
  3228  0705  3FC1               	movwi [1]fsr1
  3229  0706  3FC2               	movwi [2]fsr1
  3230  0707  3FC3               	movwi [3]fsr1
  3231                           
  3232                           ;main.c: 183: I2C_buffer.data.calibrate = 0;
  3233  0708  30F5               	movlw	245
  3234  0709  0086               	movwf	6
  3235  070A  3022               	movlw	34
  3236  070B  0087               	movwf	7
  3237  070C  314E               	addfsr 1,14
  3238  070D  0181               	clrf	1
  3239                           
  3240                           ;main.c: 184: I2C_buffer.data.relay1 = 0;
  3241  070E  30F5               	movlw	245
  3242  070F  0086               	movwf	6
  3243  0710  3022               	movlw	34
  3244  0711  0087               	movwf	7
  3245  0712  314F               	addfsr 1,15
  3246  0713  0181               	clrf	1
  3247                           
  3248                           ;main.c: 185: I2C_buffer.data.relay2 = 0;
  3249  0714  30F5               	movlw	245
  3250  0715  0086               	movwf	6
  3251  0716  3022               	movlw	34
  3252  0717  0087               	movwf	7
  3253  0718  3150               	addfsr 1,16
  3254  0719  0181               	clrf	1
  3255                           
  3256                           ;main.c: 186: I2C_buffer.data.relay3 = 0;
  3257  071A  30F5               	movlw	245
  3258  071B  0086               	movwf	6
  3259  071C  3022               	movlw	34
  3260  071D  0087               	movwf	7
  3261  071E  3151               	addfsr 1,17
  3262  071F  0181               	clrf	1
  3263                           
  3264                           ;main.c: 187: I2C_buffer.data.relay4 = 0;
  3265  0720  30F5               	movlw	245
  3266  0721  0086               	movwf	6
  3267  0722  3022               	movlw	34
  3268  0723  0087               	movwf	7
  3269  0724  3152               	addfsr 1,18
  3270  0725  0181               	clrf	1
  3271                           
  3272                           ;main.c: 188: I2C_buffer.data.selected1 = 0;
  3273  0726  30F5               	movlw	245
  3274  0727  0086               	movwf	6
  3275  0728  3022               	movlw	34
  3276  0729  0087               	movwf	7
  3277  072A  3153               	addfsr 1,19
  3278  072B  0181               	clrf	1
  3279                           
  3280                           ;main.c: 189: for (unsigned char i = 0; i < 58; i++)
  3281  072C  0020               	movlb	0	; select bank0
  3282  072D  01A0               	clrf	init_I2C_buffer@i
  3283  072E                     l2156:	
  3284                           
  3285                           ;main.c: 190: {;main.c: 191: I2C_buffer.byte[(unsigned char) (0x14 + i)] = eeprom_read(i
      +                          );
  3286  072E  0820               	movf	init_I2C_buffer@i,w
  3287  072F  3187  27E5  3186   	fcall	_eeprom_read
  3288  0732  00F6               	movwf	??_init_I2C_buffer
  3289  0733  0020               	movlb	0	; select bank0
  3290  0734  0820               	movf	init_I2C_buffer@i,w
  3291  0735  3E14               	addlw	20
  3292  0736  3EF5               	addlw	245
  3293  0737  00F7               	movwf	??_init_I2C_buffer+1
  3294  0738  01F8               	clrf	??_init_I2C_buffer+2
  3295  0739  3022               	movlw	34
  3296  073A  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3297  073B  0877               	movf	??_init_I2C_buffer+1,w
  3298  073C  0086               	movwf	6
  3299  073D  0878               	movf	??_init_I2C_buffer+2,w
  3300  073E  0087               	movwf	7
  3301  073F  0876               	movf	??_init_I2C_buffer,w
  3302  0740  0081               	movwf	1
  3303  0741  3001               	movlw	1
  3304  0742  00F6               	movwf	??_init_I2C_buffer
  3305  0743  0876               	movf	??_init_I2C_buffer,w
  3306  0744  07A0               	addwf	init_I2C_buffer@i,f
  3307  0745  303A               	movlw	58
  3308  0746  0220               	subwf	init_I2C_buffer@i,w
  3309  0747  1C03               	skipc
  3310  0748  2F2E               	goto	l2156
  3311                           
  3312                           ;main.c: 192: };main.c: 193: I2C_buffer.data.selected2 = 0;
  3313  0749  3042               	movlw	66
  3314  074A  0086               	movwf	6
  3315  074B  3023               	movlw	35
  3316  074C  0087               	movwf	7
  3317  074D  0181               	clrf	1
  3318                           
  3319                           ;main.c: 194: for (unsigned char i = 0; i < 58; i++)
  3320  074E  01A1               	clrf	init_I2C_buffer@i_663
  3321  074F                     l2170:	
  3322                           
  3323                           ;main.c: 195: {;main.c: 196: I2C_buffer.byte[(unsigned char) (0x4E + i)] = eeprom_read((
      +                          unsigned char) (58 + i));
  3324  074F  0821               	movf	init_I2C_buffer@i_663,w
  3325  0750  3E3A               	addlw	58
  3326  0751  3187  27E5  3186   	fcall	_eeprom_read
  3327  0754  00F6               	movwf	??_init_I2C_buffer
  3328  0755  0020               	movlb	0	; select bank0
  3329  0756  0821               	movf	init_I2C_buffer@i_663,w
  3330  0757  3E4E               	addlw	78
  3331  0758  3EF5               	addlw	245
  3332  0759  00F7               	movwf	??_init_I2C_buffer+1
  3333  075A  01F8               	clrf	??_init_I2C_buffer+2
  3334  075B  3022               	movlw	34
  3335  075C  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3336  075D  0877               	movf	??_init_I2C_buffer+1,w
  3337  075E  0086               	movwf	6
  3338  075F  0878               	movf	??_init_I2C_buffer+2,w
  3339  0760  0087               	movwf	7
  3340  0761  0876               	movf	??_init_I2C_buffer,w
  3341  0762  0081               	movwf	1
  3342  0763  3001               	movlw	1
  3343  0764  00F6               	movwf	??_init_I2C_buffer
  3344  0765  0876               	movf	??_init_I2C_buffer,w
  3345  0766  07A1               	addwf	init_I2C_buffer@i_663,f
  3346  0767  303A               	movlw	58
  3347  0768  0221               	subwf	init_I2C_buffer@i_663,w
  3348  0769  1C03               	skipc
  3349  076A  2F4F               	goto	l2170
  3350                           
  3351                           ;main.c: 197: };main.c: 198: I2C_buffer.data.selected3 = 0;
  3352  076B  307C               	movlw	124
  3353  076C  0086               	movwf	6
  3354  076D  3023               	movlw	35
  3355  076E  0087               	movwf	7
  3356  076F  0181               	clrf	1
  3357                           
  3358                           ;main.c: 199: for (unsigned char i = 0; i < 58; i++)
  3359  0770  01A2               	clrf	init_I2C_buffer@i_664
  3360  0771                     l2184:	
  3361                           
  3362                           ;main.c: 200: {;main.c: 201: I2C_buffer.byte[(unsigned char) (0x88 + i)] = eeprom_read((
      +                          unsigned char) (115 + i));
  3363  0771  0822               	movf	init_I2C_buffer@i_664,w
  3364  0772  3E73               	addlw	115
  3365  0773  3187  27E5  3186   	fcall	_eeprom_read
  3366  0776  00F6               	movwf	??_init_I2C_buffer
  3367  0777  0020               	movlb	0	; select bank0
  3368  0778  0822               	movf	init_I2C_buffer@i_664,w
  3369  0779  3E88               	addlw	136
  3370  077A  3EF5               	addlw	245
  3371  077B  00F7               	movwf	??_init_I2C_buffer+1
  3372  077C  01F8               	clrf	??_init_I2C_buffer+2
  3373  077D  3022               	movlw	34
  3374  077E  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3375  077F  0877               	movf	??_init_I2C_buffer+1,w
  3376  0780  0086               	movwf	6
  3377  0781  0878               	movf	??_init_I2C_buffer+2,w
  3378  0782  0087               	movwf	7
  3379  0783  0876               	movf	??_init_I2C_buffer,w
  3380  0784  0081               	movwf	1
  3381  0785  3001               	movlw	1
  3382  0786  00F6               	movwf	??_init_I2C_buffer
  3383  0787  0876               	movf	??_init_I2C_buffer,w
  3384  0788  07A2               	addwf	init_I2C_buffer@i_664,f
  3385  0789  303A               	movlw	58
  3386  078A  0222               	subwf	init_I2C_buffer@i_664,w
  3387  078B  1C03               	skipc
  3388  078C  2F71               	goto	l2184
  3389                           
  3390                           ;main.c: 202: };main.c: 203: I2C_buffer.data.selected4 = 0;
  3391  078D  30B6               	movlw	182
  3392  078E  0086               	movwf	6
  3393  078F  3023               	movlw	35
  3394  0790  0087               	movwf	7
  3395  0791  0181               	clrf	1
  3396                           
  3397                           ;main.c: 204: for (unsigned char i = 0; i < 58; i++)
  3398  0792  01A3               	clrf	init_I2C_buffer@i_665
  3399  0793                     l2198:	
  3400                           
  3401                           ;main.c: 205: {;main.c: 206: I2C_buffer.byte[(unsigned char) (0xC2 + i)] = eeprom_read((
      +                          unsigned char) (172 + i));
  3402  0793  0823               	movf	init_I2C_buffer@i_665,w
  3403  0794  3EAC               	addlw	172
  3404  0795  3187  27E5  3186   	fcall	_eeprom_read
  3405  0798  00F6               	movwf	??_init_I2C_buffer
  3406  0799  0020               	movlb	0	; select bank0
  3407  079A  0823               	movf	init_I2C_buffer@i_665,w
  3408  079B  3EC2               	addlw	194
  3409  079C  3EF5               	addlw	245
  3410  079D  00F7               	movwf	??_init_I2C_buffer+1
  3411  079E  01F8               	clrf	??_init_I2C_buffer+2
  3412  079F  3022               	movlw	34
  3413  07A0  3DF8               	addwfc	??_init_I2C_buffer+2,f
  3414  07A1  0877               	movf	??_init_I2C_buffer+1,w
  3415  07A2  0086               	movwf	6
  3416  07A3  0878               	movf	??_init_I2C_buffer+2,w
  3417  07A4  0087               	movwf	7
  3418  07A5  0876               	movf	??_init_I2C_buffer,w
  3419  07A6  0081               	movwf	1
  3420  07A7  3001               	movlw	1
  3421  07A8  00F6               	movwf	??_init_I2C_buffer
  3422  07A9  0876               	movf	??_init_I2C_buffer,w
  3423  07AA  07A3               	addwf	init_I2C_buffer@i_665,f
  3424  07AB  303A               	movlw	58
  3425  07AC  0223               	subwf	init_I2C_buffer@i_665,w
  3426  07AD  1803               	btfsc	3,0
  3427  07AE  0008               	return
  3428  07AF  2F93               	goto	l2198
  3429  07B0                     __end_of_init_I2C_buffer:	
  3430                           
  3431                           	psect	text5
  3432  07E5                     __ptext5:	
  3433 ;; *************** function _eeprom_read *****************
  3434 ;; Defined at:
  3435 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  addr            1    wreg     unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  addr            1    5[COMMON] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      unsigned char 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 1F/0
  3446 ;;		On exit  : 1F/3
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;Total ram usage:        4 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_init_I2C_buffer
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function _eeprom_read
  3465  07E5                     _eeprom_read:	
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3469                           ;eeprom_read@addr stored from wreg
  3470  07E5  00F5               	movwf	eeprom_read@addr
  3471  07E6  2FE8               	goto	l374
  3472  07E7                     u1731:	
  3473  07E7  0020               	movlb	0	; select bank0
  3474  07E8                     l374:	
  3475                           ;__eeread.c: 8: do
  3476                           
  3477  07E8  0064               	clrwdt	;# 
  3478                           
  3479                           ;__eeread.c: 12: while(EECON1bits.WR);
  3480  07E9  0023               	movlb	3	; select bank3
  3481  07EA  1895               	btfsc	21,1	;volsfr
  3482  07EB  2FE7               	goto	u1731
  3483                           
  3484                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  3485  07EC  0875               	movf	eeprom_read@addr,w
  3486  07ED  00F2               	movwf	??_eeprom_read
  3487  07EE  01F3               	clrf	??_eeprom_read+1
  3488  07EF  0872               	movf	??_eeprom_read,w
  3489  07F0  0091               	movwf	17	;volatile
  3490  07F1  0873               	movf	??_eeprom_read+1,w
  3491  07F2  0092               	movwf	18	;volatile
  3492  07F3  303F               	movlw	63
  3493  07F4  00F4               	movwf	??_eeprom_read+2
  3494  07F5  0874               	movf	??_eeprom_read+2,w
  3495  07F6  0595               	andwf	21,f	;volsfr
  3496  07F7  1415               	bsf	21,0	;volsfr
  3497  07F8  0813               	movf	19,w	;volatile
  3498  07F9  0008               	return
  3499  07FA                     __end_of_eeprom_read:	
  3500                           
  3501                           	psect	text6
  3502  0F01                     __ptext6:	
  3503 ;; *************** function _eeprom_write *****************
  3504 ;; Defined at:
  3505 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  addr            1    wreg     unsigned char 
  3508 ;;  value           1    2[COMMON] unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  addr            1    5[COMMON] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 1F/1
  3517 ;;		On exit  : 1F/3
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;Total ram usage:        4 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_main
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _eeprom_write
  3536  0F01                     _eeprom_write:	
  3537                           
  3538                           ;incstack = 0
  3539                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3540                           ;eeprom_write@addr stored from wreg
  3541  0F01  00F5               	movwf	eeprom_write@addr
  3542  0F02                     l394:	
  3543                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  3544                           
  3545  0F02  0023               	movlb	3	; select bank3
  3546  0F03  1895               	btfsc	21,1	;volsfr
  3547  0F04  2F02               	goto	l394
  3548  0F05  0875               	movf	eeprom_write@addr,w
  3549  0F06  00F3               	movwf	??_eeprom_write
  3550  0F07  01F4               	clrf	??_eeprom_write+1
  3551  0F08  0873               	movf	??_eeprom_write,w
  3552  0F09  0091               	movwf	17	;volatile
  3553  0F0A  0874               	movf	??_eeprom_write+1,w
  3554  0F0B  0092               	movwf	18	;volatile
  3555  0F0C  0872               	movf	eeprom_write@value,w
  3556  0F0D  0093               	movwf	19	;volatile
  3557  0F0E  303F               	movlw	63
  3558  0F0F  00F3               	movwf	??_eeprom_write
  3559  0F10  0873               	movf	??_eeprom_write,w
  3560  0F11  0595               	andwf	21,f	;volsfr
  3561  0F12  1003               	bcf	3,0	;volatile
  3562  0F13  1B8B               	btfsc	11,7	;volatile
  3563  0F14  1403               	bsf	3,0	;volatile
  3564  0F15  138B               	bcf	11,7	;volatile
  3565  0F16  1515               	bsf	21,2	;volsfr
  3566  0F17  3055               	movlw	85
  3567  0F18  0096               	movwf	22	;volsfr
  3568  0F19  30AA               	movlw	170
  3569  0F1A  0096               	movwf	22	;volsfr
  3570  0F1B  1495               	bsf	21,1	;volsfr
  3571  0F1C  1115               	bcf	21,2	;volsfr
  3572  0F1D  1C03               	btfss	3,0	;volatile
  3573  0F1E  0008               	return
  3574  0F1F  178B               	bsf	11,7	;volatile
  3575  0F20  0008               	return
  3576  0F21                     __end_of_eeprom_write:	
  3577                           
  3578                           	psect	text7
  3579  07B0                     __ptext7:	
  3580 ;; *************** function ___lwdiv *****************
  3581 ;; Defined at:
  3582 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  divisor         2    2[COMMON] unsigned int 
  3585 ;;  dividend        2    4[COMMON] unsigned int 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  quotient        2    1[BANK0 ] unsigned int 
  3588 ;;  counter         1    0[BANK0 ] unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2    2[COMMON] unsigned int 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 1E/0
  3595 ;;		On exit  : 1F/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;Total ram usage:        8 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function ___lwdiv
  3614  07B0                     ___lwdiv:	
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3618  07B0  0020               	movlb	0	; select bank0
  3619  07B1  01A1               	clrf	___lwdiv@quotient
  3620  07B2  01A2               	clrf	___lwdiv@quotient+1
  3621  07B3  0872               	movf	___lwdiv@divisor,w
  3622  07B4  0473               	iorwf	___lwdiv@divisor+1,w
  3623  07B5  1903               	btfsc	3,2
  3624  07B6  2FE0               	goto	l2246
  3625  07B7  01A0               	clrf	___lwdiv@counter
  3626  07B8  0AA0               	incf	___lwdiv@counter,f
  3627  07B9                     l2234:	
  3628  07B9  1BF3               	btfsc	___lwdiv@divisor+1,7
  3629  07BA  2FC5               	goto	l2236
  3630  07BB  3001               	movlw	1
  3631  07BC                     u1955:	
  3632  07BC  35F2               	lslf	___lwdiv@divisor,f
  3633  07BD  0DF3               	rlf	___lwdiv@divisor+1,f
  3634  07BE  0B89               	decfsz	9,f
  3635  07BF  2FBC               	goto	u1955
  3636  07C0  3001               	movlw	1
  3637  07C1  00F6               	movwf	??___lwdiv
  3638  07C2  0876               	movf	??___lwdiv,w
  3639  07C3  07A0               	addwf	___lwdiv@counter,f
  3640  07C4  2FB9               	goto	l2234
  3641  07C5                     l2236:	
  3642  07C5  3001               	movlw	1
  3643  07C6                     u1975:	
  3644  07C6  35A1               	lslf	___lwdiv@quotient,f
  3645  07C7  0DA2               	rlf	___lwdiv@quotient+1,f
  3646  07C8  0B89               	decfsz	9,f
  3647  07C9  2FC6               	goto	u1975
  3648  07CA  0873               	movf	___lwdiv@divisor+1,w
  3649  07CB  0275               	subwf	___lwdiv@dividend+1,w
  3650  07CC  1D03               	skipz
  3651  07CD  2FD0               	goto	u1985
  3652  07CE  0872               	movf	___lwdiv@divisor,w
  3653  07CF  0274               	subwf	___lwdiv@dividend,w
  3654  07D0                     u1985:	
  3655  07D0  1C03               	skipc
  3656  07D1  2FD7               	goto	l2242
  3657  07D2  0872               	movf	___lwdiv@divisor,w
  3658  07D3  02F4               	subwf	___lwdiv@dividend,f
  3659  07D4  0873               	movf	___lwdiv@divisor+1,w
  3660  07D5  3BF5               	subwfb	___lwdiv@dividend+1,f
  3661  07D6  1421               	bsf	___lwdiv@quotient,0
  3662  07D7                     l2242:	
  3663  07D7  3001               	movlw	1
  3664  07D8                     u1995:	
  3665  07D8  36F3               	lsrf	___lwdiv@divisor+1,f
  3666  07D9  0CF2               	rrf	___lwdiv@divisor,f
  3667  07DA  0B89               	decfsz	9,f
  3668  07DB  2FD8               	goto	u1995
  3669  07DC  3001               	movlw	1
  3670  07DD  02A0               	subwf	___lwdiv@counter,f
  3671  07DE  1D03               	btfss	3,2
  3672  07DF  2FC5               	goto	l2236
  3673  07E0                     l2246:	
  3674  07E0  0822               	movf	___lwdiv@quotient+1,w
  3675  07E1  00F3               	movwf	?___lwdiv+1
  3676  07E2  0821               	movf	___lwdiv@quotient,w
  3677  07E3  00F2               	movwf	?___lwdiv
  3678  07E4  0008               	return
  3679  07E5                     __end_of___lwdiv:	
  3680                           
  3681                           	psect	text8
  3682  0EE3                     __ptext8:	
  3683 ;; *************** function _ADC_read *****************
  3684 ;; Defined at:
  3685 ;;		line 164 in file "main.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  channel         1    wreg     unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  channel         1    5[COMMON] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2    2[COMMON] unsigned int 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 1F/0
  3696 ;;		On exit  : 1F/1
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;Total ram usage:        4 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _ADC_read
  3715  0EE3                     _ADC_read:	
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  3719                           ;ADC_read@channel stored from wreg
  3720  0EE3  00F5               	movwf	ADC_read@channel
  3721                           
  3722                           ;main.c: 165: ADCON0 = (unsigned char) (channel << 2);
  3723  0EE4  0875               	movf	ADC_read@channel,w
  3724  0EE5  00F4               	movwf	??_ADC_read
  3725  0EE6  3001               	movlw	1
  3726  0EE7                     u1855:	
  3727  0EE7  35F4               	lslf	??_ADC_read,f
  3728  0EE8  3EFF               	addlw	-1
  3729  0EE9  1D03               	skipz
  3730  0EEA  2EE7               	goto	u1855
  3731  0EEB  3574               	lslf	??_ADC_read,w
  3732  0EEC  0021               	movlb	1	; select bank1
  3733  0EED  009D               	movwf	29	;volatile
  3734                           
  3735                           ;main.c: 166: ADCON0bits.ADON = 1;
  3736  0EEE  141D               	bsf	29,0	;volatile
  3737                           
  3738                           ;main.c: 167: _delay((unsigned long)((1)*(32000000/4000.0)));
  3739  0EEF  300B               	movlw	11
  3740  0EF0  00F4               	movwf	??_ADC_read
  3741  0EF1  3062               	movlw	98
  3742  0EF2                     u2407:	
  3743  0EF2  0B89               	decfsz	9,f
  3744  0EF3  2EF2               	goto	u2407
  3745  0EF4  0BF4               	decfsz	??_ADC_read,f
  3746  0EF5  2EF2               	goto	u2407
  3747  0EF6  3200               	nop2
  3748                           
  3749                           ;main.c: 168: ADCON0bits.GO_nDONE = 1;
  3750  0EF7  0021               	movlb	1	; select bank1
  3751  0EF8  149D               	bsf	29,1	;volatile
  3752  0EF9                     l106:	
  3753                           ;main.c: 169: while (ADCON0bits.GO_nDONE);
  3754                           
  3755  0EF9  189D               	btfsc	29,1	;volatile
  3756  0EFA  2EF9               	goto	l106
  3757                           
  3758                           ;main.c: 170: ADCON0bits.ADON = 0;
  3759  0EFB  101D               	bcf	29,0	;volatile
  3760                           
  3761                           ;main.c: 171: return (((unsigned int) ADRESH) << 8) | ((unsigned int) ADRESL & 0xFF);
  3762  0EFC  081C               	movf	28,w	;volatile
  3763  0EFD  00F3               	movwf	?_ADC_read+1
  3764  0EFE  081B               	movf	27,w	;volatile
  3765  0EFF  00F2               	movwf	?_ADC_read
  3766  0F00  0008               	return
  3767  0F01                     __end_of_ADC_read:	
  3768                           
  3769                           	psect	intentry
  3770  0004                     __pintentry:	
  3771 ;; *************** function _isr *****************
  3772 ;; Defined at:
  3773 ;;		line 213 in file "main.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 1F/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;Total ram usage:        2 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		Interrupt level 1
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800  0004                     _isr:	
  3801                           
  3802                           ;incstack = 0
  3803  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3804                           
  3805                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  3806  0005  3180               	pagesel	$
  3807                           
  3808                           ;main.c: 215: if (INTCONbits.INTF == 1) {
  3809  0006  1C8B               	btfss	11,1	;volatile
  3810  0007  2842               	goto	i1l1694
  3811                           
  3812                           ;main.c: 216: INTCONbits.INTE = 0;
  3813  0008  120B               	bcf	11,4	;volatile
  3814                           
  3815                           ;main.c: 217: if (PORTBbits.RB0 == 0) {
  3816  0009  0020               	movlb	0	; select bank0
  3817  000A  180D               	btfsc	13,0	;volatile
  3818  000B  2840               	goto	i1l1690
  3819                           
  3820                           ;main.c: 218: if (I2C_buffer.data.dispense == 0) {
  3821  000C  30F5               	movlw	245
  3822  000D  0086               	movwf	6
  3823  000E  3022               	movlw	34
  3824  000F  0087               	movwf	7
  3825  0010  3143               	addfsr 1,3
  3826  0011  0801               	movf	1,w
  3827  0012  1D03               	btfss	3,2
  3828  0013  2830               	goto	i1l1688
  3829                           
  3830                           ;main.c: 219: I2C_buffer.data.cancel = 1;
  3831  0014  30FA               	movlw	250
  3832  0015  0086               	movwf	6
  3833  0016  3022               	movlw	34
  3834  0017  0087               	movwf	7
  3835  0018  3001               	movlw	1
  3836  0019  0081               	movwf	1
  3837                           
  3838                           ;main.c: 220: I2C_buffer.data.selected1 = 0;
  3839  001A  30F5               	movlw	245
  3840  001B  0086               	movwf	6
  3841  001C  3022               	movlw	34
  3842  001D  0087               	movwf	7
  3843  001E  3153               	addfsr 1,19
  3844  001F  0181               	clrf	1
  3845                           
  3846                           ;main.c: 221: I2C_buffer.data.selected2 = 0;
  3847  0020  3042               	movlw	66
  3848  0021  0086               	movwf	6
  3849  0022  3023               	movlw	35
  3850  0023  0087               	movwf	7
  3851  0024  0181               	clrf	1
  3852                           
  3853                           ;main.c: 222: I2C_buffer.data.selected3 = 0;
  3854  0025  307C               	movlw	124
  3855  0026  0086               	movwf	6
  3856  0027  3023               	movlw	35
  3857  0028  0087               	movwf	7
  3858  0029  0181               	clrf	1
  3859                           
  3860                           ;main.c: 223: I2C_buffer.data.selected4 = 0;
  3861  002A  30B6               	movlw	182
  3862  002B  0086               	movwf	6
  3863  002C  3023               	movlw	35
  3864  002D  0087               	movwf	7
  3865  002E  0181               	clrf	1
  3866                           
  3867                           ;main.c: 224: } else {
  3868  002F  2840               	goto	i1l1690
  3869  0030                     i1l1688:	
  3870                           
  3871                           ;main.c: 225: I2C_buffer.data.counter++;
  3872  0030  30F5               	movlw	245
  3873  0031  0086               	movwf	6
  3874  0032  3022               	movlw	34
  3875  0033  0087               	movwf	7
  3876  0034  3146               	addfsr 1,6
  3877  0035  3001               	movlw	1
  3878  0036  0781               	addwf	1,f
  3879  0037  3141               	addfsr 1,1
  3880  0038  3000               	movlw	0
  3881  0039  3D81               	addwfc	1,f
  3882  003A  3141               	addfsr 1,1
  3883  003B  3000               	movlw	0
  3884  003C  3D81               	addwfc	1,f
  3885  003D  3141               	addfsr 1,1
  3886  003E  3000               	movlw	0
  3887  003F  3D81               	addwfc	1,f
  3888  0040                     i1l1690:	
  3889                           
  3890                           ;main.c: 226: };main.c: 227: };main.c: 228: INTCONbits.INTF = 0;
  3891  0040  108B               	bcf	11,1	;volatile
  3892                           
  3893                           ;main.c: 229: INTCONbits.INTE = 1;
  3894  0041  160B               	bsf	11,4	;volatile
  3895  0042                     i1l1694:	
  3896                           
  3897                           ;main.c: 230: };main.c: 232: if (INTCONbits.IOCIF == 1) {
  3898  0042  1C0B               	btfss	11,0	;volatile
  3899  0043  28CF               	goto	i1l1748
  3900                           
  3901                           ;main.c: 233: INTCONbits.IOCIE = 0;
  3902  0044  118B               	bcf	11,3	;volatile
  3903                           
  3904                           ;main.c: 234: if (IOCBFbits.IOCBF2 == 1) {
  3905  0045  0027               	movlb	7	; select bank7
  3906  0046  1D16               	btfss	22,2	;volatile
  3907  0047  2866               	goto	i1l1710
  3908                           
  3909                           ;main.c: 235: if (PORTBbits.RB2 == 0) {
  3910  0048  0020               	movlb	0	; select bank0
  3911  0049  190D               	btfsc	13,2	;volatile
  3912  004A  2866               	goto	i1l1710
  3913                           
  3914                           ;main.c: 236: I2C_buffer.data.cancel = 0;
  3915  004B  30F5               	movlw	245
  3916  004C  0086               	movwf	6
  3917  004D  3022               	movlw	34
  3918  004E  0087               	movwf	7
  3919  004F  3145               	addfsr 1,5
  3920  0050  0181               	clrf	1
  3921                           
  3922                           ;main.c: 237: I2C_buffer.data.selected1 = 1;
  3923  0051  3008               	movlw	8
  3924  0052  0086               	movwf	6
  3925  0053  3023               	movlw	35
  3926  0054  0087               	movwf	7
  3927  0055  3001               	movlw	1
  3928  0056  0081               	movwf	1
  3929                           
  3930                           ;main.c: 238: I2C_buffer.data.selected2 = 0;
  3931  0057  3042               	movlw	66
  3932  0058  0086               	movwf	6
  3933  0059  3023               	movlw	35
  3934  005A  0087               	movwf	7
  3935  005B  0181               	clrf	1
  3936                           
  3937                           ;main.c: 239: I2C_buffer.data.selected3 = 0;
  3938  005C  307C               	movlw	124
  3939  005D  0086               	movwf	6
  3940  005E  3023               	movlw	35
  3941  005F  0087               	movwf	7
  3942  0060  0181               	clrf	1
  3943                           
  3944                           ;main.c: 240: I2C_buffer.data.selected4 = 0;
  3945  0061  30B6               	movlw	182
  3946  0062  0086               	movwf	6
  3947  0063  3023               	movlw	35
  3948  0064  0087               	movwf	7
  3949  0065  0181               	clrf	1
  3950  0066                     i1l1710:	
  3951                           
  3952                           ;main.c: 241: };main.c: 242: };main.c: 243: if (IOCBFbits.IOCBF3 == 1) {
  3953  0066  0027               	movlb	7	; select bank7
  3954  0067  1D96               	btfss	22,3	;volatile
  3955  0068  2888               	goto	i1l1722
  3956                           
  3957                           ;main.c: 244: if (PORTBbits.RB3 == 0) {
  3958  0069  0020               	movlb	0	; select bank0
  3959  006A  198D               	btfsc	13,3	;volatile
  3960  006B  2888               	goto	i1l1722
  3961                           
  3962                           ;main.c: 245: I2C_buffer.data.cancel = 0;
  3963  006C  30F5               	movlw	245
  3964  006D  0086               	movwf	6
  3965  006E  3022               	movlw	34
  3966  006F  0087               	movwf	7
  3967  0070  3145               	addfsr 1,5
  3968  0071  0181               	clrf	1
  3969                           
  3970                           ;main.c: 246: I2C_buffer.data.selected1 = 0;
  3971  0072  30F5               	movlw	245
  3972  0073  0086               	movwf	6
  3973  0074  3022               	movlw	34
  3974  0075  0087               	movwf	7
  3975  0076  3153               	addfsr 1,19
  3976  0077  0181               	clrf	1
  3977                           
  3978                           ;main.c: 247: I2C_buffer.data.selected2 = 1;
  3979  0078  3042               	movlw	66
  3980  0079  0086               	movwf	6
  3981  007A  3023               	movlw	35
  3982  007B  0087               	movwf	7
  3983  007C  3001               	movlw	1
  3984  007D  0081               	movwf	1
  3985                           
  3986                           ;main.c: 248: I2C_buffer.data.selected3 = 0;
  3987  007E  307C               	movlw	124
  3988  007F  0086               	movwf	6
  3989  0080  3023               	movlw	35
  3990  0081  0087               	movwf	7
  3991  0082  0181               	clrf	1
  3992                           
  3993                           ;main.c: 249: I2C_buffer.data.selected4 = 0;
  3994  0083  30B6               	movlw	182
  3995  0084  0086               	movwf	6
  3996  0085  3023               	movlw	35
  3997  0086  0087               	movwf	7
  3998  0087  0181               	clrf	1
  3999  0088                     i1l1722:	
  4000                           
  4001                           ;main.c: 250: };main.c: 251: };main.c: 252: if (IOCBFbits.IOCBF6 == 1) {
  4002  0088  0027               	movlb	7	; select bank7
  4003  0089  1F16               	btfss	22,6	;volatile
  4004  008A  28AA               	goto	i1l1734
  4005                           
  4006                           ;main.c: 253: if (PORTBbits.RB6 == 0) {
  4007  008B  0020               	movlb	0	; select bank0
  4008  008C  1B0D               	btfsc	13,6	;volatile
  4009  008D  28AA               	goto	i1l1734
  4010                           
  4011                           ;main.c: 254: I2C_buffer.data.cancel = 0;
  4012  008E  30F5               	movlw	245
  4013  008F  0086               	movwf	6
  4014  0090  3022               	movlw	34
  4015  0091  0087               	movwf	7
  4016  0092  3145               	addfsr 1,5
  4017  0093  0181               	clrf	1
  4018                           
  4019                           ;main.c: 255: I2C_buffer.data.selected1 = 0;
  4020  0094  30F5               	movlw	245
  4021  0095  0086               	movwf	6
  4022  0096  3022               	movlw	34
  4023  0097  0087               	movwf	7
  4024  0098  3153               	addfsr 1,19
  4025  0099  0181               	clrf	1
  4026                           
  4027                           ;main.c: 256: I2C_buffer.data.selected2 = 0;
  4028  009A  3042               	movlw	66
  4029  009B  0086               	movwf	6
  4030  009C  3023               	movlw	35
  4031  009D  0087               	movwf	7
  4032  009E  0181               	clrf	1
  4033                           
  4034                           ;main.c: 257: I2C_buffer.data.selected3 = 1;
  4035  009F  307C               	movlw	124
  4036  00A0  0086               	movwf	6
  4037  00A1  3023               	movlw	35
  4038  00A2  0087               	movwf	7
  4039  00A3  3001               	movlw	1
  4040  00A4  0081               	movwf	1
  4041                           
  4042                           ;main.c: 258: I2C_buffer.data.selected4 = 0;
  4043  00A5  30B6               	movlw	182
  4044  00A6  0086               	movwf	6
  4045  00A7  3023               	movlw	35
  4046  00A8  0087               	movwf	7
  4047  00A9  0181               	clrf	1
  4048  00AA                     i1l1734:	
  4049                           
  4050                           ;main.c: 259: };main.c: 260: };main.c: 261: if (IOCBFbits.IOCBF7 == 1) {
  4051  00AA  0027               	movlb	7	; select bank7
  4052  00AB  1F96               	btfss	22,7	;volatile
  4053  00AC  28CC               	goto	i1l136
  4054                           
  4055                           ;main.c: 262: if (PORTBbits.RB7 == 0) {
  4056  00AD  0020               	movlb	0	; select bank0
  4057  00AE  1B8D               	btfsc	13,7	;volatile
  4058  00AF  28CC               	goto	i1l136
  4059                           
  4060                           ;main.c: 263: I2C_buffer.data.cancel = 0;
  4061  00B0  30F5               	movlw	245
  4062  00B1  0086               	movwf	6
  4063  00B2  3022               	movlw	34
  4064  00B3  0087               	movwf	7
  4065  00B4  3145               	addfsr 1,5
  4066  00B5  0181               	clrf	1
  4067                           
  4068                           ;main.c: 264: I2C_buffer.data.selected1 = 0;
  4069  00B6  30F5               	movlw	245
  4070  00B7  0086               	movwf	6
  4071  00B8  3022               	movlw	34
  4072  00B9  0087               	movwf	7
  4073  00BA  3153               	addfsr 1,19
  4074  00BB  0181               	clrf	1
  4075                           
  4076                           ;main.c: 265: I2C_buffer.data.selected2 = 0;
  4077  00BC  3042               	movlw	66
  4078  00BD  0086               	movwf	6
  4079  00BE  3023               	movlw	35
  4080  00BF  0087               	movwf	7
  4081  00C0  0181               	clrf	1
  4082                           
  4083                           ;main.c: 266: I2C_buffer.data.selected3 = 0;
  4084  00C1  307C               	movlw	124
  4085  00C2  0086               	movwf	6
  4086  00C3  3023               	movlw	35
  4087  00C4  0087               	movwf	7
  4088  00C5  0181               	clrf	1
  4089                           
  4090                           ;main.c: 267: I2C_buffer.data.selected4 = 1;
  4091  00C6  30B6               	movlw	182
  4092  00C7  0086               	movwf	6
  4093  00C8  3023               	movlw	35
  4094  00C9  0087               	movwf	7
  4095  00CA  3001               	movlw	1
  4096  00CB  0081               	movwf	1
  4097  00CC                     i1l136:	
  4098                           
  4099                           ;main.c: 268: };main.c: 269: };main.c: 270: IOCBF = 0;
  4100  00CC  0027               	movlb	7	; select bank7
  4101  00CD  0196               	clrf	22	;volatile
  4102                           
  4103                           ;main.c: 271: INTCONbits.IOCIE = 1;
  4104  00CE  158B               	bsf	11,3	;volatile
  4105  00CF                     i1l1748:	
  4106                           
  4107                           ;main.c: 272: };main.c: 274: if (PIR1bits.TMR1IF == 1)
  4108  00CF  0020               	movlb	0	; select bank0
  4109  00D0  1C11               	btfss	17,0	;volatile
  4110  00D1  28D9               	goto	i1l138
  4111                           
  4112                           ;main.c: 275: {;main.c: 276: T1CONbits.TMR1ON = 0;
  4113  00D2  1018               	bcf	24,0	;volatile
  4114  00D3  0064               	clrwdt	;# 
  4115                           
  4116                           ;main.c: 278: readADC = 1;
  4117  00D4  0020               	movlb	0	; select bank0
  4118  00D5  01ED               	clrf	_readADC
  4119  00D6  0AED               	incf	_readADC,f
  4120                           
  4121                           ;main.c: 279: PIR1bits.TMR1IF = 0;
  4122  00D7  1011               	bcf	17,0	;volatile
  4123                           
  4124                           ;main.c: 280: T1CONbits.TMR1ON = 1;
  4125  00D8  1418               	bsf	24,0	;volatile
  4126  00D9                     i1l138:	
  4127                           
  4128                           ;main.c: 281: };main.c: 283: static unsigned char junk = 0;;main.c: 285: if (PIR1bits.SS
      +                          P1IF)
  4129  00D9  1D91               	btfss	17,3	;volatile
  4130  00DA  293D               	goto	i1l1808
  4131                           
  4132                           ;main.c: 286: {;main.c: 287: INTCONbits.IOCIE = 0;
  4133  00DB  118B               	bcf	11,3	;volatile
  4134                           
  4135                           ;main.c: 288: PIE1bits.TMR1IE = 0;
  4136  00DC  0021               	movlb	1	; select bank1
  4137  00DD  1011               	bcf	17,0	;volatile
  4138                           
  4139                           ;main.c: 289: if (SSP1STATbits.R_nW)
  4140  00DE  0024               	movlb	4	; select bank4
  4141  00DF  1D14               	btfss	20,2	;volatile
  4142  00E0  28FF               	goto	i1l1770
  4143                           
  4144                           ;main.c: 290: {;main.c: 291: if (!SSP1STATbits.D_nA)
  4145  00E1  1A94               	btfsc	20,5	;volatile
  4146  00E2  28F0               	goto	i1l1762
  4147                           
  4148                           ;main.c: 292: {;main.c: 293: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4149  00E3  087A               	movf	_index_i2c,w	;volatile
  4150  00E4  3EF5               	addlw	245
  4151  00E5  0086               	movwf	6
  4152  00E6  0187               	clrf	7
  4153  00E7  3022               	movlw	34
  4154  00E8  3D87               	addwfc	7,f
  4155  00E9  0801               	movf	1,w
  4156  00EA  0091               	movwf	17	;volatile
  4157  00EB  3001               	movlw	1
  4158  00EC  00F0               	movwf	??_isr
  4159  00ED  0870               	movf	??_isr,w
  4160  00EE  07FA               	addwf	_index_i2c,f	;volatile
  4161                           
  4162                           ;main.c: 294: SSP1CON1bits.CKP = 1;
  4163  00EF  1615               	bsf	21,4	;volatile
  4164  00F0                     i1l1762:	
  4165                           
  4166                           ;main.c: 295: };main.c: 296: if (SSP1STATbits.D_nA)
  4167  00F0  1E94               	btfss	20,5	;volatile
  4168  00F1  28FF               	goto	i1l1770
  4169                           
  4170                           ;main.c: 297: {;main.c: 298: SSP1BUF = I2C_buffer.byte[index_i2c++];
  4171  00F2  087A               	movf	_index_i2c,w	;volatile
  4172  00F3  3EF5               	addlw	245
  4173  00F4  0086               	movwf	6
  4174  00F5  0187               	clrf	7
  4175  00F6  3022               	movlw	34
  4176  00F7  3D87               	addwfc	7,f
  4177  00F8  0801               	movf	1,w
  4178  00F9  0091               	movwf	17	;volatile
  4179  00FA  3001               	movlw	1
  4180  00FB  00F0               	movwf	??_isr
  4181  00FC  0870               	movf	??_isr,w
  4182  00FD  07FA               	addwf	_index_i2c,f	;volatile
  4183                           
  4184                           ;main.c: 299: SSP1CON1bits.CKP = 1;
  4185  00FE  1615               	bsf	21,4	;volatile
  4186  00FF                     i1l1770:	
  4187                           
  4188                           ;main.c: 300: };main.c: 301: };main.c: 302: if (!SSP1STATbits.R_nW)
  4189  00FF  1914               	btfsc	20,2	;volatile
  4190  0100  2938               	goto	i1l1802
  4191                           
  4192                           ;main.c: 303: {;main.c: 304: if (!SSP1STATbits.D_nA)
  4193  0101  1A94               	btfsc	20,5	;volatile
  4194  0102  290C               	goto	i1l1778
  4195                           
  4196                           ;main.c: 305: {;main.c: 306: first_i2c = 1;
  4197  0103  3001               	movlw	1
  4198  0104  00F0               	movwf	??_isr
  4199  0105  0870               	movf	??_isr,w
  4200  0106  00FB               	movwf	_first_i2c	;volatile
  4201                           
  4202                           ;main.c: 307: junk = SSP1BUF;
  4203  0107  0811               	movf	17,w	;volatile
  4204  0108  00F0               	movwf	??_isr
  4205  0109  0870               	movf	??_isr,w
  4206  010A  00F9               	movwf	isr@junk
  4207                           
  4208                           ;main.c: 308: SSP1CON1bits.CKP = 1;
  4209  010B  1615               	bsf	21,4	;volatile
  4210  010C                     i1l1778:	
  4211                           
  4212                           ;main.c: 309: };main.c: 310: if (SSP1STATbits.D_nA)
  4213  010C  1E94               	btfss	20,5	;volatile
  4214  010D  2938               	goto	i1l1802
  4215                           
  4216                           ;main.c: 311: {;main.c: 312: if (first_i2c) {
  4217  010E  087B               	movf	_first_i2c,w	;volatile
  4218  010F  1903               	btfsc	3,2
  4219  0110  2917               	goto	i1l1786
  4220                           
  4221                           ;main.c: 313: index_i2c = SSP1BUF;
  4222  0111  0811               	movf	17,w	;volatile
  4223  0112  00F0               	movwf	??_isr
  4224  0113  0870               	movf	??_isr,w
  4225  0114  00FA               	movwf	_index_i2c	;volatile
  4226                           
  4227                           ;main.c: 314: first_i2c = 0;
  4228  0115  01FB               	clrf	_first_i2c	;volatile
  4229                           
  4230                           ;main.c: 315: }
  4231  0116  2930               	goto	i1l1794
  4232  0117                     i1l1786:	
  4233                           
  4234                           ;main.c: 317: else {;main.c: 318: if (index_i2c < RX_ELMNTS)
  4235  0117  30FB               	movlw	251
  4236  0118  027A               	subwf	_index_i2c,w	;volatile
  4237  0119  1803               	skipnc
  4238  011A  292C               	goto	i1l1792
  4239                           
  4240                           ;main.c: 319: {;main.c: 320: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  4241  011B  087A               	movf	_index_i2c,w	;volatile
  4242  011C  3EF5               	addlw	245
  4243  011D  00F0               	movwf	??_isr
  4244  011E  01F1               	clrf	??_isr+1
  4245  011F  3022               	movlw	34
  4246  0120  3DF1               	addwfc	??_isr+1,f
  4247  0121  0870               	movf	??_isr,w
  4248  0122  0086               	movwf	6
  4249  0123  0871               	movf	??_isr+1,w
  4250  0124  0087               	movwf	7
  4251  0125  0811               	movf	17,w	;volatile
  4252  0126  0081               	movwf	1
  4253  0127  3001               	movlw	1
  4254  0128  00F0               	movwf	??_isr
  4255  0129  0870               	movf	??_isr,w
  4256  012A  07FA               	addwf	_index_i2c,f	;volatile
  4257                           
  4258                           ;main.c: 321: } else {
  4259  012B  2930               	goto	i1l1794
  4260  012C                     i1l1792:	
  4261                           
  4262                           ;main.c: 322: junk = SSP1BUF;
  4263  012C  0811               	movf	17,w	;volatile
  4264  012D  00F0               	movwf	??_isr
  4265  012E  0870               	movf	??_isr,w
  4266  012F  00F9               	movwf	isr@junk
  4267  0130                     i1l1794:	
  4268                           
  4269                           ;main.c: 323: };main.c: 324: };main.c: 325: if (SSP1CON1bits.WCOL)
  4270  0130  1F95               	btfss	21,7	;volatile
  4271  0131  2937               	goto	i1l1800
  4272                           
  4273                           ;main.c: 326: {;main.c: 327: SSP1CON1bits.WCOL = 0;
  4274  0132  1395               	bcf	21,7	;volatile
  4275                           
  4276                           ;main.c: 328: junk = SSP1BUF;
  4277  0133  0811               	movf	17,w	;volatile
  4278  0134  00F0               	movwf	??_isr
  4279  0135  0870               	movf	??_isr,w
  4280  0136  00F9               	movwf	isr@junk
  4281  0137                     i1l1800:	
  4282                           
  4283                           ;main.c: 329: };main.c: 330: SSP1CON1bits.CKP = 1;
  4284  0137  1615               	bsf	21,4	;volatile
  4285  0138                     i1l1802:	
  4286                           
  4287                           ;main.c: 331: };main.c: 332: };main.c: 333: PIR1bits.SSP1IF = 0;
  4288  0138  0020               	movlb	0	; select bank0
  4289  0139  1191               	bcf	17,3	;volatile
  4290                           
  4291                           ;main.c: 334: INTCONbits.IOCIE = 1;
  4292  013A  158B               	bsf	11,3	;volatile
  4293                           
  4294                           ;main.c: 335: PIE1bits.TMR1IE = 1;
  4295  013B  0021               	movlb	1	; select bank1
  4296  013C  1411               	bsf	17,0	;volatile
  4297  013D                     i1l1808:	
  4298                           
  4299                           ;main.c: 336: };main.c: 338: if (PIR2bits.BCL1IF)
  4300  013D  0020               	movlb	0	; select bank0
  4301  013E  1D92               	btfss	18,3	;volatile
  4302  013F  294B               	goto	i1l154
  4303                           
  4304                           ;main.c: 339: {;main.c: 340: junk = SSP1BUF;
  4305  0140  0024               	movlb	4	; select bank4
  4306  0141  0811               	movf	17,w	;volatile
  4307  0142  00F0               	movwf	??_isr
  4308  0143  0870               	movf	??_isr,w
  4309  0144  00F9               	movwf	isr@junk
  4310                           
  4311                           ;main.c: 341: PIR2bits.BCL1IF = 0;
  4312  0145  0020               	movlb	0	; select bank0
  4313  0146  1192               	bcf	18,3	;volatile
  4314                           
  4315                           ;main.c: 342: SSP1CON1bits.CKP = 1;
  4316  0147  0024               	movlb	4	; select bank4
  4317  0148  1615               	bsf	21,4	;volatile
  4318                           
  4319                           ;main.c: 343: PIR1bits.SSP1IF = 0;
  4320  0149  0020               	movlb	0	; select bank0
  4321  014A  1191               	bcf	17,3	;volatile
  4322  014B                     i1l154:	
  4323  014B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4324  014C  0009               	retfie
  4325  014D                     __end_of_isr:	
  4326  007E                     btemp	set	126	;btemp
  4327  007E                     int$flags	set	126
  4328  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        1
    BSS         12
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     71      79
    BANK1            80      4       6
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            37      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init_I2C_buffer
    _map->___lldiv
    _map->___lwdiv
    ___lldiv->___lmul
    _init_I2C_buffer->_eeprom_read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _map->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    14      4    5959
                                             57 BANK0     14    10      4
                                              0 BANK1      4     4      0
                           _ADC_read
                            ___lwdiv
                       _eeprom_write
                    _init_I2C_buffer
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    2754
                                             21 BANK0     36    16     20
                            ___lldiv
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     316
                                              2 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              6 COMMON     1     1      0
                                              8 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      7     7      0     551
                                              6 COMMON     3     3      0
                                              0 BANK0      4     4      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         4     3      1     422
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4    1681
                                              2 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2      31
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
   ___lwdiv
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read
   _map
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4       6       7        7.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      61      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               25      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      61      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 22:39:52 2020

             __CFG_CP$OFF 0000                       l106 0EF9                       l202 04C3  
                     l204 04CF                       l206 04DA                       l208 04E5  
                     l182 02FE                       l174 0274                       l191 040D  
                     l159 01AA                       l184 0384                       l176 02FB  
                     l196 0410                       l189 0387                       l374 07E8  
                     l198 0496                       l394 0F02              __CFG_CPD$OFF 0000  
                     _map 0FA2                       _isr 0004              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_LVP$OFF 0000                      l2100 0F8E  
                    l2104 0F99                      l2072 0F29                      l2242 07D7  
                    l2234 07B9                      l2170 074F                      l2090 0F60  
                    l2236 07C5                      l2156 072E                      l2092 0F6E  
                    l2076 0F33                      l2324 01BD                      l2246 07E0  
                    l2406 0329                      l2184 0771                      l2424 03B2  
                    l2360 0213                      l2336 01D9                      l2450 0498  
                    l2442 043B                      l2370 023E                      l2348 01F6  
                    l2198 0793                      l2470 04DB                      l2462 04C5  
                    l2454 049F                      l2456 04B2                      l2482 0517  
                    l2474 04E6                      l2466 04D0                      l2458 04B8  
                    l2388 02A0                      l2486 056D                      l2488 06C6  
                    ?_map 0035                      ?_isr 0070              __CFG_WDTE$ON 0000  
                    u2105 02C8                      u2115 02F1                      u2205 03DA  
                    _LATA 010C                      _LATB 010D                      u2215 0403  
                    u2155 0351                      u2165 037A                      u2407 0EF2  
                    u2255 0463                      u2265 048C                      u1731 07E7  
                    u2357 0239                      u1815 0F6F                      u2367 028A  
                    u1825 0F83                      u2377 0314                      u1835 0F8F  
                    u1755 0F34                      u2387 039D                      u1765 0F3B  
                    u2397 0426                      u1855 0EE7                      u1955 07BC  
                    u1795 0F63                      u1975 07C6                      u1985 07D0  
                    u1995 07D8                      _WPUA 020C                      _WPUB 020D  
          ??_eeprom_write 0073              __CFG_WRT$OFF 0000                      _main 016E  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    map@x 0035                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 014D          __end_of_ADC_read 0F01             __CFG_IESO$OFF 0000  
           __CFG_MCLRE$ON 0000                     ??_map 0049                     ??_isr 0070  
           __CFG_PLLEN$ON 0000                     ?_main 0059                     _EEADR 0191  
         __end_of___lldiv 0FA2                     _T1CON 0018                     _IOCBF 0396  
                   _IOCBN 0395           __end_of___lwdiv 07E5                     i1l136 00CC  
                   i1l154 014B                     i1l138 00D9                     _TRISA 008C  
                   _TRISB 008D       ___lmul@multiplicand 0024             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000                     main@i 00A0                     status 0003  
                   wtemp0 007E           __initialization 014F              __end_of_main 06D2  
                  ??_main 005D                    _ADCON0 009D                    _ADCON1 009E  
                  _ADRESH 009C                    _ADRESL 009B                    _EEDATA 0193  
                  _EECON1 0195                    _EECON2 0196                    _ANSELA 018C  
                  _ANSELB 018D                    i1l1710 0066                    i1l1800 0137  
                  i1l1802 0138                    i1l1722 0088                    i1l1734 00AA  
                  i1l1808 013D                    i1l1762 00F0                    i1l1770 00FF  
                  i1l1690 0040                    i1l1748 00CF                    i1l1694 0042  
                  i1l1792 012C                    i1l1688 0030                    i1l1794 0130  
                  i1l1786 0117                    i1l1778 010C                    _INTCON 000B  
                  _OSCCON 0099      __size_of_eeprom_read 0015                    ___lmul 0F21  
          __CFG_STVREN$ON 0000                 ??___lldiv 0076                 ??___lwdiv 0076  
    __end_of_eeprom_write 0F21                    _stock1 006B                    _stock2 0069  
                  _stock3 0067                    _stock4 00A4  __size_of_init_I2C_buffer 00DE  
            __pdataCOMMON 007B                 ?_ADC_read 0072         __end_of_RX_ELMNTS 1001  
 __end_of__initialization 016A           eeprom_read@addr 0075            __pcstackCOMMON 0070  
    init_I2C_buffer@i_663 0021      init_I2C_buffer@i_664 0022      init_I2C_buffer@i_665 0023  
          _OPTION_REGbits 0095           ADC_read@channel 0075                ??_ADC_read 0074  
       eeprom_write@value 0072                __pbssBANK0 0067                __pbssBANK1 00A4  
              __pmaintext 016E                   ?___lmul 0020                __pintentry 0004  
          ___lmul@product 0072                   _SSP1ADD 0212                   _SSP1BUF 0211  
       ??_init_I2C_buffer 0076     __size_of_eeprom_write 0020           __size_of___lmul 002F  
                 ___lldiv 0F50                   ___lwdiv 07B0                   __ptext1 0FA2  
                 __ptext2 0F21                   __ptext3 0F50                   __ptext4 06D2  
                 __ptext5 07E5                   __ptext6 0F01                   __ptext7 07B0  
                 __ptext8 0EE3                   _average 006E                   _readADC 006D  
               _T1CONbits 0018              __size_of_map 005E              __size_of_isr 0149  
               _IOCBFbits 0396                   clrloop0 0ED8      end_of_initialization 016A  
                 isr@junk 0079              _eeprom_write 0F01           ___lldiv@divisor 0028  
         ___lldiv@counter 0034                 _PORTBbits 000D          __CFG_FOSC$INTOSC 0000  
       __size_of_ADC_read 001E                map@out_max 0045                map@out_min 0041  
               _RX_ELMNTS 1000             ??_eeprom_read 0072            __end_of___lmul 0F50  
           __pidataCOMMON 07FA       start_initialization 014F               __end_of_map 1000  
             __end_of_isr 014D                  ??___lmul 0072       __end_of_eeprom_read 07FA  
         _init_I2C_buffer 06D2               __pbssBIGRAM 22F5               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
        init_I2C_buffer@i 0020          eeprom_write@addr 0075          ___lwdiv@dividend 0074  
                ?___lldiv 0028                  ?___lwdiv 0072                 _first_i2c 007B  
               _index_i2c 007A                  _ADC_read 0EE3          ___lwdiv@quotient 0021  
                _LATAbits 010C                  _LATBbits 010D                 clear_ram0 0ED7  
             _eeprom_read 07E5                  _PIE1bits 0091                  _PIE2bits 0092  
                _PIR1bits 0011                  _PIR2bits 0012   __end_of_init_I2C_buffer 07B0  
                _SSP1CON1 0215                  _SSP1STAT 0214                 map@in_max 003D  
               map@in_min 0039                _ADCON0bits 009D                 main@i_845 00A1  
               main@i_846 00A2                 main@i_847 00A3         ___lmul@multiplier 0020  
              _I2C_buffer 22F5                _EECON1bits 0195          __size_of___lldiv 0052  
        __size_of___lwdiv 0035           ___lwdiv@divisor 0072           ___lwdiv@counter 0020  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216              _SSP1CON3bits 0217  
           __size_of_main 0564          ?_init_I2C_buffer 0070                  int$flags 007E  
                main@argc 0059                  main@argv 005B              _SSP1STATbits 0214  
              _INTCONbits 000B                  intlevel1 0000          ___lldiv@dividend 002C  
       __CFG_CLKOUTEN$OFF 0000             __pstringtext1 1000          ___lldiv@quotient 0030  
           ?_eeprom_write 0072                _STATUSbits 0003              ?_eeprom_read 0070  
