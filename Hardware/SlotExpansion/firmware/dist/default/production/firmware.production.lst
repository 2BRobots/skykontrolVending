

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 23:42:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1847
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x620,48
    25                           	dabs	1,0x5A0,80
    26                           	dabs	1,0x520,80
    27                           	dabs	1,0x4C5,43
    28                           	dabs	1,0x22F5,0,_I2C_buffer
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1847 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0219                     	;# 
   166  021A                     	;# 
   167  021B                     	;# 
   168  021C                     	;# 
   169  021D                     	;# 
   170  021E                     	;# 
   171  021F                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0294                     	;# 
   177  0295                     	;# 
   178  0295                     	;# 
   179  0296                     	;# 
   180  0298                     	;# 
   181  0298                     	;# 
   182  0299                     	;# 
   183  029A                     	;# 
   184  029B                     	;# 
   185  029C                     	;# 
   186  029C                     	;# 
   187  029D                     	;# 
   188  029E                     	;# 
   189  029E                     	;# 
   190  0311                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223                           
   224                           	psect	eeprom_data
   225  0000  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   226  0008  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   227  0010  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   228  0018  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   229  0020  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   230  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   231  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   232  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   233  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   234  0048  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   235  0050  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   236  0058  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   237  0060  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   238  0068  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   239  0070  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   240  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   241  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   242  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   243  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   244  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   245  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   246  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   247  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   248  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   249  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   250  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   251  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   252  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  0111                     	;# 
   302  0112                     	;# 
   303  0113                     	;# 
   304  0114                     	;# 
   305  0115                     	;# 
   306  0116                     	;# 
   307  0117                     	;# 
   308  0118                     	;# 
   309  0119                     	;# 
   310  011A                     	;# 
   311  011B                     	;# 
   312  011D                     	;# 
   313  011E                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0191                     	;# 
   317  0191                     	;# 
   318  0192                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0193                     	;# 
   322  0194                     	;# 
   323  0195                     	;# 
   324  0196                     	;# 
   325  0199                     	;# 
   326  019A                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019C                     	;# 
   332  019C                     	;# 
   333  019D                     	;# 
   334  019E                     	;# 
   335  019F                     	;# 
   336  020C                     	;# 
   337  020D                     	;# 
   338  0211                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0212                     	;# 
   342  0213                     	;# 
   343  0213                     	;# 
   344  0214                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0216                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0217                     	;# 
   353  0219                     	;# 
   354  021A                     	;# 
   355  021B                     	;# 
   356  021C                     	;# 
   357  021D                     	;# 
   358  021E                     	;# 
   359  021F                     	;# 
   360  0291                     	;# 
   361  0291                     	;# 
   362  0292                     	;# 
   363  0293                     	;# 
   364  0294                     	;# 
   365  0295                     	;# 
   366  0295                     	;# 
   367  0296                     	;# 
   368  0298                     	;# 
   369  0298                     	;# 
   370  0299                     	;# 
   371  029A                     	;# 
   372  029B                     	;# 
   373  029C                     	;# 
   374  029C                     	;# 
   375  029D                     	;# 
   376  029E                     	;# 
   377  029E                     	;# 
   378  0311                     	;# 
   379  0311                     	;# 
   380  0312                     	;# 
   381  0313                     	;# 
   382  0318                     	;# 
   383  0318                     	;# 
   384  0319                     	;# 
   385  031A                     	;# 
   386  0394                     	;# 
   387  0395                     	;# 
   388  0396                     	;# 
   389  039A                     	;# 
   390  039C                     	;# 
   391  039D                     	;# 
   392  039E                     	;# 
   393  039F                     	;# 
   394  0415                     	;# 
   395  0416                     	;# 
   396  0417                     	;# 
   397  041C                     	;# 
   398  041D                     	;# 
   399  041E                     	;# 
   400  0FE4                     	;# 
   401  0FE5                     	;# 
   402  0FE6                     	;# 
   403  0FE7                     	;# 
   404  0FE8                     	;# 
   405  0FE9                     	;# 
   406  0FEA                     	;# 
   407  0FEB                     	;# 
   408  0FED                     	;# 
   409  0FEE                     	;# 
   410  0FEF                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  0007                     	;# 
   419  0008                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  008C                     	;# 
   441  008D                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  0111                     	;# 
   460  0112                     	;# 
   461  0113                     	;# 
   462  0114                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011E                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0191                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0194                     	;# 
   481  0195                     	;# 
   482  0196                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  020C                     	;# 
   495  020D                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0216                     	;# 
   509  0217                     	;# 
   510  0217                     	;# 
   511  0219                     	;# 
   512  021A                     	;# 
   513  021B                     	;# 
   514  021C                     	;# 
   515  021D                     	;# 
   516  021E                     	;# 
   517  021F                     	;# 
   518  0291                     	;# 
   519  0291                     	;# 
   520  0292                     	;# 
   521  0293                     	;# 
   522  0294                     	;# 
   523  0295                     	;# 
   524  0295                     	;# 
   525  0296                     	;# 
   526  0298                     	;# 
   527  0298                     	;# 
   528  0299                     	;# 
   529  029A                     	;# 
   530  029B                     	;# 
   531  029C                     	;# 
   532  029C                     	;# 
   533  029D                     	;# 
   534  029E                     	;# 
   535  029E                     	;# 
   536  0311                     	;# 
   537  0311                     	;# 
   538  0312                     	;# 
   539  0313                     	;# 
   540  0318                     	;# 
   541  0318                     	;# 
   542  0319                     	;# 
   543  031A                     	;# 
   544  0394                     	;# 
   545  0395                     	;# 
   546  0396                     	;# 
   547  039A                     	;# 
   548  039C                     	;# 
   549  039D                     	;# 
   550  039E                     	;# 
   551  039F                     	;# 
   552  0415                     	;# 
   553  0416                     	;# 
   554  0417                     	;# 
   555  041C                     	;# 
   556  041D                     	;# 
   557  041E                     	;# 
   558  0FE4                     	;# 
   559  0FE5                     	;# 
   560  0FE6                     	;# 
   561  0FE7                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0093                     	;# 
   603  0094                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0097                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0113                     	;# 
   620  0114                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0117                     	;# 
   624  0118                     	;# 
   625  0119                     	;# 
   626  011A                     	;# 
   627  011B                     	;# 
   628  011D                     	;# 
   629  011E                     	;# 
   630  018C                     	;# 
   631  018D                     	;# 
   632  0191                     	;# 
   633  0191                     	;# 
   634  0192                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0194                     	;# 
   639  0195                     	;# 
   640  0196                     	;# 
   641  0199                     	;# 
   642  019A                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019C                     	;# 
   649  019D                     	;# 
   650  019E                     	;# 
   651  019F                     	;# 
   652  020C                     	;# 
   653  020D                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0216                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0217                     	;# 
   669  0219                     	;# 
   670  021A                     	;# 
   671  021B                     	;# 
   672  021C                     	;# 
   673  021D                     	;# 
   674  021E                     	;# 
   675  021F                     	;# 
   676  0291                     	;# 
   677  0291                     	;# 
   678  0292                     	;# 
   679  0293                     	;# 
   680  0294                     	;# 
   681  0295                     	;# 
   682  0295                     	;# 
   683  0296                     	;# 
   684  0298                     	;# 
   685  0298                     	;# 
   686  0299                     	;# 
   687  029A                     	;# 
   688  029B                     	;# 
   689  029C                     	;# 
   690  029C                     	;# 
   691  029D                     	;# 
   692  029E                     	;# 
   693  029E                     	;# 
   694  0311                     	;# 
   695  0311                     	;# 
   696  0312                     	;# 
   697  0313                     	;# 
   698  0318                     	;# 
   699  0318                     	;# 
   700  0319                     	;# 
   701  031A                     	;# 
   702  0394                     	;# 
   703  0395                     	;# 
   704  0396                     	;# 
   705  039A                     	;# 
   706  039C                     	;# 
   707  039D                     	;# 
   708  039E                     	;# 
   709  039F                     	;# 
   710  0415                     	;# 
   711  0416                     	;# 
   712  0417                     	;# 
   713  041C                     	;# 
   714  041D                     	;# 
   715  041E                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;_I2C_buffer
   727                           
   728                           	psect	idataBANK0
   729  07FE                     __pidataBANK0:	
   730                           
   731                           ;initializer for _first_i2c
   732  07FE  3401               	retlw	1
   733                           
   734                           	psect	stringtext1
   735  1000                     __pstringtext1:	
   736  1000                     _RX_ELMNTS:	
   737  1000  34FB               	retlw	251
   738  1001                     __end_of_RX_ELMNTS:	
   739  0003                     _STATUSbits	set	3
   740  0018                     _T1CON	set	24
   741  000B                     _INTCON	set	11
   742  000D                     _PORTB	set	13
   743  000C                     _PORTA	set	12
   744  0012                     _PIR2bits	set	18
   745  0018                     _T1CONbits	set	24
   746  0011                     _PIR1bits	set	17
   747  000B                     _INTCONbits	set	11
   748  0092                     _PIE2bits	set	146
   749  008D                     _TRISB	set	141
   750  008C                     _TRISA	set	140
   751  0095                     _OPTION_REGbits	set	149
   752  0099                     _OSCCON	set	153
   753  0091                     _PIE1bits	set	145
   754  009B                     _ADRESL	set	155
   755  009C                     _ADRESH	set	156
   756  009D                     _ADCON0bits	set	157
   757  009D                     _ADCON0	set	157
   758  010D                     _LATBbits	set	269
   759  010C                     _LATAbits	set	268
   760  0191                     _EEADR	set	401
   761  0196                     _EECON2	set	406
   762  0193                     _EEDATA	set	403
   763  0195                     _EECON1	set	405
   764  0195                     _EECON1bits	set	405
   765  018D                     _ANSELB	set	397
   766  018C                     _ANSELA	set	396
   767  0212                     _SSP1ADD	set	530
   768  0217                     _SSP1CON3bits	set	535
   769  0216                     _SSP1CON2bits	set	534
   770  0215                     _SSP1CON1	set	533
   771  0214                     _SSP1STAT	set	532
   772  020D                     _WPUB	set	525
   773  020C                     _WPUA	set	524
   774  0215                     _SSP1CON1bits	set	533
   775  0211                     _SSP1BUF	set	529
   776  0214                     _SSP1STATbits	set	532
   777  0395                     _IOCBN	set	917
   778  0396                     _IOCBF	set	918
   779  0396                     _IOCBFbits	set	918
   780                           
   781                           ; #config settings
   782  0000                     
   783                           	psect	cinit
   784  031B                     start_initialization:	
   785  031B                     __initialization:		;BIGRAM
   786                           
   787                           ; Initialize objects allocated to BANK0
   788  031B  3187  27FE  3183   	fcall	__pidataBANK0	;fetch initializer
   789  031E  00E6               	movwf	__pdataBANK0& (0+127)
   790                           
   791                           ; Clear objects allocated to BIGRAM
   792  031F  30F5               	movlw	low (0+8949)
   793  0320  0084               	movwf	4
   794  0321  3022               	movlw	high (0+8949)
   795  0322  0085               	movwf	5
   796  0323  30FB               	movlw	251
   797  0324  00FE               	movwf	btemp
   798  0325  3000               	movlw	0
   799  0326  00FF               	movwf	btemp+1
   800  0327  318F  2706  3183   	fcall	clear_ram0
   801                           
   802                           ; Clear objects allocated to BANK0
   803  032A  305B               	movlw	low __pbssBANK0
   804  032B  0084               	movwf	4
   805  032C  3000               	movlw	high __pbssBANK0
   806  032D  0085               	movwf	5
   807  032E  300B               	movlw	11
   808  032F  00FE               	movwf	btemp
   809  0330  3000               	movlw	0
   810  0331  00FF               	movwf	btemp+1
   811  0332  318F  2706         	fcall	clear_ram0
   812  0334                     end_of_initialization:	
   813                           ;End of C runtime variable initialization code
   814                           
   815  0334                     __end_of__initialization:	
   816  0334  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   817  0335  0020               	movlb	0
   818  0336  3183  2B38         	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssBANK0
   821  005B                     __pbssBANK0:	
   822  005B                     _stock4:	
   823  005B                     	ds	2
   824  005D                     _stock3:	
   825  005D                     	ds	2
   826  005F                     _stock2:	
   827  005F                     	ds	2
   828  0061                     _stock1:	
   829  0061                     	ds	2
   830  0063                     isr@junk:	
   831  0063                     	ds	1
   832  0064                     _average:	
   833  0064                     	ds	1
   834  0065                     _index_i2c:	
   835  0065                     	ds	1
   836                           
   837                           	psect	dataBANK0
   838  0066                     __pdataBANK0:	
   839  0066                     _first_i2c:	
   840  0066                     	ds	1
   841                           
   842                           	psect	clrtext
   843  0F06                     clear_ram0:	
   844                           ;	Called with FSR0 containing the base address, and
   845                           ;	btemp/btemp+1 has the size to clear
   846                           
   847  0F06  0064               	clrwdt	;clear the watchdog before getting into this loop
   848  0F07                     clrloop0:	
   849  0F07  0180               	clrf	0	;clear RAM location pointed to by FSR
   850  0F08  3101               	addfsr 0,1
   851  0F09  3001               	movlw	1
   852  0F0A  02FE               	subwf	126,f
   853  0F0B  3000               	movlw	0
   854  0F0C  3BFF               	subwfb	127,f
   855  0F0D  087F               	movf	127,w
   856  0F0E  047E               	iorwf	126,w
   857  0F0F  1903               	btfsc	3,2
   858  0F10  3400               	retlw	0	;all done for this memory range, return
   859  0F11  2F07               	goto	clrloop0	;have we reached the end yet?
   860                           
   861                           	psect	cstackBANK1
   862  00A0                     __pcstackBANK1:	
   863  00A0                     ??_eeprom_read:	
   864  00A0                     ?_eeprom_write:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  00A0                     eeprom_write@value:	
   868                           ; 1 bytes @ 0x0
   869                           
   870                           
   871                           ; 1 bytes @ 0x0
   872  00A0                     	ds	1
   873  00A1                     ??_eeprom_write:	
   874                           
   875                           ; 1 bytes @ 0x1
   876  00A1                     	ds	2
   877  00A3                     eeprom_read@addr:	
   878  00A3                     eeprom_write@addr:	
   879                           ; 1 bytes @ 0x3
   880                           
   881                           
   882                           ; 1 bytes @ 0x3
   883  00A3                     	ds	1
   884  00A4                     ??_init_I2C_buffer:	
   885                           
   886                           ; 1 bytes @ 0x4
   887  00A4                     	ds	3
   888  00A7                     init_I2C_buffer@i:	
   889                           
   890                           ; 1 bytes @ 0x7
   891  00A7                     	ds	1
   892  00A8                     init_I2C_buffer@i_640:	
   893                           
   894                           ; 1 bytes @ 0x8
   895  00A8                     	ds	1
   896  00A9                     init_I2C_buffer@i_641:	
   897                           
   898                           ; 1 bytes @ 0x9
   899  00A9                     	ds	1
   900  00AA                     init_I2C_buffer@i_642:	
   901                           
   902                           ; 1 bytes @ 0xA
   903  00AA                     	ds	1
   904  00AB                     ?_main:	
   905  00AB                     main@argc:	
   906                           ; 2 bytes @ 0xB
   907                           
   908                           
   909                           ; 2 bytes @ 0xB
   910  00AB                     	ds	2
   911  00AD                     main@argv:	
   912                           
   913                           ; 2 bytes @ 0xD
   914  00AD                     	ds	2
   915  00AF                     ??_main:	
   916                           
   917                           ; 1 bytes @ 0xF
   918  00AF                     	ds	8
   919  00B7                     main@i:	
   920                           
   921                           ; 1 bytes @ 0x17
   922  00B7                     	ds	1
   923  00B8                     main@i_816:	
   924                           
   925                           ; 1 bytes @ 0x18
   926  00B8                     	ds	1
   927  00B9                     main@i_817:	
   928                           
   929                           ; 1 bytes @ 0x19
   930  00B9                     	ds	1
   931  00BA                     main@i_818:	
   932                           
   933                           ; 1 bytes @ 0x1A
   934  00BA                     	ds	1
   935                           
   936                           	psect	cstackCOMMON
   937  0070                     __pcstackCOMMON:	
   938  0070                     ?_eeprom_read:	
   939  0070                     ?_init_I2C_buffer:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_isr:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_ADC_read:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?___lwdiv:	
   949                           ; 2 bytes @ 0x0
   950                           
   951  0070                     ?___lmul:	
   952                           ; 2 bytes @ 0x0
   953                           
   954  0070                     ___lwdiv@divisor:	
   955                           ; 4 bytes @ 0x0
   956                           
   957  0070                     ___lmul@multiplier:	
   958                           ; 2 bytes @ 0x0
   959                           
   960                           
   961                           ; 4 bytes @ 0x0
   962  0070                     	ds	2
   963  0072                     ??_ADC_read:	
   964  0072                     ___lwdiv@dividend:	
   965                           ; 1 bytes @ 0x2
   966                           
   967                           
   968                           ; 2 bytes @ 0x2
   969  0072                     	ds	1
   970  0073                     ADC_read@channel:	
   971                           
   972                           ; 1 bytes @ 0x3
   973  0073                     	ds	1
   974  0074                     ??___lwdiv:	
   975  0074                     ___lmul@multiplicand:	
   976                           ; 1 bytes @ 0x4
   977                           
   978                           
   979                           ; 4 bytes @ 0x4
   980  0074                     	ds	1
   981  0075                     ___lwdiv@quotient:	
   982                           
   983                           ; 2 bytes @ 0x5
   984  0075                     	ds	2
   985  0077                     ___lwdiv@counter:	
   986                           
   987                           ; 1 bytes @ 0x7
   988  0077                     	ds	1
   989  0078                     ??___lmul:	
   990  0078                     ___lmul@product:	
   991                           ; 1 bytes @ 0x8
   992                           
   993                           
   994                           ; 4 bytes @ 0x8
   995  0078                     	ds	4
   996  007C                     ??___lldiv:	
   997                           
   998                           ; 1 bytes @ 0xC
   999  007C                     	ds	1
  1000                           
  1001                           	psect	cstackBANK0
  1002  0020                     __pcstackBANK0:	
  1003  0020                     ?___lldiv:	
  1004  0020                     ___lldiv@divisor:	
  1005                           ; 4 bytes @ 0x0
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x0
  1009  0020                     	ds	4
  1010  0024                     ___lldiv@dividend:	
  1011                           
  1012                           ; 4 bytes @ 0x4
  1013  0024                     	ds	4
  1014  0028                     ___lldiv@quotient:	
  1015                           
  1016                           ; 4 bytes @ 0x8
  1017  0028                     	ds	4
  1018  002C                     ___lldiv@counter:	
  1019                           
  1020                           ; 1 bytes @ 0xC
  1021  002C                     	ds	1
  1022  002D                     ?_map:	
  1023  002D                     map@x:	
  1024                           ; 4 bytes @ 0xD
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0xD
  1028  002D                     	ds	4
  1029  0031                     map@in_min:	
  1030                           
  1031                           ; 4 bytes @ 0x11
  1032  0031                     	ds	4
  1033  0035                     map@in_max:	
  1034                           
  1035                           ; 4 bytes @ 0x15
  1036  0035                     	ds	4
  1037  0039                     map@out_min:	
  1038                           
  1039                           ; 4 bytes @ 0x19
  1040  0039                     	ds	4
  1041  003D                     map@out_max:	
  1042                           
  1043                           ; 4 bytes @ 0x1D
  1044  003D                     	ds	4
  1045  0041                     ??_map:	
  1046                           
  1047                           ; 1 bytes @ 0x21
  1048  0041                     	ds	16
  1049  0051                     ??_isr:	
  1050                           
  1051                           ; 1 bytes @ 0x31
  1052  0051                     	ds	10
  1053                           
  1054                           	psect	maintext
  1055  0338                     __pmaintext:	
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 354 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  argc            2   11[BANK1 ] int 
  1064 ;;  argv            2   13[BANK1 ] PTR PTR unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  i               1   26[BANK1 ] unsigned char 
  1067 ;;  i               1   25[BANK1 ] unsigned char 
  1068 ;;  i               1   24[BANK1 ] unsigned char 
  1069 ;;  i               1   23[BANK1 ] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2   11[BANK1 ] int 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : B1F/0
  1076 ;;		On exit  : 1F/2
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1079 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1080 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1081 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1082 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1083 ;;Total ram usage:       16 bytes
  1084 ;; Hardware stack levels required when called:    5
  1085 ;; This function calls:
  1086 ;;		_eeprom_write
  1087 ;;		_init_I2C_buffer
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _main
  1095  0338                     _main:	
  1096                           
  1097                           ;main.c: 355: OSCCON = 0b11110000;
  1098                           
  1099                           ;incstack = 0
  1100                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1101  0338  30F0               	movlw	240
  1102  0339  0021               	movlb	1	; select bank1
  1103  033A  0099               	movwf	25	;volatile
  1104                           
  1105                           ;main.c: 356: init_I2C_buffer();
  1106  033B  3186  269B  3183   	fcall	_init_I2C_buffer
  1107                           
  1108                           ;main.c: 357: OPTION_REGbits.nWPUEN = 0;
  1109  033E  1395               	bcf	21,7	;volatile
  1110                           
  1111                           ;main.c: 358: TRISA = 0b00101111;
  1112  033F  302F               	movlw	47
  1113  0340  008C               	movwf	12	;volatile
  1114                           
  1115                           ;main.c: 359: ANSELA = 0b00001111;
  1116  0341  300F               	movlw	15
  1117  0342  0023               	movlb	3	; select bank3
  1118  0343  008C               	movwf	12	;volatile
  1119                           
  1120                           ;main.c: 360: TRISB = 0b11011111;
  1121  0344  30DF               	movlw	223
  1122  0345  0021               	movlb	1	; select bank1
  1123  0346  008D               	movwf	13	;volatile
  1124                           
  1125                           ;main.c: 361: ANSELB = 0b00000000;
  1126  0347  0023               	movlb	3	; select bank3
  1127  0348  018D               	clrf	13	;volatile
  1128                           
  1129                           ;main.c: 362: WPUA = 0b00000000;
  1130  0349  0024               	movlb	4	; select bank4
  1131  034A  018C               	clrf	12	;volatile
  1132                           
  1133                           ;main.c: 363: WPUB = 0b00000000;
  1134  034B  018D               	clrf	13	;volatile
  1135                           
  1136                           ;main.c: 364: PORTA = 0b00000000;
  1137  034C  0020               	movlb	0	; select bank0
  1138  034D  018C               	clrf	12	;volatile
  1139                           
  1140                           ;main.c: 365: PORTB = 0b00000000;
  1141  034E  018D               	clrf	13	;volatile
  1142                           
  1143                           ;main.c: 366: SSP1STAT = 0b10000000;
  1144  034F  3080               	movlw	128
  1145  0350  0024               	movlb	4	; select bank4
  1146  0351  0094               	movwf	20	;volatile
  1147                           
  1148                           ;main.c: 367: SSP1CON1 = 0b00110110;
  1149  0352  3036               	movlw	54
  1150  0353  0095               	movwf	21	;volatile
  1151                           
  1152                           ;main.c: 368: SSP1CON2bits.SEN = 1;
  1153  0354  1416               	bsf	22,0	;volatile
  1154                           
  1155                           ;main.c: 369: SSP1CON3bits.BOEN = 1;
  1156  0355  1617               	bsf	23,4	;volatile
  1157                           
  1158                           ;main.c: 370: SSP1CON3bits.SDAHT = 1;
  1159  0356  1597               	bsf	23,3	;volatile
  1160                           
  1161                           ;main.c: 371: SSP1CON3bits.SBCDE = 1;
  1162  0357  1517               	bsf	23,2	;volatile
  1163                           
  1164                           ;main.c: 372: SSP1ADD = (char) (0x40 << 1);
  1165  0358  3080               	movlw	128
  1166  0359  0092               	movwf	18	;volatile
  1167                           
  1168                           ;main.c: 373: PIR1bits.SSP1IF = 0;
  1169  035A  0020               	movlb	0	; select bank0
  1170  035B  1191               	bcf	17,3	;volatile
  1171                           
  1172                           ;main.c: 374: PIR2bits.BCL1IF = 0;
  1173  035C  1192               	bcf	18,3	;volatile
  1174                           
  1175                           ;main.c: 375: PIE2bits.BCL1IE = 1;
  1176  035D  0021               	movlb	1	; select bank1
  1177  035E  1592               	bsf	18,3	;volatile
  1178                           
  1179                           ;main.c: 376: PIE1bits.SSP1IE = 1;
  1180  035F  1591               	bsf	17,3	;volatile
  1181                           
  1182                           ;main.c: 377: INTCONbits.PEIE = 1;
  1183  0360  170B               	bsf	11,6	;volatile
  1184                           
  1185                           ;main.c: 378: IOCBN = 0b11001100;
  1186  0361  30CC               	movlw	204
  1187  0362  0027               	movlb	7	; select bank7
  1188  0363  0095               	movwf	21	;volatile
  1189                           
  1190                           ;main.c: 379: INTCON = 0b01011000;
  1191  0364  3058               	movlw	88
  1192  0365  008B               	movwf	11	;volatile
  1193                           
  1194                           ;main.c: 380: T1CON = 0b00110100;
  1195  0366  3034               	movlw	52
  1196  0367  0020               	movlb	0	; select bank0
  1197  0368  0098               	movwf	24	;volatile
  1198                           
  1199                           ;main.c: 381: PIE1bits.TMR1IE = 1;
  1200  0369  0021               	movlb	1	; select bank1
  1201  036A  1411               	bsf	17,0	;volatile
  1202                           
  1203                           ;main.c: 382: T1CONbits.TMR1ON = 1;
  1204  036B  0020               	movlb	0	; select bank0
  1205  036C  1418               	bsf	24,0	;volatile
  1206                           
  1207                           ;main.c: 383: INTCONbits.GIE = 1;
  1208  036D  178B               	bsf	11,7	;volatile
  1209  036E                     l152:	
  1210                           ;main.c: 385: while (1) {
  1211                           
  1212  036E  0064               	clrwdt	;# 
  1213                           
  1214                           ;main.c: 387: if (I2C_buffer.data.RESET == 1) {
  1215  036F  30F5               	movlw	245
  1216  0370  0086               	movwf	6
  1217  0371  3022               	movlw	34
  1218  0372  0087               	movwf	7
  1219  0373  3141               	addfsr 1,1
  1220  0374  0301               	decf	1,w
  1221  0375  1903               	btfsc	3,2
  1222  0376  0001               	reset	;# 
  1223                           
  1224                           ;main.c: 389: };main.c: 391: if (I2C_buffer.data.SAVE == 1) {
  1225  0377  30F5               	movlw	245
  1226  0378  0086               	movwf	6
  1227  0379  3022               	movlw	34
  1228  037A  0087               	movwf	7
  1229  037B  3142               	addfsr 1,2
  1230  037C  0301               	decf	1,w
  1231  037D  1D03               	btfss	3,2
  1232  037E  2BF6               	goto	l1930
  1233                           
  1234                           ;main.c: 393: for (unsigned char i = 0; i < 57; i++)
  1235  037F  0021               	movlb	1	; select bank1
  1236  0380  01B7               	clrf	main@i^(0+128)
  1237  0381                     l1884:	
  1238                           
  1239                           ;main.c: 394: {;main.c: 395: eeprom_write(i, I2C_buffer.byte[(unsigned char) (0x14 + i)]
      +                          );
  1240  0381  0837               	movf	main@i^(0+128),w
  1241  0382  3E14               	addlw	20
  1242  0383  3EF5               	addlw	245
  1243  0384  0086               	movwf	6
  1244  0385  0187               	clrf	7
  1245  0386  3022               	movlw	34
  1246  0387  3D87               	addwfc	7,f
  1247  0388  0801               	movf	1,w
  1248  0389  00AF               	movwf	??_main^(0+128)
  1249  038A  082F               	movf	??_main^(0+128),w
  1250  038B  00A0               	movwf	eeprom_write@value^(0+128)
  1251  038C  0837               	movf	main@i^(0+128),w
  1252  038D  3187  27D6  3183   	fcall	_eeprom_write
  1253  0390  3001               	movlw	1
  1254  0391  0021               	movlb	1	; select bank1
  1255  0392  00AF               	movwf	??_main^(0+128)
  1256  0393  082F               	movf	??_main^(0+128),w
  1257  0394  07B7               	addwf	main@i^(0+128),f
  1258  0395  3039               	movlw	57
  1259  0396  0237               	subwf	main@i^(0+128),w
  1260  0397  1C03               	skipc
  1261  0398  2B81               	goto	l1884
  1262                           
  1263                           ;main.c: 396: };main.c: 397: for (unsigned char i = 0; i < 57; i++)
  1264  0399  01B8               	clrf	main@i_816^(0+128)
  1265  039A                     l1896:	
  1266                           
  1267                           ;main.c: 398: {;main.c: 399: eeprom_write((unsigned char) (57 + i), I2C_buffer.byte[(uns
      +                          igned char) (0x4E + i)]);
  1268  039A  0838               	movf	main@i_816^(0+128),w
  1269  039B  3E4E               	addlw	78
  1270  039C  3EF5               	addlw	245
  1271  039D  0086               	movwf	6
  1272  039E  0187               	clrf	7
  1273  039F  3022               	movlw	34
  1274  03A0  3D87               	addwfc	7,f
  1275  03A1  0801               	movf	1,w
  1276  03A2  00AF               	movwf	??_main^(0+128)
  1277  03A3  082F               	movf	??_main^(0+128),w
  1278  03A4  00A0               	movwf	eeprom_write@value^(0+128)
  1279  03A5  0838               	movf	main@i_816^(0+128),w
  1280  03A6  3E39               	addlw	57
  1281  03A7  3187  27D6  3183   	fcall	_eeprom_write
  1282  03AA  3001               	movlw	1
  1283  03AB  0021               	movlb	1	; select bank1
  1284  03AC  00AF               	movwf	??_main^(0+128)
  1285  03AD  082F               	movf	??_main^(0+128),w
  1286  03AE  07B8               	addwf	main@i_816^(0+128),f
  1287  03AF  3039               	movlw	57
  1288  03B0  0238               	subwf	main@i_816^(0+128),w
  1289  03B1  1C03               	skipc
  1290  03B2  2B9A               	goto	l1896
  1291                           
  1292                           ;main.c: 400: };main.c: 401: for (unsigned char i = 0; i < 57; i++)
  1293  03B3  01B9               	clrf	main@i_817^(0+128)
  1294  03B4                     l1908:	
  1295                           
  1296                           ;main.c: 402: {;main.c: 403: eeprom_write((unsigned char) (113 + i), I2C_buffer.byte[(un
      +                          signed char) (0x88 + i)]);
  1297  03B4  0839               	movf	main@i_817^(0+128),w
  1298  03B5  3E88               	addlw	136
  1299  03B6  3EF5               	addlw	245
  1300  03B7  0086               	movwf	6
  1301  03B8  0187               	clrf	7
  1302  03B9  3022               	movlw	34
  1303  03BA  3D87               	addwfc	7,f
  1304  03BB  0801               	movf	1,w
  1305  03BC  00AF               	movwf	??_main^(0+128)
  1306  03BD  082F               	movf	??_main^(0+128),w
  1307  03BE  00A0               	movwf	eeprom_write@value^(0+128)
  1308  03BF  0839               	movf	main@i_817^(0+128),w
  1309  03C0  3E71               	addlw	113
  1310  03C1  3187  27D6  3183   	fcall	_eeprom_write
  1311  03C4  3001               	movlw	1
  1312  03C5  0021               	movlb	1	; select bank1
  1313  03C6  00AF               	movwf	??_main^(0+128)
  1314  03C7  082F               	movf	??_main^(0+128),w
  1315  03C8  07B9               	addwf	main@i_817^(0+128),f
  1316  03C9  3039               	movlw	57
  1317  03CA  0239               	subwf	main@i_817^(0+128),w
  1318  03CB  1C03               	skipc
  1319  03CC  2BB4               	goto	l1908
  1320                           
  1321                           ;main.c: 404: };main.c: 405: for (unsigned char i = 0; i < 57; i++)
  1322  03CD  01BA               	clrf	main@i_818^(0+128)
  1323  03CE                     l1920:	
  1324                           
  1325                           ;main.c: 406: {;main.c: 407: eeprom_write((unsigned char) (167 + i), I2C_buffer.byte[(un
      +                          signed char) (0xC2 + i)]);
  1326  03CE  083A               	movf	main@i_818^(0+128),w
  1327  03CF  3EC2               	addlw	194
  1328  03D0  3EF5               	addlw	245
  1329  03D1  0086               	movwf	6
  1330  03D2  0187               	clrf	7
  1331  03D3  3022               	movlw	34
  1332  03D4  3D87               	addwfc	7,f
  1333  03D5  0801               	movf	1,w
  1334  03D6  00AF               	movwf	??_main^(0+128)
  1335  03D7  082F               	movf	??_main^(0+128),w
  1336  03D8  00A0               	movwf	eeprom_write@value^(0+128)
  1337  03D9  083A               	movf	main@i_818^(0+128),w
  1338  03DA  3EA7               	addlw	167
  1339  03DB  3187  27D6  3183   	fcall	_eeprom_write
  1340  03DE  3001               	movlw	1
  1341  03DF  0021               	movlb	1	; select bank1
  1342  03E0  00AF               	movwf	??_main^(0+128)
  1343  03E1  082F               	movf	??_main^(0+128),w
  1344  03E2  07BA               	addwf	main@i_818^(0+128),f
  1345  03E3  3039               	movlw	57
  1346  03E4  023A               	subwf	main@i_818^(0+128),w
  1347  03E5  1C03               	skipc
  1348  03E6  2BCE               	goto	l1920
  1349                           
  1350                           ;main.c: 408: };main.c: 409: I2C_buffer.data.SAVE = 0;
  1351  03E7  30F5               	movlw	245
  1352  03E8  0086               	movwf	6
  1353  03E9  3022               	movlw	34
  1354  03EA  0087               	movwf	7
  1355  03EB  3142               	addfsr 1,2
  1356  03EC  0181               	clrf	1
  1357                           
  1358                           ;main.c: 410: _delay((unsigned long)((10)*(32000000/4000.0)));
  1359  03ED  3068               	movlw	104
  1360  03EE  0021               	movlb	1	; select bank1
  1361  03EF  00AF               	movwf	??_main^(0+128)
  1362  03F0  30E4               	movlw	228
  1363  03F1                     u1617:	
  1364  03F1  0B89               	decfsz	9,f
  1365  03F2  2BF1               	goto	u1617
  1366  03F3  0BAF               	decfsz	??_main^(0+128),f
  1367  03F4  2BF1               	goto	u1617
  1368  03F5  0000               	nop
  1369  03F6                     l1930:	
  1370                           
  1371                           ;main.c: 411: };main.c: 413: if (I2C_buffer.data.dispense == 1) {
  1372  03F6  30F5               	movlw	245
  1373  03F7  0086               	movwf	6
  1374  03F8  3022               	movlw	34
  1375  03F9  0087               	movwf	7
  1376  03FA  3143               	addfsr 1,3
  1377  03FB  0301               	decf	1,w
  1378  03FC  1D03               	btfss	3,2
  1379  03FD  2E6C               	goto	l2018
  1380                           
  1381                           ;main.c: 414: I2C_buffer.data.time = 0;
  1382  03FE  30FF               	movlw	255
  1383  03FF  0086               	movwf	6
  1384  0400  3022               	movlw	34
  1385  0401  0087               	movwf	7
  1386  0402  3000               	movlw	0
  1387  0403  3FC0               	movwi [0]fsr1
  1388  0404  3FC1               	movwi [1]fsr1
  1389  0405  3FC2               	movwi [2]fsr1
  1390  0406  3FC3               	movwi [3]fsr1
  1391                           
  1392                           ;main.c: 415: I2C_buffer.data.counter = 0;
  1393  0407  30FB               	movlw	251
  1394  0408  0086               	movwf	6
  1395  0409  3022               	movlw	34
  1396  040A  0087               	movwf	7
  1397  040B  3000               	movlw	0
  1398  040C  3FC0               	movwi [0]fsr1
  1399  040D  3FC1               	movwi [1]fsr1
  1400  040E  3FC2               	movwi [2]fsr1
  1401  040F  3FC3               	movwi [3]fsr1
  1402                           
  1403                           ;main.c: 416: I2C_buffer.data.cancel = 0;
  1404  0410  30F5               	movlw	245
  1405  0411  0086               	movwf	6
  1406  0412  3022               	movlw	34
  1407  0413  0087               	movwf	7
  1408  0414  3145               	addfsr 1,5
  1409  0415  0181               	clrf	1
  1410                           
  1411                           ;main.c: 417: I2C_buffer.data.selected1 = 0;
  1412  0416  30F5               	movlw	245
  1413  0417  0086               	movwf	6
  1414  0418  3022               	movlw	34
  1415  0419  0087               	movwf	7
  1416  041A  3153               	addfsr 1,19
  1417  041B  0181               	clrf	1
  1418                           
  1419                           ;main.c: 418: I2C_buffer.data.selected2 = 0;
  1420  041C  3042               	movlw	66
  1421  041D  0086               	movwf	6
  1422  041E  3023               	movlw	35
  1423  041F  0087               	movwf	7
  1424  0420  0181               	clrf	1
  1425                           
  1426                           ;main.c: 419: I2C_buffer.data.selected3 = 0;
  1427  0421  307C               	movlw	124
  1428  0422  0086               	movwf	6
  1429  0423  3023               	movlw	35
  1430  0424  0087               	movwf	7
  1431  0425  0181               	clrf	1
  1432                           
  1433                           ;main.c: 420: I2C_buffer.data.selected4 = 0;
  1434  0426  30B6               	movlw	182
  1435  0427  0086               	movwf	6
  1436  0428  3023               	movlw	35
  1437  0429  0087               	movwf	7
  1438  042A  0181               	clrf	1
  1439                           
  1440                           ;main.c: 421: switch (I2C_buffer.data.selected) {
  1441  042B  2E53               	goto	l2014
  1442  042C                     l167:	
  1443                           
  1444                           ;main.c: 424: LATAbits.LATA4 = 1;
  1445  042C  0022               	movlb	2	; select bank2
  1446  042D  160C               	bsf	12,4	;volatile
  1447                           
  1448                           ;main.c: 425: I2C_buffer.data.time++;
  1449  042E  30F5               	movlw	245
  1450  042F  0086               	movwf	6
  1451  0430  3022               	movlw	34
  1452  0431  0087               	movwf	7
  1453  0432  314A               	addfsr 1,10
  1454  0433  3001               	movlw	1
  1455  0434  0781               	addwf	1,f
  1456  0435  3141               	addfsr 1,1
  1457  0436  3000               	movlw	0
  1458  0437  3D81               	addwfc	1,f
  1459  0438  3141               	addfsr 1,1
  1460  0439  3000               	movlw	0
  1461  043A  3D81               	addwfc	1,f
  1462  043B  3141               	addfsr 1,1
  1463  043C  3000               	movlw	0
  1464  043D  3D81               	addwfc	1,f
  1465                           
  1466                           ;main.c: 426: _delay((unsigned long)((1)*(32000000/4000.0)));
  1467  043E  300B               	movlw	11
  1468  043F  0021               	movlb	1	; select bank1
  1469  0440  00AF               	movwf	??_main^(0+128)
  1470  0441  3062               	movlw	98
  1471  0442                     u1627:	
  1472  0442  0B89               	decfsz	9,f
  1473  0443  2C42               	goto	u1627
  1474  0444  0BAF               	decfsz	??_main^(0+128),f
  1475  0445  2C42               	goto	u1627
  1476  0446  0000               	nop
  1477                           
  1478                           ;main.c: 427: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected1 == 1) brea
      +                          k;
  1479  0447  30F5               	movlw	245
  1480  0448  0086               	movwf	6
  1481  0449  3022               	movlw	34
  1482  044A  0087               	movwf	7
  1483  044B  314E               	addfsr 1,14
  1484  044C  0301               	decf	1,w
  1485  044D  1D03               	btfss	3,2
  1486  044E  2C57               	goto	l1948
  1487  044F  30F5               	movlw	245
  1488  0450  0086               	movwf	6
  1489  0451  3022               	movlw	34
  1490  0452  0087               	movwf	7
  1491  0453  3153               	addfsr 1,19
  1492  0454  0301               	decf	1,w
  1493  0455  1903               	btfsc	3,2
  1494  0456  2CB2               	goto	l169
  1495  0457                     l1948:	
  1496  0457  30F5               	movlw	245
  1497  0458  0086               	movwf	6
  1498  0459  3022               	movlw	34
  1499  045A  0087               	movwf	7
  1500  045B  314A               	addfsr 1,10
  1501  045C  3F40               	moviw [0]fsr1
  1502  045D  0021               	movlb	1	; select bank1
  1503  045E  00AF               	movwf	??_main^(0+128)
  1504  045F  3F41               	moviw [1]fsr1
  1505  0460  00B0               	movwf	(??_main^(0+128)+1)
  1506  0461  3F42               	moviw [2]fsr1
  1507  0462  00B1               	movwf	(??_main^(0+128)+2)
  1508  0463  3F43               	moviw [3]fsr1
  1509  0464  00B2               	movwf	(??_main^(0+128)+3)
  1510  0465  302E               	movlw	46
  1511  0466  0086               	movwf	6
  1512  0467  3023               	movlw	35
  1513  0468  0087               	movwf	7
  1514  0469  3F40               	moviw [0]fsr1
  1515  046A  00B3               	movwf	(??_main+4)^(0+128)
  1516  046B  3F41               	moviw [1]fsr1
  1517  046C  00B4               	movwf	((??_main+4)^(0+128)+1)
  1518  046D  3F42               	moviw [2]fsr1
  1519  046E  00B5               	movwf	((??_main+4)^(0+128)+2)
  1520  046F  3F43               	moviw [3]fsr1
  1521  0470  00B6               	movwf	((??_main+4)^(0+128)+3)
  1522  0471  0832               	movf	(??_main+3)^(0+128),w
  1523  0472  0236               	subwf	(??_main+7)^(0+128),w
  1524  0473  1D03               	skipz
  1525  0474  2C7F               	goto	u1395
  1526  0475  0831               	movf	(??_main+2)^(0+128),w
  1527  0476  0235               	subwf	(??_main+6)^(0+128),w
  1528  0477  1D03               	skipz
  1529  0478  2C7F               	goto	u1395
  1530  0479  0830               	movf	(??_main+1)^(0+128),w
  1531  047A  0234               	subwf	(??_main+5)^(0+128),w
  1532  047B  1D03               	skipz
  1533  047C  2C7F               	goto	u1395
  1534  047D  082F               	movf	??_main^(0+128),w
  1535  047E  0233               	subwf	(??_main+4)^(0+128),w
  1536  047F                     u1395:	
  1537  047F  1C03               	skipc
  1538  0480  2CB2               	goto	l169
  1539  0481  30F5               	movlw	245
  1540  0482  0086               	movwf	6
  1541  0483  3022               	movlw	34
  1542  0484  0087               	movwf	7
  1543  0485  3146               	addfsr 1,6
  1544  0486  3F40               	moviw [0]fsr1
  1545  0487  00AF               	movwf	??_main^(0+128)
  1546  0488  3F41               	moviw [1]fsr1
  1547  0489  00B0               	movwf	(??_main^(0+128)+1)
  1548  048A  3F42               	moviw [2]fsr1
  1549  048B  00B1               	movwf	(??_main^(0+128)+2)
  1550  048C  3F43               	moviw [3]fsr1
  1551  048D  00B2               	movwf	(??_main^(0+128)+3)
  1552  048E  3032               	movlw	50
  1553  048F  0086               	movwf	6
  1554  0490  3023               	movlw	35
  1555  0491  0087               	movwf	7
  1556  0492  3F40               	moviw [0]fsr1
  1557  0493  00B3               	movwf	(??_main+4)^(0+128)
  1558  0494  3F41               	moviw [1]fsr1
  1559  0495  00B4               	movwf	((??_main+4)^(0+128)+1)
  1560  0496  3F42               	moviw [2]fsr1
  1561  0497  00B5               	movwf	((??_main+4)^(0+128)+2)
  1562  0498  3F43               	moviw [3]fsr1
  1563  0499  00B6               	movwf	((??_main+4)^(0+128)+3)
  1564  049A  0832               	movf	(??_main+3)^(0+128),w
  1565  049B  0236               	subwf	(??_main+7)^(0+128),w
  1566  049C  1D03               	skipz
  1567  049D  2CA8               	goto	u1405
  1568  049E  0831               	movf	(??_main+2)^(0+128),w
  1569  049F  0235               	subwf	(??_main+6)^(0+128),w
  1570  04A0  1D03               	skipz
  1571  04A1  2CA8               	goto	u1405
  1572  04A2  0830               	movf	(??_main+1)^(0+128),w
  1573  04A3  0234               	subwf	(??_main+5)^(0+128),w
  1574  04A4  1D03               	skipz
  1575  04A5  2CA8               	goto	u1405
  1576  04A6  082F               	movf	??_main^(0+128),w
  1577  04A7  0233               	subwf	(??_main+4)^(0+128),w
  1578  04A8                     u1405:	
  1579  04A8  1C03               	skipc
  1580  04A9  2CB2               	goto	l169
  1581  04AA  30F5               	movlw	245
  1582  04AB  0086               	movwf	6
  1583  04AC  3022               	movlw	34
  1584  04AD  0087               	movwf	7
  1585  04AE  3143               	addfsr 1,3
  1586  04AF  0301               	decf	1,w
  1587  04B0  1903               	btfsc	3,2
  1588  04B1  2C2C               	goto	l167
  1589  04B2                     l169:	
  1590                           
  1591                           ;main.c: 428: };main.c: 429: LATAbits.LATA4 = 0;
  1592  04B2  0022               	movlb	2	; select bank2
  1593  04B3  120C               	bcf	12,4	;volatile
  1594  04B4  2E4C               	goto	l2010
  1595  04B5                     l175:	
  1596                           ;main.c: 431: break;
  1597                           
  1598                           ;main.c: 430: I2C_buffer.data.dispense = 0;
  1599                           
  1600                           
  1601                           ;main.c: 434: LATAbits.LATA6 = 1;
  1602  04B5  0022               	movlb	2	; select bank2
  1603  04B6  170C               	bsf	12,6	;volatile
  1604                           
  1605                           ;main.c: 435: I2C_buffer.data.time++;
  1606  04B7  30F5               	movlw	245
  1607  04B8  0086               	movwf	6
  1608  04B9  3022               	movlw	34
  1609  04BA  0087               	movwf	7
  1610  04BB  314A               	addfsr 1,10
  1611  04BC  3001               	movlw	1
  1612  04BD  0781               	addwf	1,f
  1613  04BE  3141               	addfsr 1,1
  1614  04BF  3000               	movlw	0
  1615  04C0  3D81               	addwfc	1,f
  1616  04C1  3141               	addfsr 1,1
  1617  04C2  3000               	movlw	0
  1618  04C3  3D81               	addwfc	1,f
  1619  04C4  3141               	addfsr 1,1
  1620  04C5  3000               	movlw	0
  1621  04C6  3D81               	addwfc	1,f
  1622                           
  1623                           ;main.c: 436: _delay((unsigned long)((1)*(32000000/4000.0)));
  1624  04C7  300B               	movlw	11
  1625  04C8  0021               	movlb	1	; select bank1
  1626  04C9  00AF               	movwf	??_main^(0+128)
  1627  04CA  3062               	movlw	98
  1628  04CB                     u1637:	
  1629  04CB  0B89               	decfsz	9,f
  1630  04CC  2CCB               	goto	u1637
  1631  04CD  0BAF               	decfsz	??_main^(0+128),f
  1632  04CE  2CCB               	goto	u1637
  1633  04CF  0000               	nop
  1634                           
  1635                           ;main.c: 437: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected2 == 1) brea
      +                          k;
  1636  04D0  30F5               	movlw	245
  1637  04D1  0086               	movwf	6
  1638  04D2  3022               	movlw	34
  1639  04D3  0087               	movwf	7
  1640  04D4  314E               	addfsr 1,14
  1641  04D5  0301               	decf	1,w
  1642  04D6  1D03               	btfss	3,2
  1643  04D7  2CDF               	goto	l1966
  1644  04D8  3042               	movlw	66
  1645  04D9  0086               	movwf	6
  1646  04DA  3023               	movlw	35
  1647  04DB  0087               	movwf	7
  1648  04DC  0301               	decf	1,w
  1649  04DD  1903               	btfsc	3,2
  1650  04DE  2D3A               	goto	l177
  1651  04DF                     l1966:	
  1652  04DF  30F5               	movlw	245
  1653  04E0  0086               	movwf	6
  1654  04E1  3022               	movlw	34
  1655  04E2  0087               	movwf	7
  1656  04E3  314A               	addfsr 1,10
  1657  04E4  3F40               	moviw [0]fsr1
  1658  04E5  0021               	movlb	1	; select bank1
  1659  04E6  00AF               	movwf	??_main^(0+128)
  1660  04E7  3F41               	moviw [1]fsr1
  1661  04E8  00B0               	movwf	(??_main^(0+128)+1)
  1662  04E9  3F42               	moviw [2]fsr1
  1663  04EA  00B1               	movwf	(??_main^(0+128)+2)
  1664  04EB  3F43               	moviw [3]fsr1
  1665  04EC  00B2               	movwf	(??_main^(0+128)+3)
  1666  04ED  3068               	movlw	104
  1667  04EE  0086               	movwf	6
  1668  04EF  3023               	movlw	35
  1669  04F0  0087               	movwf	7
  1670  04F1  3F40               	moviw [0]fsr1
  1671  04F2  00B3               	movwf	(??_main+4)^(0+128)
  1672  04F3  3F41               	moviw [1]fsr1
  1673  04F4  00B4               	movwf	((??_main+4)^(0+128)+1)
  1674  04F5  3F42               	moviw [2]fsr1
  1675  04F6  00B5               	movwf	((??_main+4)^(0+128)+2)
  1676  04F7  3F43               	moviw [3]fsr1
  1677  04F8  00B6               	movwf	((??_main+4)^(0+128)+3)
  1678  04F9  0832               	movf	(??_main+3)^(0+128),w
  1679  04FA  0236               	subwf	(??_main+7)^(0+128),w
  1680  04FB  1D03               	skipz
  1681  04FC  2D07               	goto	u1445
  1682  04FD  0831               	movf	(??_main+2)^(0+128),w
  1683  04FE  0235               	subwf	(??_main+6)^(0+128),w
  1684  04FF  1D03               	skipz
  1685  0500  2D07               	goto	u1445
  1686  0501  0830               	movf	(??_main+1)^(0+128),w
  1687  0502  0234               	subwf	(??_main+5)^(0+128),w
  1688  0503  1D03               	skipz
  1689  0504  2D07               	goto	u1445
  1690  0505  082F               	movf	??_main^(0+128),w
  1691  0506  0233               	subwf	(??_main+4)^(0+128),w
  1692  0507                     u1445:	
  1693  0507  1C03               	skipc
  1694  0508  2D3A               	goto	l177
  1695  0509  30F5               	movlw	245
  1696  050A  0086               	movwf	6
  1697  050B  3022               	movlw	34
  1698  050C  0087               	movwf	7
  1699  050D  3146               	addfsr 1,6
  1700  050E  3F40               	moviw [0]fsr1
  1701  050F  00AF               	movwf	??_main^(0+128)
  1702  0510  3F41               	moviw [1]fsr1
  1703  0511  00B0               	movwf	(??_main^(0+128)+1)
  1704  0512  3F42               	moviw [2]fsr1
  1705  0513  00B1               	movwf	(??_main^(0+128)+2)
  1706  0514  3F43               	moviw [3]fsr1
  1707  0515  00B2               	movwf	(??_main^(0+128)+3)
  1708  0516  306C               	movlw	108
  1709  0517  0086               	movwf	6
  1710  0518  3023               	movlw	35
  1711  0519  0087               	movwf	7
  1712  051A  3F40               	moviw [0]fsr1
  1713  051B  00B3               	movwf	(??_main+4)^(0+128)
  1714  051C  3F41               	moviw [1]fsr1
  1715  051D  00B4               	movwf	((??_main+4)^(0+128)+1)
  1716  051E  3F42               	moviw [2]fsr1
  1717  051F  00B5               	movwf	((??_main+4)^(0+128)+2)
  1718  0520  3F43               	moviw [3]fsr1
  1719  0521  00B6               	movwf	((??_main+4)^(0+128)+3)
  1720  0522  0832               	movf	(??_main+3)^(0+128),w
  1721  0523  0236               	subwf	(??_main+7)^(0+128),w
  1722  0524  1D03               	skipz
  1723  0525  2D30               	goto	u1455
  1724  0526  0831               	movf	(??_main+2)^(0+128),w
  1725  0527  0235               	subwf	(??_main+6)^(0+128),w
  1726  0528  1D03               	skipz
  1727  0529  2D30               	goto	u1455
  1728  052A  0830               	movf	(??_main+1)^(0+128),w
  1729  052B  0234               	subwf	(??_main+5)^(0+128),w
  1730  052C  1D03               	skipz
  1731  052D  2D30               	goto	u1455
  1732  052E  082F               	movf	??_main^(0+128),w
  1733  052F  0233               	subwf	(??_main+4)^(0+128),w
  1734  0530                     u1455:	
  1735  0530  1C03               	skipc
  1736  0531  2D3A               	goto	l177
  1737  0532  30F5               	movlw	245
  1738  0533  0086               	movwf	6
  1739  0534  3022               	movlw	34
  1740  0535  0087               	movwf	7
  1741  0536  3143               	addfsr 1,3
  1742  0537  0301               	decf	1,w
  1743  0538  1903               	btfsc	3,2
  1744  0539  2CB5               	goto	l175
  1745  053A                     l177:	
  1746                           
  1747                           ;main.c: 438: };main.c: 439: LATAbits.LATA6 = 0;
  1748  053A  0022               	movlb	2	; select bank2
  1749  053B  130C               	bcf	12,6	;volatile
  1750  053C  2E4C               	goto	l2010
  1751  053D                     l182:	
  1752                           ;main.c: 441: break;
  1753                           
  1754                           ;main.c: 440: I2C_buffer.data.dispense = 0;
  1755                           
  1756                           
  1757                           ;main.c: 444: LATAbits.LATA7 = 1;
  1758  053D  0022               	movlb	2	; select bank2
  1759  053E  178C               	bsf	12,7	;volatile
  1760                           
  1761                           ;main.c: 445: I2C_buffer.data.time++;
  1762  053F  30F5               	movlw	245
  1763  0540  0086               	movwf	6
  1764  0541  3022               	movlw	34
  1765  0542  0087               	movwf	7
  1766  0543  314A               	addfsr 1,10
  1767  0544  3001               	movlw	1
  1768  0545  0781               	addwf	1,f
  1769  0546  3141               	addfsr 1,1
  1770  0547  3000               	movlw	0
  1771  0548  3D81               	addwfc	1,f
  1772  0549  3141               	addfsr 1,1
  1773  054A  3000               	movlw	0
  1774  054B  3D81               	addwfc	1,f
  1775  054C  3141               	addfsr 1,1
  1776  054D  3000               	movlw	0
  1777  054E  3D81               	addwfc	1,f
  1778                           
  1779                           ;main.c: 446: _delay((unsigned long)((1)*(32000000/4000.0)));
  1780  054F  300B               	movlw	11
  1781  0550  0021               	movlb	1	; select bank1
  1782  0551  00AF               	movwf	??_main^(0+128)
  1783  0552  3062               	movlw	98
  1784  0553                     u1647:	
  1785  0553  0B89               	decfsz	9,f
  1786  0554  2D53               	goto	u1647
  1787  0555  0BAF               	decfsz	??_main^(0+128),f
  1788  0556  2D53               	goto	u1647
  1789  0557  0000               	nop
  1790                           
  1791                           ;main.c: 447: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected3 == 1) brea
      +                          k;
  1792  0558  30F5               	movlw	245
  1793  0559  0086               	movwf	6
  1794  055A  3022               	movlw	34
  1795  055B  0087               	movwf	7
  1796  055C  314E               	addfsr 1,14
  1797  055D  0301               	decf	1,w
  1798  055E  1D03               	btfss	3,2
  1799  055F  2D67               	goto	l1984
  1800  0560  307C               	movlw	124
  1801  0561  0086               	movwf	6
  1802  0562  3023               	movlw	35
  1803  0563  0087               	movwf	7
  1804  0564  0301               	decf	1,w
  1805  0565  1903               	btfsc	3,2
  1806  0566  2DC2               	goto	l184
  1807  0567                     l1984:	
  1808  0567  30F5               	movlw	245
  1809  0568  0086               	movwf	6
  1810  0569  3022               	movlw	34
  1811  056A  0087               	movwf	7
  1812  056B  314A               	addfsr 1,10
  1813  056C  3F40               	moviw [0]fsr1
  1814  056D  0021               	movlb	1	; select bank1
  1815  056E  00AF               	movwf	??_main^(0+128)
  1816  056F  3F41               	moviw [1]fsr1
  1817  0570  00B0               	movwf	(??_main^(0+128)+1)
  1818  0571  3F42               	moviw [2]fsr1
  1819  0572  00B1               	movwf	(??_main^(0+128)+2)
  1820  0573  3F43               	moviw [3]fsr1
  1821  0574  00B2               	movwf	(??_main^(0+128)+3)
  1822  0575  30A2               	movlw	162
  1823  0576  0086               	movwf	6
  1824  0577  3023               	movlw	35
  1825  0578  0087               	movwf	7
  1826  0579  3F40               	moviw [0]fsr1
  1827  057A  00B3               	movwf	(??_main+4)^(0+128)
  1828  057B  3F41               	moviw [1]fsr1
  1829  057C  00B4               	movwf	((??_main+4)^(0+128)+1)
  1830  057D  3F42               	moviw [2]fsr1
  1831  057E  00B5               	movwf	((??_main+4)^(0+128)+2)
  1832  057F  3F43               	moviw [3]fsr1
  1833  0580  00B6               	movwf	((??_main+4)^(0+128)+3)
  1834  0581  0832               	movf	(??_main+3)^(0+128),w
  1835  0582  0236               	subwf	(??_main+7)^(0+128),w
  1836  0583  1D03               	skipz
  1837  0584  2D8F               	goto	u1495
  1838  0585  0831               	movf	(??_main+2)^(0+128),w
  1839  0586  0235               	subwf	(??_main+6)^(0+128),w
  1840  0587  1D03               	skipz
  1841  0588  2D8F               	goto	u1495
  1842  0589  0830               	movf	(??_main+1)^(0+128),w
  1843  058A  0234               	subwf	(??_main+5)^(0+128),w
  1844  058B  1D03               	skipz
  1845  058C  2D8F               	goto	u1495
  1846  058D  082F               	movf	??_main^(0+128),w
  1847  058E  0233               	subwf	(??_main+4)^(0+128),w
  1848  058F                     u1495:	
  1849  058F  1C03               	skipc
  1850  0590  2DC2               	goto	l184
  1851  0591  30F5               	movlw	245
  1852  0592  0086               	movwf	6
  1853  0593  3022               	movlw	34
  1854  0594  0087               	movwf	7
  1855  0595  3146               	addfsr 1,6
  1856  0596  3F40               	moviw [0]fsr1
  1857  0597  00AF               	movwf	??_main^(0+128)
  1858  0598  3F41               	moviw [1]fsr1
  1859  0599  00B0               	movwf	(??_main^(0+128)+1)
  1860  059A  3F42               	moviw [2]fsr1
  1861  059B  00B1               	movwf	(??_main^(0+128)+2)
  1862  059C  3F43               	moviw [3]fsr1
  1863  059D  00B2               	movwf	(??_main^(0+128)+3)
  1864  059E  30A6               	movlw	166
  1865  059F  0086               	movwf	6
  1866  05A0  3023               	movlw	35
  1867  05A1  0087               	movwf	7
  1868  05A2  3F40               	moviw [0]fsr1
  1869  05A3  00B3               	movwf	(??_main+4)^(0+128)
  1870  05A4  3F41               	moviw [1]fsr1
  1871  05A5  00B4               	movwf	((??_main+4)^(0+128)+1)
  1872  05A6  3F42               	moviw [2]fsr1
  1873  05A7  00B5               	movwf	((??_main+4)^(0+128)+2)
  1874  05A8  3F43               	moviw [3]fsr1
  1875  05A9  00B6               	movwf	((??_main+4)^(0+128)+3)
  1876  05AA  0832               	movf	(??_main+3)^(0+128),w
  1877  05AB  0236               	subwf	(??_main+7)^(0+128),w
  1878  05AC  1D03               	skipz
  1879  05AD  2DB8               	goto	u1505
  1880  05AE  0831               	movf	(??_main+2)^(0+128),w
  1881  05AF  0235               	subwf	(??_main+6)^(0+128),w
  1882  05B0  1D03               	skipz
  1883  05B1  2DB8               	goto	u1505
  1884  05B2  0830               	movf	(??_main+1)^(0+128),w
  1885  05B3  0234               	subwf	(??_main+5)^(0+128),w
  1886  05B4  1D03               	skipz
  1887  05B5  2DB8               	goto	u1505
  1888  05B6  082F               	movf	??_main^(0+128),w
  1889  05B7  0233               	subwf	(??_main+4)^(0+128),w
  1890  05B8                     u1505:	
  1891  05B8  1C03               	skipc
  1892  05B9  2DC2               	goto	l184
  1893  05BA  30F5               	movlw	245
  1894  05BB  0086               	movwf	6
  1895  05BC  3022               	movlw	34
  1896  05BD  0087               	movwf	7
  1897  05BE  3143               	addfsr 1,3
  1898  05BF  0301               	decf	1,w
  1899  05C0  1903               	btfsc	3,2
  1900  05C1  2D3D               	goto	l182
  1901  05C2                     l184:	
  1902                           
  1903                           ;main.c: 448: };main.c: 449: LATAbits.LATA7 = 0;
  1904  05C2  0022               	movlb	2	; select bank2
  1905  05C3  138C               	bcf	12,7	;volatile
  1906  05C4  2E4C               	goto	l2010
  1907  05C5                     l189:	
  1908                           ;main.c: 451: break;
  1909                           
  1910                           ;main.c: 450: I2C_buffer.data.dispense = 0;
  1911                           
  1912                           
  1913                           ;main.c: 454: LATBbits.LATB5 = 1;
  1914  05C5  0022               	movlb	2	; select bank2
  1915  05C6  168D               	bsf	13,5	;volatile
  1916                           
  1917                           ;main.c: 455: I2C_buffer.data.time++;
  1918  05C7  30F5               	movlw	245
  1919  05C8  0086               	movwf	6
  1920  05C9  3022               	movlw	34
  1921  05CA  0087               	movwf	7
  1922  05CB  314A               	addfsr 1,10
  1923  05CC  3001               	movlw	1
  1924  05CD  0781               	addwf	1,f
  1925  05CE  3141               	addfsr 1,1
  1926  05CF  3000               	movlw	0
  1927  05D0  3D81               	addwfc	1,f
  1928  05D1  3141               	addfsr 1,1
  1929  05D2  3000               	movlw	0
  1930  05D3  3D81               	addwfc	1,f
  1931  05D4  3141               	addfsr 1,1
  1932  05D5  3000               	movlw	0
  1933  05D6  3D81               	addwfc	1,f
  1934                           
  1935                           ;main.c: 456: _delay((unsigned long)((1)*(32000000/4000.0)));
  1936  05D7  300B               	movlw	11
  1937  05D8  0021               	movlb	1	; select bank1
  1938  05D9  00AF               	movwf	??_main^(0+128)
  1939  05DA  3062               	movlw	98
  1940  05DB                     u1657:	
  1941  05DB  0B89               	decfsz	9,f
  1942  05DC  2DDB               	goto	u1657
  1943  05DD  0BAF               	decfsz	??_main^(0+128),f
  1944  05DE  2DDB               	goto	u1657
  1945  05DF  0000               	nop
  1946                           
  1947                           ;main.c: 457: if (I2C_buffer.data.calibrate == 1 && I2C_buffer.data.selected4 == 1) brea
      +                          k;
  1948  05E0  30F5               	movlw	245
  1949  05E1  0086               	movwf	6
  1950  05E2  3022               	movlw	34
  1951  05E3  0087               	movwf	7
  1952  05E4  314E               	addfsr 1,14
  1953  05E5  0301               	decf	1,w
  1954  05E6  1D03               	btfss	3,2
  1955  05E7  2DEF               	goto	l2002
  1956  05E8  30B6               	movlw	182
  1957  05E9  0086               	movwf	6
  1958  05EA  3023               	movlw	35
  1959  05EB  0087               	movwf	7
  1960  05EC  0301               	decf	1,w
  1961  05ED  1903               	btfsc	3,2
  1962  05EE  2E4A               	goto	l191
  1963  05EF                     l2002:	
  1964  05EF  30F5               	movlw	245
  1965  05F0  0086               	movwf	6
  1966  05F1  3022               	movlw	34
  1967  05F2  0087               	movwf	7
  1968  05F3  314A               	addfsr 1,10
  1969  05F4  3F40               	moviw [0]fsr1
  1970  05F5  0021               	movlb	1	; select bank1
  1971  05F6  00AF               	movwf	??_main^(0+128)
  1972  05F7  3F41               	moviw [1]fsr1
  1973  05F8  00B0               	movwf	(??_main^(0+128)+1)
  1974  05F9  3F42               	moviw [2]fsr1
  1975  05FA  00B1               	movwf	(??_main^(0+128)+2)
  1976  05FB  3F43               	moviw [3]fsr1
  1977  05FC  00B2               	movwf	(??_main^(0+128)+3)
  1978  05FD  30DC               	movlw	220
  1979  05FE  0086               	movwf	6
  1980  05FF  3023               	movlw	35
  1981  0600  0087               	movwf	7
  1982  0601  3F40               	moviw [0]fsr1
  1983  0602  00B3               	movwf	(??_main+4)^(0+128)
  1984  0603  3F41               	moviw [1]fsr1
  1985  0604  00B4               	movwf	((??_main+4)^(0+128)+1)
  1986  0605  3F42               	moviw [2]fsr1
  1987  0606  00B5               	movwf	((??_main+4)^(0+128)+2)
  1988  0607  3F43               	moviw [3]fsr1
  1989  0608  00B6               	movwf	((??_main+4)^(0+128)+3)
  1990  0609  0832               	movf	(??_main+3)^(0+128),w
  1991  060A  0236               	subwf	(??_main+7)^(0+128),w
  1992  060B  1D03               	skipz
  1993  060C  2E17               	goto	u1545
  1994  060D  0831               	movf	(??_main+2)^(0+128),w
  1995  060E  0235               	subwf	(??_main+6)^(0+128),w
  1996  060F  1D03               	skipz
  1997  0610  2E17               	goto	u1545
  1998  0611  0830               	movf	(??_main+1)^(0+128),w
  1999  0612  0234               	subwf	(??_main+5)^(0+128),w
  2000  0613  1D03               	skipz
  2001  0614  2E17               	goto	u1545
  2002  0615  082F               	movf	??_main^(0+128),w
  2003  0616  0233               	subwf	(??_main+4)^(0+128),w
  2004  0617                     u1545:	
  2005  0617  1C03               	skipc
  2006  0618  2E4A               	goto	l191
  2007  0619  30F5               	movlw	245
  2008  061A  0086               	movwf	6
  2009  061B  3022               	movlw	34
  2010  061C  0087               	movwf	7
  2011  061D  3146               	addfsr 1,6
  2012  061E  3F40               	moviw [0]fsr1
  2013  061F  00AF               	movwf	??_main^(0+128)
  2014  0620  3F41               	moviw [1]fsr1
  2015  0621  00B0               	movwf	(??_main^(0+128)+1)
  2016  0622  3F42               	moviw [2]fsr1
  2017  0623  00B1               	movwf	(??_main^(0+128)+2)
  2018  0624  3F43               	moviw [3]fsr1
  2019  0625  00B2               	movwf	(??_main^(0+128)+3)
  2020  0626  30E0               	movlw	224
  2021  0627  0086               	movwf	6
  2022  0628  3023               	movlw	35
  2023  0629  0087               	movwf	7
  2024  062A  3F40               	moviw [0]fsr1
  2025  062B  00B3               	movwf	(??_main+4)^(0+128)
  2026  062C  3F41               	moviw [1]fsr1
  2027  062D  00B4               	movwf	((??_main+4)^(0+128)+1)
  2028  062E  3F42               	moviw [2]fsr1
  2029  062F  00B5               	movwf	((??_main+4)^(0+128)+2)
  2030  0630  3F43               	moviw [3]fsr1
  2031  0631  00B6               	movwf	((??_main+4)^(0+128)+3)
  2032  0632  0832               	movf	(??_main+3)^(0+128),w
  2033  0633  0236               	subwf	(??_main+7)^(0+128),w
  2034  0634  1D03               	skipz
  2035  0635  2E40               	goto	u1555
  2036  0636  0831               	movf	(??_main+2)^(0+128),w
  2037  0637  0235               	subwf	(??_main+6)^(0+128),w
  2038  0638  1D03               	skipz
  2039  0639  2E40               	goto	u1555
  2040  063A  0830               	movf	(??_main+1)^(0+128),w
  2041  063B  0234               	subwf	(??_main+5)^(0+128),w
  2042  063C  1D03               	skipz
  2043  063D  2E40               	goto	u1555
  2044  063E  082F               	movf	??_main^(0+128),w
  2045  063F  0233               	subwf	(??_main+4)^(0+128),w
  2046  0640                     u1555:	
  2047  0640  1C03               	skipc
  2048  0641  2E4A               	goto	l191
  2049  0642  30F5               	movlw	245
  2050  0643  0086               	movwf	6
  2051  0644  3022               	movlw	34
  2052  0645  0087               	movwf	7
  2053  0646  3143               	addfsr 1,3
  2054  0647  0301               	decf	1,w
  2055  0648  1903               	btfsc	3,2
  2056  0649  2DC5               	goto	l189
  2057  064A                     l191:	
  2058                           
  2059                           ;main.c: 458: };main.c: 459: LATBbits.LATB5 = 0;
  2060  064A  0022               	movlb	2	; select bank2
  2061  064B  128D               	bcf	13,5	;volatile
  2062  064C                     l2010:	
  2063                           ;main.c: 461: break;
  2064                           
  2065                           ;main.c: 460: I2C_buffer.data.dispense = 0;
  2066                           
  2067                           
  2068                           ;main.c: 463: I2C_buffer.data.dispense = 0;
  2069  064C  30F5               	movlw	245
  2070  064D  0086               	movwf	6
  2071  064E  3022               	movlw	34
  2072  064F  0087               	movwf	7
  2073  0650  3143               	addfsr 1,3
  2074  0651  0181               	clrf	1
  2075                           
  2076                           ;main.c: 464: break;
  2077  0652  2E66               	goto	l2016
  2078  0653                     l2014:	
  2079  0653  30F5               	movlw	245
  2080  0654  0086               	movwf	6
  2081  0655  3022               	movlw	34
  2082  0656  0087               	movwf	7
  2083  0657  3144               	addfsr 1,4
  2084  0658  0801               	movf	1,w
  2085                           
  2086                           ; Switch size 1, requested type "simple"
  2087                           ; Number of cases is 4, Range of values is 1 to 4
  2088                           ; switch strategies available:
  2089                           ; Name         Instructions Cycles
  2090                           ; simple_byte           13     7 (average)
  2091                           ; direct_byte           17     9 (fixed)
  2092                           ; jumptable            263     9 (fixed)
  2093                           ;	Chosen strategy is simple_byte
  2094  0659  3A01               	xorlw	1	; case 1
  2095  065A  1903               	skipnz
  2096  065B  2C57               	goto	l1948
  2097  065C  3A03               	xorlw	3	; case 2
  2098  065D  1903               	skipnz
  2099  065E  2CDF               	goto	l1966
  2100  065F  3A01               	xorlw	1	; case 3
  2101  0660  1903               	skipnz
  2102  0661  2D67               	goto	l1984
  2103  0662  3A07               	xorlw	7	; case 4
  2104  0663  1903               	skipnz
  2105  0664  2DEF               	goto	l2002
  2106  0665  2E4C               	goto	l2010
  2107  0666                     l2016:	
  2108                           
  2109                           ;main.c: 466: I2C_buffer.data.selected = 0;
  2110  0666  30F5               	movlw	245
  2111  0667  0086               	movwf	6
  2112  0668  3022               	movlw	34
  2113  0669  0087               	movwf	7
  2114  066A  3144               	addfsr 1,4
  2115  066B  0181               	clrf	1
  2116  066C                     l2018:	
  2117                           
  2118                           ;main.c: 468: };main.c: 470: if (I2C_buffer.data.relay1 == 1) {
  2119  066C  30F5               	movlw	245
  2120  066D  0086               	movwf	6
  2121  066E  3022               	movlw	34
  2122  066F  0087               	movwf	7
  2123  0670  314F               	addfsr 1,15
  2124  0671  0301               	decf	1,w
  2125  0672  1D03               	btfss	3,2
  2126  0673  2E77               	goto	l195
  2127                           
  2128                           ;main.c: 471: LATAbits.LATA4 = 1;
  2129  0674  0022               	movlb	2	; select bank2
  2130  0675  160C               	bsf	12,4	;volatile
  2131                           
  2132                           ;main.c: 472: } else {
  2133  0676  2E79               	goto	l2022
  2134  0677                     l195:	
  2135                           
  2136                           ;main.c: 473: LATAbits.LATA4 = 0;
  2137  0677  0022               	movlb	2	; select bank2
  2138  0678  120C               	bcf	12,4	;volatile
  2139  0679                     l2022:	
  2140                           
  2141                           ;main.c: 474: };main.c: 476: if (I2C_buffer.data.relay2 == 1) {
  2142  0679  30F5               	movlw	245
  2143  067A  0086               	movwf	6
  2144  067B  3022               	movlw	34
  2145  067C  0087               	movwf	7
  2146  067D  3150               	addfsr 1,16
  2147  067E  0301               	decf	1,w
  2148  067F  1D03               	btfss	3,2
  2149  0680  2E83               	goto	l197
  2150                           
  2151                           ;main.c: 477: LATAbits.LATA6 = 1;
  2152  0681  170C               	bsf	12,6	;volatile
  2153                           
  2154                           ;main.c: 478: } else {
  2155  0682  2E84               	goto	l2026
  2156  0683                     l197:	
  2157                           
  2158                           ;main.c: 479: LATAbits.LATA6 = 0;
  2159  0683  130C               	bcf	12,6	;volatile
  2160  0684                     l2026:	
  2161                           
  2162                           ;main.c: 480: };main.c: 482: if (I2C_buffer.data.relay3 == 1) {
  2163  0684  30F5               	movlw	245
  2164  0685  0086               	movwf	6
  2165  0686  3022               	movlw	34
  2166  0687  0087               	movwf	7
  2167  0688  3151               	addfsr 1,17
  2168  0689  0301               	decf	1,w
  2169  068A  1D03               	btfss	3,2
  2170  068B  2E8E               	goto	l199
  2171                           
  2172                           ;main.c: 483: LATAbits.LATA7 = 1;
  2173  068C  178C               	bsf	12,7	;volatile
  2174                           
  2175                           ;main.c: 484: } else {
  2176  068D  2E8F               	goto	l2030
  2177  068E                     l199:	
  2178                           
  2179                           ;main.c: 485: LATAbits.LATA7 = 0;
  2180  068E  138C               	bcf	12,7	;volatile
  2181  068F                     l2030:	
  2182                           
  2183                           ;main.c: 486: };main.c: 488: if (I2C_buffer.data.relay4 == 1) {
  2184  068F  30F5               	movlw	245
  2185  0690  0086               	movwf	6
  2186  0691  3022               	movlw	34
  2187  0692  0087               	movwf	7
  2188  0693  3152               	addfsr 1,18
  2189  0694  0301               	decf	1,w
  2190  0695  1D03               	btfss	3,2
  2191  0696  2E99               	goto	l201
  2192                           
  2193                           ;main.c: 489: LATBbits.LATB5 = 1;
  2194  0697  168D               	bsf	13,5	;volatile
  2195                           
  2196                           ;main.c: 490: } else {
  2197  0698  2B6E               	goto	l152
  2198  0699                     l201:	
  2199                           
  2200                           ;main.c: 491: LATBbits.LATB5 = 0;
  2201  0699  128D               	bcf	13,5	;volatile
  2202  069A  2B6E               	goto	l152
  2203  069B                     __end_of_main:	
  2204                           
  2205                           	psect	text1
  2206  069B                     __ptext1:	
  2207 ;; *************** function _init_I2C_buffer *****************
  2208 ;; Defined at:
  2209 ;;		line 172 in file "main.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  i               1   10[BANK1 ] unsigned char 
  2214 ;;  i               1    9[BANK1 ] unsigned char 
  2215 ;;  i               1    8[BANK1 ] unsigned char 
  2216 ;;  i               1    7[BANK1 ] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : B1F/1
  2223 ;;		On exit  : 1F/1
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2227 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2228 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;Total ram usage:        7 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    4
  2233 ;; This function calls:
  2234 ;;		_eeprom_read
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _init_I2C_buffer
  2242  069B                     _init_I2C_buffer:	
  2243                           
  2244                           ;main.c: 173: I2C_buffer.data.ID = 0x03;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _init_I2C_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2248  069B  30F5               	movlw	245
  2249  069C  0086               	movwf	6
  2250  069D  3022               	movlw	34
  2251  069E  0087               	movwf	7
  2252  069F  3003               	movlw	3
  2253  06A0  3FC0               	movwi [0]fsr1
  2254                           
  2255                           ;main.c: 174: I2C_buffer.data.RESET = 0;
  2256  06A1  30F5               	movlw	245
  2257  06A2  0086               	movwf	6
  2258  06A3  3022               	movlw	34
  2259  06A4  0087               	movwf	7
  2260  06A5  3141               	addfsr 1,1
  2261  06A6  0181               	clrf	1
  2262                           
  2263                           ;main.c: 175: I2C_buffer.data.SAVE = 0;
  2264  06A7  30F5               	movlw	245
  2265  06A8  0086               	movwf	6
  2266  06A9  3022               	movlw	34
  2267  06AA  0087               	movwf	7
  2268  06AB  3142               	addfsr 1,2
  2269  06AC  0181               	clrf	1
  2270                           
  2271                           ;main.c: 176: I2C_buffer.data.dispense = 0;
  2272  06AD  30F5               	movlw	245
  2273  06AE  0086               	movwf	6
  2274  06AF  3022               	movlw	34
  2275  06B0  0087               	movwf	7
  2276  06B1  3143               	addfsr 1,3
  2277  06B2  0181               	clrf	1
  2278                           
  2279                           ;main.c: 177: I2C_buffer.data.selected = 0;
  2280  06B3  30F5               	movlw	245
  2281  06B4  0086               	movwf	6
  2282  06B5  3022               	movlw	34
  2283  06B6  0087               	movwf	7
  2284  06B7  3144               	addfsr 1,4
  2285  06B8  0181               	clrf	1
  2286                           
  2287                           ;main.c: 178: I2C_buffer.data.cancel = 0;
  2288  06B9  30F5               	movlw	245
  2289  06BA  0086               	movwf	6
  2290  06BB  3022               	movlw	34
  2291  06BC  0087               	movwf	7
  2292  06BD  3145               	addfsr 1,5
  2293  06BE  0181               	clrf	1
  2294                           
  2295                           ;main.c: 179: I2C_buffer.data.counter = 0;
  2296  06BF  30FB               	movlw	251
  2297  06C0  0086               	movwf	6
  2298  06C1  3022               	movlw	34
  2299  06C2  0087               	movwf	7
  2300  06C3  3000               	movlw	0
  2301  06C4  3FC0               	movwi [0]fsr1
  2302  06C5  3FC1               	movwi [1]fsr1
  2303  06C6  3FC2               	movwi [2]fsr1
  2304  06C7  3FC3               	movwi [3]fsr1
  2305                           
  2306                           ;main.c: 180: I2C_buffer.data.time = 0;
  2307  06C8  30FF               	movlw	255
  2308  06C9  0086               	movwf	6
  2309  06CA  3022               	movlw	34
  2310  06CB  0087               	movwf	7
  2311  06CC  3000               	movlw	0
  2312  06CD  3FC0               	movwi [0]fsr1
  2313  06CE  3FC1               	movwi [1]fsr1
  2314  06CF  3FC2               	movwi [2]fsr1
  2315  06D0  3FC3               	movwi [3]fsr1
  2316                           
  2317                           ;main.c: 181: I2C_buffer.data.calibrate = 0;
  2318  06D1  30F5               	movlw	245
  2319  06D2  0086               	movwf	6
  2320  06D3  3022               	movlw	34
  2321  06D4  0087               	movwf	7
  2322  06D5  314E               	addfsr 1,14
  2323  06D6  0181               	clrf	1
  2324                           
  2325                           ;main.c: 182: I2C_buffer.data.relay1 = 0;
  2326  06D7  30F5               	movlw	245
  2327  06D8  0086               	movwf	6
  2328  06D9  3022               	movlw	34
  2329  06DA  0087               	movwf	7
  2330  06DB  314F               	addfsr 1,15
  2331  06DC  0181               	clrf	1
  2332                           
  2333                           ;main.c: 183: I2C_buffer.data.relay2 = 0;
  2334  06DD  30F5               	movlw	245
  2335  06DE  0086               	movwf	6
  2336  06DF  3022               	movlw	34
  2337  06E0  0087               	movwf	7
  2338  06E1  3150               	addfsr 1,16
  2339  06E2  0181               	clrf	1
  2340                           
  2341                           ;main.c: 184: I2C_buffer.data.relay3 = 0;
  2342  06E3  30F5               	movlw	245
  2343  06E4  0086               	movwf	6
  2344  06E5  3022               	movlw	34
  2345  06E6  0087               	movwf	7
  2346  06E7  3151               	addfsr 1,17
  2347  06E8  0181               	clrf	1
  2348                           
  2349                           ;main.c: 185: I2C_buffer.data.relay4 = 0;
  2350  06E9  30F5               	movlw	245
  2351  06EA  0086               	movwf	6
  2352  06EB  3022               	movlw	34
  2353  06EC  0087               	movwf	7
  2354  06ED  3152               	addfsr 1,18
  2355  06EE  0181               	clrf	1
  2356                           
  2357                           ;main.c: 186: I2C_buffer.data.selected1 = 0;
  2358  06EF  30F5               	movlw	245
  2359  06F0  0086               	movwf	6
  2360  06F1  3022               	movlw	34
  2361  06F2  0087               	movwf	7
  2362  06F3  3153               	addfsr 1,19
  2363  06F4  0181               	clrf	1
  2364                           
  2365                           ;main.c: 187: for (unsigned char i = 0; i < 57; i++)
  2366  06F5  01A7               	clrf	init_I2C_buffer@i^(0+128)
  2367  06F6                     l1556:	
  2368                           
  2369                           ;main.c: 188: {;main.c: 189: I2C_buffer.byte[(unsigned char) (0x14 + i)] = eeprom_read(i
      +                          );
  2370  06F6  0827               	movf	init_I2C_buffer@i^(0+128),w
  2371  06F7  318F  2712  3186   	fcall	_eeprom_read
  2372  06FA  0021               	movlb	1	; select bank1
  2373  06FB  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2374  06FC  0827               	movf	init_I2C_buffer@i^(0+128),w
  2375  06FD  3E14               	addlw	20
  2376  06FE  3EF5               	addlw	245
  2377  06FF  00A5               	movwf	(??_init_I2C_buffer+1)^(0+128)
  2378  0700  01A6               	clrf	((??_init_I2C_buffer+1)^(0+128)+1)
  2379  0701  3022               	movlw	34
  2380  0702  3DA6               	addwfc	((??_init_I2C_buffer+1)^(0+128)+1),f
  2381  0703  0825               	movf	(??_init_I2C_buffer+1)^(0+128),w
  2382  0704  0086               	movwf	6
  2383  0705  0826               	movf	(??_init_I2C_buffer+2)^(0+128),w
  2384  0706  0087               	movwf	7
  2385  0707  0824               	movf	??_init_I2C_buffer^(0+128),w
  2386  0708  0081               	movwf	1
  2387  0709  3001               	movlw	1
  2388  070A  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2389  070B  0824               	movf	??_init_I2C_buffer^(0+128),w
  2390  070C  07A7               	addwf	init_I2C_buffer@i^(0+128),f
  2391  070D  3039               	movlw	57
  2392  070E  0227               	subwf	init_I2C_buffer@i^(0+128),w
  2393  070F  1C03               	skipc
  2394  0710  2EF6               	goto	l1556
  2395                           
  2396                           ;main.c: 190: };main.c: 191: I2C_buffer.data.selected2 = 0;
  2397  0711  3042               	movlw	66
  2398  0712  0086               	movwf	6
  2399  0713  3023               	movlw	35
  2400  0714  0087               	movwf	7
  2401  0715  0181               	clrf	1
  2402                           
  2403                           ;main.c: 192: for (unsigned char i = 0; i < 57; i++)
  2404  0716  01A8               	clrf	init_I2C_buffer@i_640^(0+128)
  2405  0717                     l1570:	
  2406                           
  2407                           ;main.c: 193: {;main.c: 194: I2C_buffer.byte[(unsigned char) (0x4E + i)] = eeprom_read((
      +                          unsigned char) (57 + i));
  2408  0717  0828               	movf	init_I2C_buffer@i_640^(0+128),w
  2409  0718  3E39               	addlw	57
  2410  0719  318F  2712  3186   	fcall	_eeprom_read
  2411  071C  0021               	movlb	1	; select bank1
  2412  071D  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2413  071E  0828               	movf	init_I2C_buffer@i_640^(0+128),w
  2414  071F  3E4E               	addlw	78
  2415  0720  3EF5               	addlw	245
  2416  0721  00A5               	movwf	(??_init_I2C_buffer+1)^(0+128)
  2417  0722  01A6               	clrf	((??_init_I2C_buffer+1)^(0+128)+1)
  2418  0723  3022               	movlw	34
  2419  0724  3DA6               	addwfc	((??_init_I2C_buffer+1)^(0+128)+1),f
  2420  0725  0825               	movf	(??_init_I2C_buffer+1)^(0+128),w
  2421  0726  0086               	movwf	6
  2422  0727  0826               	movf	(??_init_I2C_buffer+2)^(0+128),w
  2423  0728  0087               	movwf	7
  2424  0729  0824               	movf	??_init_I2C_buffer^(0+128),w
  2425  072A  0081               	movwf	1
  2426  072B  3001               	movlw	1
  2427  072C  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2428  072D  0824               	movf	??_init_I2C_buffer^(0+128),w
  2429  072E  07A8               	addwf	init_I2C_buffer@i_640^(0+128),f
  2430  072F  3039               	movlw	57
  2431  0730  0228               	subwf	init_I2C_buffer@i_640^(0+128),w
  2432  0731  1C03               	skipc
  2433  0732  2F17               	goto	l1570
  2434                           
  2435                           ;main.c: 195: };main.c: 196: I2C_buffer.data.selected3 = 0;
  2436  0733  307C               	movlw	124
  2437  0734  0086               	movwf	6
  2438  0735  3023               	movlw	35
  2439  0736  0087               	movwf	7
  2440  0737  0181               	clrf	1
  2441                           
  2442                           ;main.c: 197: for (unsigned char i = 0; i < 57; i++)
  2443  0738  01A9               	clrf	init_I2C_buffer@i_641^(0+128)
  2444  0739                     l1584:	
  2445                           
  2446                           ;main.c: 198: {;main.c: 199: I2C_buffer.byte[(unsigned char) (0x88 + i)] = eeprom_read((
      +                          unsigned char) (113 + i));
  2447  0739  0829               	movf	init_I2C_buffer@i_641^(0+128),w
  2448  073A  3E71               	addlw	113
  2449  073B  318F  2712  3186   	fcall	_eeprom_read
  2450  073E  0021               	movlb	1	; select bank1
  2451  073F  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2452  0740  0829               	movf	init_I2C_buffer@i_641^(0+128),w
  2453  0741  3E88               	addlw	136
  2454  0742  3EF5               	addlw	245
  2455  0743  00A5               	movwf	(??_init_I2C_buffer+1)^(0+128)
  2456  0744  01A6               	clrf	((??_init_I2C_buffer+1)^(0+128)+1)
  2457  0745  3022               	movlw	34
  2458  0746  3DA6               	addwfc	((??_init_I2C_buffer+1)^(0+128)+1),f
  2459  0747  0825               	movf	(??_init_I2C_buffer+1)^(0+128),w
  2460  0748  0086               	movwf	6
  2461  0749  0826               	movf	(??_init_I2C_buffer+2)^(0+128),w
  2462  074A  0087               	movwf	7
  2463  074B  0824               	movf	??_init_I2C_buffer^(0+128),w
  2464  074C  0081               	movwf	1
  2465  074D  3001               	movlw	1
  2466  074E  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2467  074F  0824               	movf	??_init_I2C_buffer^(0+128),w
  2468  0750  07A9               	addwf	init_I2C_buffer@i_641^(0+128),f
  2469  0751  3039               	movlw	57
  2470  0752  0229               	subwf	init_I2C_buffer@i_641^(0+128),w
  2471  0753  1C03               	skipc
  2472  0754  2F39               	goto	l1584
  2473                           
  2474                           ;main.c: 200: };main.c: 201: I2C_buffer.data.selected4 = 0;
  2475  0755  30B6               	movlw	182
  2476  0756  0086               	movwf	6
  2477  0757  3023               	movlw	35
  2478  0758  0087               	movwf	7
  2479  0759  0181               	clrf	1
  2480                           
  2481                           ;main.c: 202: for (unsigned char i = 0; i < 57; i++)
  2482  075A  01AA               	clrf	init_I2C_buffer@i_642^(0+128)
  2483  075B                     l1598:	
  2484                           
  2485                           ;main.c: 203: {;main.c: 204: I2C_buffer.byte[(unsigned char) (0xC2 + i)] = eeprom_read((
      +                          unsigned char) (167 + i));
  2486  075B  082A               	movf	init_I2C_buffer@i_642^(0+128),w
  2487  075C  3EA7               	addlw	167
  2488  075D  318F  2712  3186   	fcall	_eeprom_read
  2489  0760  0021               	movlb	1	; select bank1
  2490  0761  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2491  0762  082A               	movf	init_I2C_buffer@i_642^(0+128),w
  2492  0763  3EC2               	addlw	194
  2493  0764  3EF5               	addlw	245
  2494  0765  00A5               	movwf	(??_init_I2C_buffer+1)^(0+128)
  2495  0766  01A6               	clrf	((??_init_I2C_buffer+1)^(0+128)+1)
  2496  0767  3022               	movlw	34
  2497  0768  3DA6               	addwfc	((??_init_I2C_buffer+1)^(0+128)+1),f
  2498  0769  0825               	movf	(??_init_I2C_buffer+1)^(0+128),w
  2499  076A  0086               	movwf	6
  2500  076B  0826               	movf	(??_init_I2C_buffer+2)^(0+128),w
  2501  076C  0087               	movwf	7
  2502  076D  0824               	movf	??_init_I2C_buffer^(0+128),w
  2503  076E  0081               	movwf	1
  2504  076F  3001               	movlw	1
  2505  0770  00A4               	movwf	??_init_I2C_buffer^(0+128)
  2506  0771  0824               	movf	??_init_I2C_buffer^(0+128),w
  2507  0772  07AA               	addwf	init_I2C_buffer@i_642^(0+128),f
  2508  0773  3039               	movlw	57
  2509  0774  022A               	subwf	init_I2C_buffer@i_642^(0+128),w
  2510  0775  1803               	btfsc	3,0
  2511  0776  0008               	return
  2512  0777  2F5B               	goto	l1598
  2513  0778                     __end_of_init_I2C_buffer:	
  2514                           
  2515                           	psect	text2
  2516  0F12                     __ptext2:	
  2517 ;; *************** function _eeprom_read *****************
  2518 ;; Defined at:
  2519 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  addr            1    wreg     unsigned char 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  addr            1    3[BANK1 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      unsigned char 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 1F/1
  2530 ;;		On exit  : 1F/3
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2534 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2536 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;Total ram usage:        4 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    3
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_init_I2C_buffer
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _eeprom_read
  2549  0F12                     _eeprom_read:	
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2553                           ;eeprom_read@addr stored from wreg
  2554  0F12  00A3               	movwf	eeprom_read@addr^(0+128)
  2555  0F13  2F15               	goto	l362
  2556  0F14                     u811:	
  2557  0F14  0021               	movlb	1	; select bank1
  2558  0F15                     l362:	
  2559                           ;__eeread.c: 8: do
  2560                           
  2561  0F15  0064               	clrwdt	;# 
  2562                           
  2563                           ;__eeread.c: 12: while(EECON1bits.WR);
  2564  0F16  0023               	movlb	3	; select bank3
  2565  0F17  1895               	btfsc	21,1	;volsfr
  2566  0F18  2F14               	goto	u811
  2567                           
  2568                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  2569  0F19  0021               	movlb	1	; select bank1
  2570  0F1A  0823               	movf	eeprom_read@addr^(0+128),w
  2571  0F1B  00A0               	movwf	??_eeprom_read^(0+128)
  2572  0F1C  01A1               	clrf	(??_eeprom_read^(0+128)+1)
  2573  0F1D  0820               	movf	??_eeprom_read^(0+128),w
  2574  0F1E  0023               	movlb	3	; select bank3
  2575  0F1F  0091               	movwf	17	;volatile
  2576  0F20  0021               	movlb	1	; select bank1
  2577  0F21  0821               	movf	(??_eeprom_read+1)^(0+128),w
  2578  0F22  0023               	movlb	3	; select bank3
  2579  0F23  0092               	movwf	18	;volatile
  2580  0F24  303F               	movlw	63
  2581  0F25  0021               	movlb	1	; select bank1
  2582  0F26  00A2               	movwf	(??_eeprom_read+2)^(0+128)
  2583  0F27  0822               	movf	(??_eeprom_read+2)^(0+128),w
  2584  0F28  0023               	movlb	3	; select bank3
  2585  0F29  0595               	andwf	21,f	;volsfr
  2586  0F2A  1415               	bsf	21,0	;volsfr
  2587  0F2B  0813               	movf	19,w	;volatile
  2588  0F2C  0008               	return
  2589  0F2D                     __end_of_eeprom_read:	
  2590                           
  2591                           	psect	text3
  2592  07D6                     __ptext3:	
  2593 ;; *************** function _eeprom_write *****************
  2594 ;; Defined at:
  2595 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  addr            1    wreg     unsigned char 
  2598 ;;  value           1    0[BANK1 ] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  addr            1    3[BANK1 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 1F/1
  2607 ;;		On exit  : 1F/3
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        4 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    3
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _eeprom_write
  2626  07D6                     _eeprom_write:	
  2627                           
  2628                           ;incstack = 0
  2629                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2630                           ;eeprom_write@addr stored from wreg
  2631  07D6  00A3               	movwf	eeprom_write@addr^(0+128)
  2632  07D7                     l382:	
  2633                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  2634                           
  2635  07D7  0023               	movlb	3	; select bank3
  2636  07D8  1895               	btfsc	21,1	;volsfr
  2637  07D9  2FD7               	goto	l382
  2638  07DA  0021               	movlb	1	; select bank1
  2639  07DB  0823               	movf	eeprom_write@addr^(0+128),w
  2640  07DC  00A1               	movwf	??_eeprom_write^(0+128)
  2641  07DD  01A2               	clrf	(??_eeprom_write^(0+128)+1)
  2642  07DE  0821               	movf	??_eeprom_write^(0+128),w
  2643  07DF  0023               	movlb	3	; select bank3
  2644  07E0  0091               	movwf	17	;volatile
  2645  07E1  0021               	movlb	1	; select bank1
  2646  07E2  0822               	movf	(??_eeprom_write+1)^(0+128),w
  2647  07E3  0023               	movlb	3	; select bank3
  2648  07E4  0092               	movwf	18	;volatile
  2649  07E5  0021               	movlb	1	; select bank1
  2650  07E6  0820               	movf	eeprom_write@value^(0+128),w
  2651  07E7  0023               	movlb	3	; select bank3
  2652  07E8  0093               	movwf	19	;volatile
  2653  07E9  303F               	movlw	63
  2654  07EA  0021               	movlb	1	; select bank1
  2655  07EB  00A1               	movwf	??_eeprom_write^(0+128)
  2656  07EC  0821               	movf	??_eeprom_write^(0+128),w
  2657  07ED  0023               	movlb	3	; select bank3
  2658  07EE  0595               	andwf	21,f	;volsfr
  2659  07EF  1003               	bcf	3,0	;volatile
  2660  07F0  1B8B               	btfsc	11,7	;volatile
  2661  07F1  1403               	bsf	3,0	;volatile
  2662  07F2  138B               	bcf	11,7	;volatile
  2663  07F3  1515               	bsf	21,2	;volsfr
  2664  07F4  3055               	movlw	85
  2665  07F5  0096               	movwf	22	;volsfr
  2666  07F6  30AA               	movlw	170
  2667  07F7  0096               	movwf	22	;volsfr
  2668  07F8  1495               	bsf	21,1	;volsfr
  2669  07F9  1115               	bcf	21,2	;volsfr
  2670  07FA  1C03               	btfss	3,0	;volatile
  2671  07FB  0008               	return
  2672  07FC  178B               	bsf	11,7	;volatile
  2673  07FD  0008               	return
  2674  07FE                     __end_of_eeprom_write:	
  2675                           
  2676                           	psect	intentry
  2677  0004                     __pintentry:	
  2678 ;; *************** function _isr *****************
  2679 ;; Defined at:
  2680 ;;		line 211 in file "main.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 1F/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:       10 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    2
  2701 ;; This function calls:
  2702 ;;		_ADC_read
  2703 ;;		___lwdiv
  2704 ;;		_map
  2705 ;; This function is called by:
  2706 ;;		Interrupt level 1
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710  0004                     _isr:	
  2711                           
  2712                           ;incstack = 0
  2713  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2714                           
  2715                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2716  0005  3180               	pagesel	$
  2717                           
  2718                           ;main.c: 213: if (INTCONbits.INTF == 1) {
  2719  0006  1C8B               	btfss	11,1	;volatile
  2720  0007  283F               	goto	i1l1672
  2721                           
  2722                           ;main.c: 214: INTCONbits.INTE = 0;
  2723  0008  120B               	bcf	11,4	;volatile
  2724                           
  2725                           ;main.c: 215: if (I2C_buffer.data.dispense == 0) {
  2726  0009  30F5               	movlw	245
  2727  000A  0086               	movwf	6
  2728  000B  3022               	movlw	34
  2729  000C  0087               	movwf	7
  2730  000D  3143               	addfsr 1,3
  2731  000E  0801               	movf	1,w
  2732  000F  1D03               	btfss	3,2
  2733  0010  282D               	goto	i1l1666
  2734                           
  2735                           ;main.c: 216: I2C_buffer.data.cancel = 1;
  2736  0011  30FA               	movlw	250
  2737  0012  0086               	movwf	6
  2738  0013  3022               	movlw	34
  2739  0014  0087               	movwf	7
  2740  0015  3001               	movlw	1
  2741  0016  0081               	movwf	1
  2742                           
  2743                           ;main.c: 217: I2C_buffer.data.selected1 = 0;
  2744  0017  30F5               	movlw	245
  2745  0018  0086               	movwf	6
  2746  0019  3022               	movlw	34
  2747  001A  0087               	movwf	7
  2748  001B  3153               	addfsr 1,19
  2749  001C  0181               	clrf	1
  2750                           
  2751                           ;main.c: 218: I2C_buffer.data.selected2 = 0;
  2752  001D  3042               	movlw	66
  2753  001E  0086               	movwf	6
  2754  001F  3023               	movlw	35
  2755  0020  0087               	movwf	7
  2756  0021  0181               	clrf	1
  2757                           
  2758                           ;main.c: 219: I2C_buffer.data.selected3 = 0;
  2759  0022  307C               	movlw	124
  2760  0023  0086               	movwf	6
  2761  0024  3023               	movlw	35
  2762  0025  0087               	movwf	7
  2763  0026  0181               	clrf	1
  2764                           
  2765                           ;main.c: 220: I2C_buffer.data.selected4 = 0;
  2766  0027  30B6               	movlw	182
  2767  0028  0086               	movwf	6
  2768  0029  3023               	movlw	35
  2769  002A  0087               	movwf	7
  2770  002B  0181               	clrf	1
  2771                           
  2772                           ;main.c: 221: } else {
  2773  002C  283D               	goto	i1l1668
  2774  002D                     i1l1666:	
  2775                           
  2776                           ;main.c: 222: I2C_buffer.data.counter++;
  2777  002D  30F5               	movlw	245
  2778  002E  0086               	movwf	6
  2779  002F  3022               	movlw	34
  2780  0030  0087               	movwf	7
  2781  0031  3146               	addfsr 1,6
  2782  0032  3001               	movlw	1
  2783  0033  0781               	addwf	1,f
  2784  0034  3141               	addfsr 1,1
  2785  0035  3000               	movlw	0
  2786  0036  3D81               	addwfc	1,f
  2787  0037  3141               	addfsr 1,1
  2788  0038  3000               	movlw	0
  2789  0039  3D81               	addwfc	1,f
  2790  003A  3141               	addfsr 1,1
  2791  003B  3000               	movlw	0
  2792  003C  3D81               	addwfc	1,f
  2793  003D                     i1l1668:	
  2794                           
  2795                           ;main.c: 223: };main.c: 224: INTCONbits.INTF = 0;
  2796  003D  108B               	bcf	11,1	;volatile
  2797                           
  2798                           ;main.c: 225: INTCONbits.INTE = 1;
  2799  003E  160B               	bsf	11,4	;volatile
  2800  003F                     i1l1672:	
  2801                           
  2802                           ;main.c: 226: };main.c: 228: if (INTCONbits.IOCIF == 1) {
  2803  003F  1C0B               	btfss	11,0	;volatile
  2804  0040  28A4               	goto	i1l1716
  2805                           
  2806                           ;main.c: 229: INTCONbits.IOCIE = 0;
  2807  0041  118B               	bcf	11,3	;volatile
  2808                           
  2809                           ;main.c: 230: if (IOCBFbits.IOCBF2 == 1) {
  2810  0042  0027               	movlb	7	; select bank7
  2811  0043  1D16               	btfss	22,2	;volatile
  2812  0044  285A               	goto	i1l1684
  2813                           
  2814                           ;main.c: 231: I2C_buffer.data.selected1 = 1;
  2815  0045  3008               	movlw	8
  2816  0046  0086               	movwf	6
  2817  0047  3023               	movlw	35
  2818  0048  0087               	movwf	7
  2819  0049  3001               	movlw	1
  2820  004A  0081               	movwf	1
  2821                           
  2822                           ;main.c: 232: I2C_buffer.data.selected2 = 0;
  2823  004B  3042               	movlw	66
  2824  004C  0086               	movwf	6
  2825  004D  3023               	movlw	35
  2826  004E  0087               	movwf	7
  2827  004F  0181               	clrf	1
  2828                           
  2829                           ;main.c: 233: I2C_buffer.data.selected3 = 0;
  2830  0050  307C               	movlw	124
  2831  0051  0086               	movwf	6
  2832  0052  3023               	movlw	35
  2833  0053  0087               	movwf	7
  2834  0054  0181               	clrf	1
  2835                           
  2836                           ;main.c: 234: I2C_buffer.data.selected4 = 0;
  2837  0055  30B6               	movlw	182
  2838  0056  0086               	movwf	6
  2839  0057  3023               	movlw	35
  2840  0058  0087               	movwf	7
  2841  0059  0181               	clrf	1
  2842  005A                     i1l1684:	
  2843                           
  2844                           ;main.c: 235: };main.c: 236: if (IOCBFbits.IOCBF3 == 1) {
  2845  005A  1D96               	btfss	22,3	;volatile
  2846  005B  2872               	goto	i1l1694
  2847                           
  2848                           ;main.c: 237: I2C_buffer.data.selected1 = 0;
  2849  005C  30F5               	movlw	245
  2850  005D  0086               	movwf	6
  2851  005E  3022               	movlw	34
  2852  005F  0087               	movwf	7
  2853  0060  3153               	addfsr 1,19
  2854  0061  0181               	clrf	1
  2855                           
  2856                           ;main.c: 238: I2C_buffer.data.selected2 = 1;
  2857  0062  3042               	movlw	66
  2858  0063  0086               	movwf	6
  2859  0064  3023               	movlw	35
  2860  0065  0087               	movwf	7
  2861  0066  3001               	movlw	1
  2862  0067  0081               	movwf	1
  2863                           
  2864                           ;main.c: 239: I2C_buffer.data.selected3 = 0;
  2865  0068  307C               	movlw	124
  2866  0069  0086               	movwf	6
  2867  006A  3023               	movlw	35
  2868  006B  0087               	movwf	7
  2869  006C  0181               	clrf	1
  2870                           
  2871                           ;main.c: 240: I2C_buffer.data.selected4 = 0;
  2872  006D  30B6               	movlw	182
  2873  006E  0086               	movwf	6
  2874  006F  3023               	movlw	35
  2875  0070  0087               	movwf	7
  2876  0071  0181               	clrf	1
  2877  0072                     i1l1694:	
  2878                           
  2879                           ;main.c: 241: };main.c: 242: if (IOCBFbits.IOCBF6 == 1) {
  2880  0072  1F16               	btfss	22,6	;volatile
  2881  0073  288A               	goto	i1l1704
  2882                           
  2883                           ;main.c: 243: I2C_buffer.data.selected1 = 0;
  2884  0074  30F5               	movlw	245
  2885  0075  0086               	movwf	6
  2886  0076  3022               	movlw	34
  2887  0077  0087               	movwf	7
  2888  0078  3153               	addfsr 1,19
  2889  0079  0181               	clrf	1
  2890                           
  2891                           ;main.c: 244: I2C_buffer.data.selected2 = 0;
  2892  007A  3042               	movlw	66
  2893  007B  0086               	movwf	6
  2894  007C  3023               	movlw	35
  2895  007D  0087               	movwf	7
  2896  007E  0181               	clrf	1
  2897                           
  2898                           ;main.c: 245: I2C_buffer.data.selected3 = 1;
  2899  007F  307C               	movlw	124
  2900  0080  0086               	movwf	6
  2901  0081  3023               	movlw	35
  2902  0082  0087               	movwf	7
  2903  0083  3001               	movlw	1
  2904  0084  0081               	movwf	1
  2905                           
  2906                           ;main.c: 246: I2C_buffer.data.selected4 = 0;
  2907  0085  30B6               	movlw	182
  2908  0086  0086               	movwf	6
  2909  0087  3023               	movlw	35
  2910  0088  0087               	movwf	7
  2911  0089  0181               	clrf	1
  2912  008A                     i1l1704:	
  2913                           
  2914                           ;main.c: 247: };main.c: 248: if (IOCBFbits.IOCBF7 == 1) {
  2915  008A  1F96               	btfss	22,7	;volatile
  2916  008B  28A2               	goto	i1l126
  2917                           
  2918                           ;main.c: 249: I2C_buffer.data.selected1 = 0;
  2919  008C  30F5               	movlw	245
  2920  008D  0086               	movwf	6
  2921  008E  3022               	movlw	34
  2922  008F  0087               	movwf	7
  2923  0090  3153               	addfsr 1,19
  2924  0091  0181               	clrf	1
  2925                           
  2926                           ;main.c: 250: I2C_buffer.data.selected2 = 0;
  2927  0092  3042               	movlw	66
  2928  0093  0086               	movwf	6
  2929  0094  3023               	movlw	35
  2930  0095  0087               	movwf	7
  2931  0096  0181               	clrf	1
  2932                           
  2933                           ;main.c: 251: I2C_buffer.data.selected3 = 0;
  2934  0097  307C               	movlw	124
  2935  0098  0086               	movwf	6
  2936  0099  3023               	movlw	35
  2937  009A  0087               	movwf	7
  2938  009B  0181               	clrf	1
  2939                           
  2940                           ;main.c: 252: I2C_buffer.data.selected4 = 1;
  2941  009C  30B6               	movlw	182
  2942  009D  0086               	movwf	6
  2943  009E  3023               	movlw	35
  2944  009F  0087               	movwf	7
  2945  00A0  3001               	movlw	1
  2946  00A1  0081               	movwf	1
  2947  00A2                     i1l126:	
  2948                           
  2949                           ;main.c: 253: };main.c: 254: IOCBF = 0;
  2950  00A2  0196               	clrf	22	;volatile
  2951                           
  2952                           ;main.c: 255: INTCONbits.IOCIE = 1;
  2953  00A3  158B               	bsf	11,3	;volatile
  2954  00A4                     i1l1716:	
  2955                           
  2956                           ;main.c: 256: };main.c: 258: if (PIR1bits.TMR1IF == 1)
  2957  00A4  0020               	movlb	0	; select bank0
  2958  00A5  1C11               	btfss	17,0	;volatile
  2959  00A6  2A8F               	goto	i1l1746
  2960                           
  2961                           ;main.c: 259: {;main.c: 260: T1CONbits.TMR1ON = 0;
  2962  00A7  1018               	bcf	24,0	;volatile
  2963  00A8  0064               	clrwdt	;# 
  2964                           
  2965                           ;main.c: 262: if (average < 10) {
  2966  00A9  300A               	movlw	10
  2967  00AA  0020               	movlb	0	; select bank0
  2968  00AB  0264               	subwf	_average,w
  2969  00AC  1803               	skipnc
  2970  00AD  28D7               	goto	i1l1726
  2971                           
  2972                           ;main.c: 263: stock1 += ADC_read(0x00);
  2973  00AE  3000               	movlw	0
  2974  00AF  318F  272D  3180   	fcall	_ADC_read
  2975  00B2  0870               	movf	?_ADC_read,w
  2976  00B3  0020               	movlb	0	; select bank0
  2977  00B4  07E1               	addwf	_stock1,f
  2978  00B5  0871               	movf	?_ADC_read+1,w
  2979  00B6  3DE2               	addwfc	_stock1+1,f
  2980                           
  2981                           ;main.c: 264: stock2 += ADC_read(0x01);
  2982  00B7  3001               	movlw	1
  2983  00B8  318F  272D  3180   	fcall	_ADC_read
  2984  00BB  0870               	movf	?_ADC_read,w
  2985  00BC  0020               	movlb	0	; select bank0
  2986  00BD  07DF               	addwf	_stock2,f
  2987  00BE  0871               	movf	?_ADC_read+1,w
  2988  00BF  3DE0               	addwfc	_stock2+1,f
  2989                           
  2990                           ;main.c: 265: stock3 += ADC_read(0x02);
  2991  00C0  3002               	movlw	2
  2992  00C1  318F  272D  3180   	fcall	_ADC_read
  2993  00C4  0870               	movf	?_ADC_read,w
  2994  00C5  0020               	movlb	0	; select bank0
  2995  00C6  07DD               	addwf	_stock3,f
  2996  00C7  0871               	movf	?_ADC_read+1,w
  2997  00C8  3DDE               	addwfc	_stock3+1,f
  2998                           
  2999                           ;main.c: 266: stock4 += ADC_read(0x03);
  3000  00C9  3003               	movlw	3
  3001  00CA  318F  272D  3180   	fcall	_ADC_read
  3002  00CD  0870               	movf	?_ADC_read,w
  3003  00CE  0020               	movlb	0	; select bank0
  3004  00CF  07DB               	addwf	_stock4,f
  3005  00D0  0871               	movf	?_ADC_read+1,w
  3006  00D1  3DDC               	addwfc	_stock4+1,f
  3007                           
  3008                           ;main.c: 267: average++;
  3009  00D2  3001               	movlw	1
  3010  00D3  00D1               	movwf	??_isr
  3011  00D4  0851               	movf	??_isr,w
  3012  00D5  07E4               	addwf	_average,f
  3013                           
  3014                           ;main.c: 268: } else {
  3015  00D6  2A8D               	goto	i1l1742
  3016  00D7                     i1l1726:	
  3017                           
  3018                           ;main.c: 269: if (I2C_buffer.data.calibrate == 1) {
  3019  00D7  30F5               	movlw	245
  3020  00D8  0086               	movwf	6
  3021  00D9  3022               	movlw	34
  3022  00DA  0087               	movwf	7
  3023  00DB  314E               	addfsr 1,14
  3024  00DC  0301               	decf	1,w
  3025  00DD  1D03               	btfss	3,2
  3026  00DE  292C               	goto	i1l1730
  3027                           
  3028                           ;main.c: 270: I2C_buffer.data.stock1 = stock1 / 10;
  3029  00DF  300A               	movlw	10
  3030  00E0  00F0               	movwf	___lwdiv@divisor
  3031  00E1  3000               	movlw	0
  3032  00E2  00F1               	movwf	___lwdiv@divisor+1
  3033  00E3  0862               	movf	_stock1+1,w
  3034  00E4  00F3               	movwf	___lwdiv@dividend+1
  3035  00E5  0861               	movf	_stock1,w
  3036  00E6  00F2               	movwf	___lwdiv@dividend
  3037  00E7  318F  277A  3180   	fcall	___lwdiv
  3038  00EA  303A               	movlw	58
  3039  00EB  0086               	movwf	6
  3040  00EC  3023               	movlw	35
  3041  00ED  0087               	movwf	7
  3042  00EE  0870               	movf	?___lwdiv,w
  3043  00EF  3FC0               	movwi [0]fsr1
  3044  00F0  0871               	movf	?___lwdiv+1,w
  3045  00F1  3FC1               	movwi [1]fsr1
  3046                           
  3047                           ;main.c: 271: I2C_buffer.data.stock2 = stock2 / 10;
  3048  00F2  300A               	movlw	10
  3049  00F3  00F0               	movwf	___lwdiv@divisor
  3050  00F4  3000               	movlw	0
  3051  00F5  00F1               	movwf	___lwdiv@divisor+1
  3052  00F6  0860               	movf	_stock2+1,w
  3053  00F7  00F3               	movwf	___lwdiv@dividend+1
  3054  00F8  085F               	movf	_stock2,w
  3055  00F9  00F2               	movwf	___lwdiv@dividend
  3056  00FA  318F  277A  3180   	fcall	___lwdiv
  3057  00FD  3074               	movlw	116
  3058  00FE  0086               	movwf	6
  3059  00FF  3023               	movlw	35
  3060  0100  0087               	movwf	7
  3061  0101  0870               	movf	?___lwdiv,w
  3062  0102  3FC0               	movwi [0]fsr1
  3063  0103  0871               	movf	?___lwdiv+1,w
  3064  0104  3FC1               	movwi [1]fsr1
  3065                           
  3066                           ;main.c: 272: I2C_buffer.data.stock3 = stock3 / 10;
  3067  0105  300A               	movlw	10
  3068  0106  00F0               	movwf	___lwdiv@divisor
  3069  0107  3000               	movlw	0
  3070  0108  00F1               	movwf	___lwdiv@divisor+1
  3071  0109  085E               	movf	_stock3+1,w
  3072  010A  00F3               	movwf	___lwdiv@dividend+1
  3073  010B  085D               	movf	_stock3,w
  3074  010C  00F2               	movwf	___lwdiv@dividend
  3075  010D  318F  277A  3180   	fcall	___lwdiv
  3076  0110  30AE               	movlw	174
  3077  0111  0086               	movwf	6
  3078  0112  3023               	movlw	35
  3079  0113  0087               	movwf	7
  3080  0114  0870               	movf	?___lwdiv,w
  3081  0115  3FC0               	movwi [0]fsr1
  3082  0116  0871               	movf	?___lwdiv+1,w
  3083  0117  3FC1               	movwi [1]fsr1
  3084                           
  3085                           ;main.c: 273: I2C_buffer.data.stock4 = stock4 / 10;
  3086  0118  300A               	movlw	10
  3087  0119  00F0               	movwf	___lwdiv@divisor
  3088  011A  3000               	movlw	0
  3089  011B  00F1               	movwf	___lwdiv@divisor+1
  3090  011C  085C               	movf	_stock4+1,w
  3091  011D  00F3               	movwf	___lwdiv@dividend+1
  3092  011E  085B               	movf	_stock4,w
  3093  011F  00F2               	movwf	___lwdiv@dividend
  3094  0120  318F  277A  3180   	fcall	___lwdiv
  3095  0123  30E8               	movlw	232
  3096  0124  0086               	movwf	6
  3097  0125  3023               	movlw	35
  3098  0126  0087               	movwf	7
  3099  0127  0870               	movf	?___lwdiv,w
  3100  0128  3FC0               	movwi [0]fsr1
  3101  0129  0871               	movf	?___lwdiv+1,w
  3102  012A  3FC1               	movwi [1]fsr1
  3103                           
  3104                           ;main.c: 274: } else {
  3105  012B  2A84               	goto	i1l1732
  3106  012C                     i1l1730:	
  3107                           
  3108                           ;main.c: 275: I2C_buffer.data.stock1 = map((stock1 / 10), I2C_buffer.data.emptyLevel1, I
      +                          2C_buffer.data.fullLevel1, 0, I2C_buffer.data.capacity1);
  3109  012C  300A               	movlw	10
  3110  012D  00F0               	movwf	___lwdiv@divisor
  3111  012E  3000               	movlw	0
  3112  012F  00F1               	movwf	___lwdiv@divisor+1
  3113  0130  0862               	movf	_stock1+1,w
  3114  0131  00F3               	movwf	___lwdiv@dividend+1
  3115  0132  0861               	movf	_stock1,w
  3116  0133  00F2               	movwf	___lwdiv@dividend
  3117  0134  318F  277A  3180   	fcall	___lwdiv
  3118  0137  0870               	movf	?___lwdiv,w
  3119  0138  00D1               	movwf	??_isr
  3120  0139  0871               	movf	?___lwdiv+1,w
  3121  013A  00D2               	movwf	??_isr+1
  3122  013B  01D3               	clrf	??_isr+2
  3123  013C  01D4               	clrf	??_isr+3
  3124  013D  0854               	movf	??_isr+3,w
  3125  013E  00B0               	movwf	map@x+3
  3126  013F  0853               	movf	??_isr+2,w
  3127  0140  00AF               	movwf	map@x+2
  3128  0141  0852               	movf	??_isr+1,w
  3129  0142  00AE               	movwf	map@x+1
  3130  0143  0851               	movf	??_isr,w
  3131  0144  00AD               	movwf	map@x
  3132  0145  303E               	movlw	62
  3133  0146  0086               	movwf	6
  3134  0147  3023               	movlw	35
  3135  0148  0087               	movwf	7
  3136  0149  3F40               	moviw [0]fsr1
  3137  014A  00D5               	movwf	??_isr+4
  3138  014B  3F41               	moviw [1]fsr1
  3139  014C  00D6               	movwf	??_isr+5
  3140  014D  0855               	movf	??_isr+4,w
  3141  014E  00B1               	movwf	map@in_min
  3142  014F  0856               	movf	??_isr+5,w
  3143  0150  00B2               	movwf	map@in_min+1
  3144  0151  01B3               	clrf	map@in_min+2
  3145  0152  01B4               	clrf	map@in_min+3
  3146  0153  3040               	movlw	64
  3147  0154  0086               	movwf	6
  3148  0155  3023               	movlw	35
  3149  0156  0087               	movwf	7
  3150  0157  3F40               	moviw [0]fsr1
  3151  0158  00D7               	movwf	??_isr+6
  3152  0159  3F41               	moviw [1]fsr1
  3153  015A  00D8               	movwf	??_isr+7
  3154  015B  0857               	movf	??_isr+6,w
  3155  015C  00B5               	movwf	map@in_max
  3156  015D  0858               	movf	??_isr+7,w
  3157  015E  00B6               	movwf	map@in_max+1
  3158  015F  01B7               	clrf	map@in_max+2
  3159  0160  01B8               	clrf	map@in_max+3
  3160  0161  3000               	movlw	0
  3161  0162  00BC               	movwf	map@out_min+3
  3162  0163  3000               	movlw	0
  3163  0164  00BB               	movwf	map@out_min+2
  3164  0165  3000               	movlw	0
  3165  0166  00BA               	movwf	map@out_min+1
  3166  0167  3000               	movlw	0
  3167  0168  00B9               	movwf	map@out_min
  3168  0169  303C               	movlw	60
  3169  016A  0086               	movwf	6
  3170  016B  3023               	movlw	35
  3171  016C  0087               	movwf	7
  3172  016D  3F40               	moviw [0]fsr1
  3173  016E  00D9               	movwf	??_isr+8
  3174  016F  3F41               	moviw [1]fsr1
  3175  0170  00DA               	movwf	??_isr+9
  3176  0171  0859               	movf	??_isr+8,w
  3177  0172  00BD               	movwf	map@out_max
  3178  0173  085A               	movf	??_isr+9,w
  3179  0174  00BE               	movwf	map@out_max+1
  3180  0175  01BF               	clrf	map@out_max+2
  3181  0176  01C0               	clrf	map@out_max+3
  3182  0177  3187  2778  3180   	fcall	_map
  3183  017A  303A               	movlw	58
  3184  017B  0086               	movwf	6
  3185  017C  3023               	movlw	35
  3186  017D  0087               	movwf	7
  3187  017E  082D               	movf	?_map,w
  3188  017F  3FC0               	movwi [0]fsr1
  3189  0180  082E               	movf	?_map+1,w
  3190  0181  3FC1               	movwi [1]fsr1
  3191                           
  3192                           ;main.c: 276: I2C_buffer.data.stock2 = map((stock2 / 10), I2C_buffer.data.emptyLevel2, I
      +                          2C_buffer.data.fullLevel2, 0, I2C_buffer.data.capacity2);
  3193  0182  300A               	movlw	10
  3194  0183  00F0               	movwf	___lwdiv@divisor
  3195  0184  3000               	movlw	0
  3196  0185  00F1               	movwf	___lwdiv@divisor+1
  3197  0186  0860               	movf	_stock2+1,w
  3198  0187  00F3               	movwf	___lwdiv@dividend+1
  3199  0188  085F               	movf	_stock2,w
  3200  0189  00F2               	movwf	___lwdiv@dividend
  3201  018A  318F  277A  3180   	fcall	___lwdiv
  3202  018D  0870               	movf	?___lwdiv,w
  3203  018E  00D1               	movwf	??_isr
  3204  018F  0871               	movf	?___lwdiv+1,w
  3205  0190  00D2               	movwf	??_isr+1
  3206  0191  01D3               	clrf	??_isr+2
  3207  0192  01D4               	clrf	??_isr+3
  3208  0193  0854               	movf	??_isr+3,w
  3209  0194  00B0               	movwf	map@x+3
  3210  0195  0853               	movf	??_isr+2,w
  3211  0196  00AF               	movwf	map@x+2
  3212  0197  0852               	movf	??_isr+1,w
  3213  0198  00AE               	movwf	map@x+1
  3214  0199  0851               	movf	??_isr,w
  3215  019A  00AD               	movwf	map@x
  3216  019B  3078               	movlw	120
  3217  019C  0086               	movwf	6
  3218  019D  3023               	movlw	35
  3219  019E  0087               	movwf	7
  3220  019F  3F40               	moviw [0]fsr1
  3221  01A0  00D5               	movwf	??_isr+4
  3222  01A1  3F41               	moviw [1]fsr1
  3223  01A2  00D6               	movwf	??_isr+5
  3224  01A3  0855               	movf	??_isr+4,w
  3225  01A4  00B1               	movwf	map@in_min
  3226  01A5  0856               	movf	??_isr+5,w
  3227  01A6  00B2               	movwf	map@in_min+1
  3228  01A7  01B3               	clrf	map@in_min+2
  3229  01A8  01B4               	clrf	map@in_min+3
  3230  01A9  307A               	movlw	122
  3231  01AA  0086               	movwf	6
  3232  01AB  3023               	movlw	35
  3233  01AC  0087               	movwf	7
  3234  01AD  3F40               	moviw [0]fsr1
  3235  01AE  00D7               	movwf	??_isr+6
  3236  01AF  3F41               	moviw [1]fsr1
  3237  01B0  00D8               	movwf	??_isr+7
  3238  01B1  0857               	movf	??_isr+6,w
  3239  01B2  00B5               	movwf	map@in_max
  3240  01B3  0858               	movf	??_isr+7,w
  3241  01B4  00B6               	movwf	map@in_max+1
  3242  01B5  01B7               	clrf	map@in_max+2
  3243  01B6  01B8               	clrf	map@in_max+3
  3244  01B7  3000               	movlw	0
  3245  01B8  00BC               	movwf	map@out_min+3
  3246  01B9  3000               	movlw	0
  3247  01BA  00BB               	movwf	map@out_min+2
  3248  01BB  3000               	movlw	0
  3249  01BC  00BA               	movwf	map@out_min+1
  3250  01BD  3000               	movlw	0
  3251  01BE  00B9               	movwf	map@out_min
  3252  01BF  3076               	movlw	118
  3253  01C0  0086               	movwf	6
  3254  01C1  3023               	movlw	35
  3255  01C2  0087               	movwf	7
  3256  01C3  3F40               	moviw [0]fsr1
  3257  01C4  00D9               	movwf	??_isr+8
  3258  01C5  3F41               	moviw [1]fsr1
  3259  01C6  00DA               	movwf	??_isr+9
  3260  01C7  0859               	movf	??_isr+8,w
  3261  01C8  00BD               	movwf	map@out_max
  3262  01C9  085A               	movf	??_isr+9,w
  3263  01CA  00BE               	movwf	map@out_max+1
  3264  01CB  01BF               	clrf	map@out_max+2
  3265  01CC  01C0               	clrf	map@out_max+3
  3266  01CD  3187  2778  3180   	fcall	_map
  3267  01D0  3074               	movlw	116
  3268  01D1  0086               	movwf	6
  3269  01D2  3023               	movlw	35
  3270  01D3  0087               	movwf	7
  3271  01D4  082D               	movf	?_map,w
  3272  01D5  3FC0               	movwi [0]fsr1
  3273  01D6  082E               	movf	?_map+1,w
  3274  01D7  3FC1               	movwi [1]fsr1
  3275                           
  3276                           ;main.c: 277: I2C_buffer.data.stock3 = map((stock3 / 10), I2C_buffer.data.emptyLevel3, I
      +                          2C_buffer.data.fullLevel3, 0, I2C_buffer.data.capacity3);
  3277  01D8  300A               	movlw	10
  3278  01D9  00F0               	movwf	___lwdiv@divisor
  3279  01DA  3000               	movlw	0
  3280  01DB  00F1               	movwf	___lwdiv@divisor+1
  3281  01DC  085E               	movf	_stock3+1,w
  3282  01DD  00F3               	movwf	___lwdiv@dividend+1
  3283  01DE  085D               	movf	_stock3,w
  3284  01DF  00F2               	movwf	___lwdiv@dividend
  3285  01E0  318F  277A  3180   	fcall	___lwdiv
  3286  01E3  0870               	movf	?___lwdiv,w
  3287  01E4  00D1               	movwf	??_isr
  3288  01E5  0871               	movf	?___lwdiv+1,w
  3289  01E6  00D2               	movwf	??_isr+1
  3290  01E7  01D3               	clrf	??_isr+2
  3291  01E8  01D4               	clrf	??_isr+3
  3292  01E9  0854               	movf	??_isr+3,w
  3293  01EA  00B0               	movwf	map@x+3
  3294  01EB  0853               	movf	??_isr+2,w
  3295  01EC  00AF               	movwf	map@x+2
  3296  01ED  0852               	movf	??_isr+1,w
  3297  01EE  00AE               	movwf	map@x+1
  3298  01EF  0851               	movf	??_isr,w
  3299  01F0  00AD               	movwf	map@x
  3300  01F1  30B2               	movlw	178
  3301  01F2  0086               	movwf	6
  3302  01F3  3023               	movlw	35
  3303  01F4  0087               	movwf	7
  3304  01F5  3F40               	moviw [0]fsr1
  3305  01F6  00D5               	movwf	??_isr+4
  3306  01F7  3F41               	moviw [1]fsr1
  3307  01F8  00D6               	movwf	??_isr+5
  3308  01F9  0855               	movf	??_isr+4,w
  3309  01FA  00B1               	movwf	map@in_min
  3310  01FB  0856               	movf	??_isr+5,w
  3311  01FC  00B2               	movwf	map@in_min+1
  3312  01FD  01B3               	clrf	map@in_min+2
  3313  01FE  01B4               	clrf	map@in_min+3
  3314  01FF  30B4               	movlw	180
  3315  0200  0086               	movwf	6
  3316  0201  3023               	movlw	35
  3317  0202  0087               	movwf	7
  3318  0203  3F40               	moviw [0]fsr1
  3319  0204  00D7               	movwf	??_isr+6
  3320  0205  3F41               	moviw [1]fsr1
  3321  0206  00D8               	movwf	??_isr+7
  3322  0207  0857               	movf	??_isr+6,w
  3323  0208  00B5               	movwf	map@in_max
  3324  0209  0858               	movf	??_isr+7,w
  3325  020A  00B6               	movwf	map@in_max+1
  3326  020B  01B7               	clrf	map@in_max+2
  3327  020C  01B8               	clrf	map@in_max+3
  3328  020D  3000               	movlw	0
  3329  020E  00BC               	movwf	map@out_min+3
  3330  020F  3000               	movlw	0
  3331  0210  00BB               	movwf	map@out_min+2
  3332  0211  3000               	movlw	0
  3333  0212  00BA               	movwf	map@out_min+1
  3334  0213  3000               	movlw	0
  3335  0214  00B9               	movwf	map@out_min
  3336  0215  30B0               	movlw	176
  3337  0216  0086               	movwf	6
  3338  0217  3023               	movlw	35
  3339  0218  0087               	movwf	7
  3340  0219  3F40               	moviw [0]fsr1
  3341  021A  00D9               	movwf	??_isr+8
  3342  021B  3F41               	moviw [1]fsr1
  3343  021C  00DA               	movwf	??_isr+9
  3344  021D  0859               	movf	??_isr+8,w
  3345  021E  00BD               	movwf	map@out_max
  3346  021F  085A               	movf	??_isr+9,w
  3347  0220  00BE               	movwf	map@out_max+1
  3348  0221  01BF               	clrf	map@out_max+2
  3349  0222  01C0               	clrf	map@out_max+3
  3350  0223  3187  2778  3180   	fcall	_map
  3351  0226  30AE               	movlw	174
  3352  0227  0086               	movwf	6
  3353  0228  3023               	movlw	35
  3354  0229  0087               	movwf	7
  3355  022A  082D               	movf	?_map,w
  3356  022B  3FC0               	movwi [0]fsr1
  3357  022C  082E               	movf	?_map+1,w
  3358  022D  3FC1               	movwi [1]fsr1
  3359                           
  3360                           ;main.c: 278: I2C_buffer.data.stock4 = map((stock4 / 10), I2C_buffer.data.emptyLevel4, I
      +                          2C_buffer.data.fullLevel4, 0, I2C_buffer.data.capacity4);
  3361  022E  300A               	movlw	10
  3362  022F  00F0               	movwf	___lwdiv@divisor
  3363  0230  3000               	movlw	0
  3364  0231  00F1               	movwf	___lwdiv@divisor+1
  3365  0232  085C               	movf	_stock4+1,w
  3366  0233  00F3               	movwf	___lwdiv@dividend+1
  3367  0234  085B               	movf	_stock4,w
  3368  0235  00F2               	movwf	___lwdiv@dividend
  3369  0236  318F  277A  3180   	fcall	___lwdiv
  3370  0239  0870               	movf	?___lwdiv,w
  3371  023A  00D1               	movwf	??_isr
  3372  023B  0871               	movf	?___lwdiv+1,w
  3373  023C  00D2               	movwf	??_isr+1
  3374  023D  01D3               	clrf	??_isr+2
  3375  023E  01D4               	clrf	??_isr+3
  3376  023F  0854               	movf	??_isr+3,w
  3377  0240  00B0               	movwf	map@x+3
  3378  0241  0853               	movf	??_isr+2,w
  3379  0242  00AF               	movwf	map@x+2
  3380  0243  0852               	movf	??_isr+1,w
  3381  0244  00AE               	movwf	map@x+1
  3382  0245  0851               	movf	??_isr,w
  3383  0246  00AD               	movwf	map@x
  3384  0247  30EC               	movlw	236
  3385  0248  0086               	movwf	6
  3386  0249  3023               	movlw	35
  3387  024A  0087               	movwf	7
  3388  024B  3F40               	moviw [0]fsr1
  3389  024C  00D5               	movwf	??_isr+4
  3390  024D  3F41               	moviw [1]fsr1
  3391  024E  00D6               	movwf	??_isr+5
  3392  024F  0855               	movf	??_isr+4,w
  3393  0250  00B1               	movwf	map@in_min
  3394  0251  0856               	movf	??_isr+5,w
  3395  0252  00B2               	movwf	map@in_min+1
  3396  0253  01B3               	clrf	map@in_min+2
  3397  0254  01B4               	clrf	map@in_min+3
  3398  0255  30EE               	movlw	238
  3399  0256  0086               	movwf	6
  3400  0257  3023               	movlw	35
  3401  0258  0087               	movwf	7
  3402  0259  3F40               	moviw [0]fsr1
  3403  025A  00D7               	movwf	??_isr+6
  3404  025B  3F41               	moviw [1]fsr1
  3405  025C  00D8               	movwf	??_isr+7
  3406  025D  0857               	movf	??_isr+6,w
  3407  025E  00B5               	movwf	map@in_max
  3408  025F  0858               	movf	??_isr+7,w
  3409  0260  00B6               	movwf	map@in_max+1
  3410  0261  01B7               	clrf	map@in_max+2
  3411  0262  01B8               	clrf	map@in_max+3
  3412  0263  3000               	movlw	0
  3413  0264  00BC               	movwf	map@out_min+3
  3414  0265  3000               	movlw	0
  3415  0266  00BB               	movwf	map@out_min+2
  3416  0267  3000               	movlw	0
  3417  0268  00BA               	movwf	map@out_min+1
  3418  0269  3000               	movlw	0
  3419  026A  00B9               	movwf	map@out_min
  3420  026B  30EA               	movlw	234
  3421  026C  0086               	movwf	6
  3422  026D  3023               	movlw	35
  3423  026E  0087               	movwf	7
  3424  026F  3F40               	moviw [0]fsr1
  3425  0270  00D9               	movwf	??_isr+8
  3426  0271  3F41               	moviw [1]fsr1
  3427  0272  00DA               	movwf	??_isr+9
  3428  0273  0859               	movf	??_isr+8,w
  3429  0274  00BD               	movwf	map@out_max
  3430  0275  085A               	movf	??_isr+9,w
  3431  0276  00BE               	movwf	map@out_max+1
  3432  0277  01BF               	clrf	map@out_max+2
  3433  0278  01C0               	clrf	map@out_max+3
  3434  0279  3187  2778  3180   	fcall	_map
  3435  027C  30E8               	movlw	232
  3436  027D  0086               	movwf	6
  3437  027E  3023               	movlw	35
  3438  027F  0087               	movwf	7
  3439  0280  082D               	movf	?_map,w
  3440  0281  3FC0               	movwi [0]fsr1
  3441  0282  082E               	movf	?_map+1,w
  3442  0283  3FC1               	movwi [1]fsr1
  3443  0284                     i1l1732:	
  3444                           
  3445                           ;main.c: 279: };main.c: 280: stock1 = 0;
  3446  0284  01E1               	clrf	_stock1
  3447  0285  01E2               	clrf	_stock1+1
  3448                           
  3449                           ;main.c: 281: stock2 = 0;
  3450  0286  01DF               	clrf	_stock2
  3451  0287  01E0               	clrf	_stock2+1
  3452                           
  3453                           ;main.c: 282: stock3 = 0;
  3454  0288  01DD               	clrf	_stock3
  3455  0289  01DE               	clrf	_stock3+1
  3456                           
  3457                           ;main.c: 283: stock4 = 0;
  3458  028A  01DB               	clrf	_stock4
  3459  028B  01DC               	clrf	_stock4+1
  3460                           
  3461                           ;main.c: 284: average = 0;
  3462  028C  01E4               	clrf	_average
  3463  028D                     i1l1742:	
  3464                           
  3465                           ;main.c: 285: };main.c: 286: PIR1bits.TMR1IF = 0;
  3466  028D  1011               	bcf	17,0	;volatile
  3467                           
  3468                           ;main.c: 287: T1CONbits.TMR1ON = 1;
  3469  028E  1418               	bsf	24,0	;volatile
  3470  028F                     i1l1746:	
  3471                           
  3472                           ;main.c: 288: };main.c: 290: static unsigned char junk = 0;;main.c: 292: if (PIR1bits.SS
      +                          P1IF)
  3473  028F  1D91               	btfss	17,3	;volatile
  3474  0290  2B09               	goto	i1l1804
  3475                           
  3476                           ;main.c: 293: {;main.c: 294: INTCONbits.IOCIE = 0;
  3477  0291  118B               	bcf	11,3	;volatile
  3478                           
  3479                           ;main.c: 295: PIE1bits.TMR1IE = 0;
  3480  0292  0021               	movlb	1	; select bank1
  3481  0293  1011               	bcf	17,0	;volatile
  3482                           
  3483                           ;main.c: 296: if (SSP1STATbits.R_nW)
  3484  0294  0024               	movlb	4	; select bank4
  3485  0295  1D14               	btfss	20,2	;volatile
  3486  0296  2ABD               	goto	i1l1766
  3487                           
  3488                           ;main.c: 297: {;main.c: 298: if (!SSP1STATbits.D_nA)
  3489  0297  1A94               	btfsc	20,5	;volatile
  3490  0298  2AAA               	goto	i1l1758
  3491                           
  3492                           ;main.c: 299: {;main.c: 300: SSP1BUF = I2C_buffer.byte[index_i2c++];
  3493  0299  0020               	movlb	0	; select bank0
  3494  029A  0865               	movf	_index_i2c,w	;volatile
  3495  029B  3EF5               	addlw	245
  3496  029C  0086               	movwf	6
  3497  029D  0187               	clrf	7
  3498  029E  3022               	movlw	34
  3499  029F  3D87               	addwfc	7,f
  3500  02A0  0801               	movf	1,w
  3501  02A1  0024               	movlb	4	; select bank4
  3502  02A2  0091               	movwf	17	;volatile
  3503  02A3  3001               	movlw	1
  3504  02A4  0020               	movlb	0	; select bank0
  3505  02A5  00D1               	movwf	??_isr
  3506  02A6  0851               	movf	??_isr,w
  3507  02A7  07E5               	addwf	_index_i2c,f	;volatile
  3508                           
  3509                           ;main.c: 301: SSP1CON1bits.CKP = 1;
  3510  02A8  0024               	movlb	4	; select bank4
  3511  02A9  1615               	bsf	21,4	;volatile
  3512  02AA                     i1l1758:	
  3513                           
  3514                           ;main.c: 302: };main.c: 303: if (SSP1STATbits.D_nA)
  3515  02AA  1E94               	btfss	20,5	;volatile
  3516  02AB  2ABD               	goto	i1l1766
  3517                           
  3518                           ;main.c: 304: {;main.c: 305: SSP1BUF = I2C_buffer.byte[index_i2c++];
  3519  02AC  0020               	movlb	0	; select bank0
  3520  02AD  0865               	movf	_index_i2c,w	;volatile
  3521  02AE  3EF5               	addlw	245
  3522  02AF  0086               	movwf	6
  3523  02B0  0187               	clrf	7
  3524  02B1  3022               	movlw	34
  3525  02B2  3D87               	addwfc	7,f
  3526  02B3  0801               	movf	1,w
  3527  02B4  0024               	movlb	4	; select bank4
  3528  02B5  0091               	movwf	17	;volatile
  3529  02B6  3001               	movlw	1
  3530  02B7  0020               	movlb	0	; select bank0
  3531  02B8  00D1               	movwf	??_isr
  3532  02B9  0851               	movf	??_isr,w
  3533  02BA  07E5               	addwf	_index_i2c,f	;volatile
  3534                           
  3535                           ;main.c: 306: SSP1CON1bits.CKP = 1;
  3536  02BB  0024               	movlb	4	; select bank4
  3537  02BC  1615               	bsf	21,4	;volatile
  3538  02BD                     i1l1766:	
  3539                           
  3540                           ;main.c: 307: };main.c: 308: };main.c: 309: if (!SSP1STATbits.R_nW)
  3541  02BD  1914               	btfsc	20,2	;volatile
  3542  02BE  2B04               	goto	i1l1798
  3543                           
  3544                           ;main.c: 310: {;main.c: 311: if (!SSP1STATbits.D_nA)
  3545  02BF  1A94               	btfsc	20,5	;volatile
  3546  02C0  2ACE               	goto	i1l1774
  3547                           
  3548                           ;main.c: 312: {;main.c: 313: first_i2c = 1;
  3549  02C1  3001               	movlw	1
  3550  02C2  0020               	movlb	0	; select bank0
  3551  02C3  00D1               	movwf	??_isr
  3552  02C4  0851               	movf	??_isr,w
  3553  02C5  00E6               	movwf	_first_i2c	;volatile
  3554                           
  3555                           ;main.c: 314: junk = SSP1BUF;
  3556  02C6  0024               	movlb	4	; select bank4
  3557  02C7  0811               	movf	17,w	;volatile
  3558  02C8  0020               	movlb	0	; select bank0
  3559  02C9  00D1               	movwf	??_isr
  3560  02CA  0851               	movf	??_isr,w
  3561  02CB  00E3               	movwf	isr@junk
  3562                           
  3563                           ;main.c: 315: SSP1CON1bits.CKP = 1;
  3564  02CC  0024               	movlb	4	; select bank4
  3565  02CD  1615               	bsf	21,4	;volatile
  3566  02CE                     i1l1774:	
  3567                           
  3568                           ;main.c: 316: };main.c: 317: if (SSP1STATbits.D_nA)
  3569  02CE  1E94               	btfss	20,5	;volatile
  3570  02CF  2B04               	goto	i1l1798
  3571                           
  3572                           ;main.c: 318: {;main.c: 319: if (first_i2c) {
  3573  02D0  0020               	movlb	0	; select bank0
  3574  02D1  0866               	movf	_first_i2c,w	;volatile
  3575  02D2  1903               	btfsc	3,2
  3576  02D3  2ADC               	goto	i1l1782
  3577                           
  3578                           ;main.c: 320: index_i2c = SSP1BUF;
  3579  02D4  0024               	movlb	4	; select bank4
  3580  02D5  0811               	movf	17,w	;volatile
  3581  02D6  0020               	movlb	0	; select bank0
  3582  02D7  00D1               	movwf	??_isr
  3583  02D8  0851               	movf	??_isr,w
  3584  02D9  00E5               	movwf	_index_i2c	;volatile
  3585                           
  3586                           ;main.c: 321: first_i2c = 0;
  3587  02DA  01E6               	clrf	_first_i2c	;volatile
  3588                           
  3589                           ;main.c: 322: }
  3590  02DB  2AF9               	goto	i1l1790
  3591  02DC                     i1l1782:	
  3592                           
  3593                           ;main.c: 324: else {;main.c: 325: if (index_i2c < RX_ELMNTS)
  3594  02DC  30FB               	movlw	251
  3595  02DD  0265               	subwf	_index_i2c,w	;volatile
  3596  02DE  1803               	skipnc
  3597  02DF  2AF3               	goto	i1l1788
  3598                           
  3599                           ;main.c: 326: {;main.c: 327: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  3600  02E0  0865               	movf	_index_i2c,w	;volatile
  3601  02E1  3EF5               	addlw	245
  3602  02E2  00D1               	movwf	??_isr
  3603  02E3  01D2               	clrf	??_isr+1
  3604  02E4  3022               	movlw	34
  3605  02E5  3DD2               	addwfc	??_isr+1,f
  3606  02E6  0851               	movf	??_isr,w
  3607  02E7  0086               	movwf	6
  3608  02E8  0852               	movf	??_isr+1,w
  3609  02E9  0087               	movwf	7
  3610  02EA  0024               	movlb	4	; select bank4
  3611  02EB  0811               	movf	17,w	;volatile
  3612  02EC  0081               	movwf	1
  3613  02ED  3001               	movlw	1
  3614  02EE  0020               	movlb	0	; select bank0
  3615  02EF  00D1               	movwf	??_isr
  3616  02F0  0851               	movf	??_isr,w
  3617  02F1  07E5               	addwf	_index_i2c,f	;volatile
  3618                           
  3619                           ;main.c: 328: } else {
  3620  02F2  2AF9               	goto	i1l1790
  3621  02F3                     i1l1788:	
  3622                           
  3623                           ;main.c: 329: junk = SSP1BUF;
  3624  02F3  0024               	movlb	4	; select bank4
  3625  02F4  0811               	movf	17,w	;volatile
  3626  02F5  0020               	movlb	0	; select bank0
  3627  02F6  00D1               	movwf	??_isr
  3628  02F7  0851               	movf	??_isr,w
  3629  02F8  00E3               	movwf	isr@junk
  3630  02F9                     i1l1790:	
  3631                           
  3632                           ;main.c: 330: };main.c: 331: };main.c: 332: if (SSP1CON1bits.WCOL)
  3633  02F9  0024               	movlb	4	; select bank4
  3634  02FA  1F95               	btfss	21,7	;volatile
  3635  02FB  2B02               	goto	i1l1796
  3636                           
  3637                           ;main.c: 333: {;main.c: 334: SSP1CON1bits.WCOL = 0;
  3638  02FC  1395               	bcf	21,7	;volatile
  3639                           
  3640                           ;main.c: 335: junk = SSP1BUF;
  3641  02FD  0811               	movf	17,w	;volatile
  3642  02FE  0020               	movlb	0	; select bank0
  3643  02FF  00D1               	movwf	??_isr
  3644  0300  0851               	movf	??_isr,w
  3645  0301  00E3               	movwf	isr@junk
  3646  0302                     i1l1796:	
  3647                           
  3648                           ;main.c: 336: };main.c: 337: SSP1CON1bits.CKP = 1;
  3649  0302  0024               	movlb	4	; select bank4
  3650  0303  1615               	bsf	21,4	;volatile
  3651  0304                     i1l1798:	
  3652                           
  3653                           ;main.c: 338: };main.c: 339: };main.c: 340: PIR1bits.SSP1IF = 0;
  3654  0304  0020               	movlb	0	; select bank0
  3655  0305  1191               	bcf	17,3	;volatile
  3656                           
  3657                           ;main.c: 341: INTCONbits.IOCIE = 1;
  3658  0306  158B               	bsf	11,3	;volatile
  3659                           
  3660                           ;main.c: 342: PIE1bits.TMR1IE = 1;
  3661  0307  0021               	movlb	1	; select bank1
  3662  0308  1411               	bsf	17,0	;volatile
  3663  0309                     i1l1804:	
  3664                           
  3665                           ;main.c: 343: };main.c: 345: if (PIR2bits.BCL1IF)
  3666  0309  0020               	movlb	0	; select bank0
  3667  030A  1D92               	btfss	18,3	;volatile
  3668  030B  2B17               	goto	i1l147
  3669                           
  3670                           ;main.c: 346: {;main.c: 347: junk = SSP1BUF;
  3671  030C  0024               	movlb	4	; select bank4
  3672  030D  0811               	movf	17,w	;volatile
  3673  030E  0020               	movlb	0	; select bank0
  3674  030F  00D1               	movwf	??_isr
  3675  0310  0851               	movf	??_isr,w
  3676  0311  00E3               	movwf	isr@junk
  3677                           
  3678                           ;main.c: 348: PIR2bits.BCL1IF = 0;
  3679  0312  1192               	bcf	18,3	;volatile
  3680                           
  3681                           ;main.c: 349: SSP1CON1bits.CKP = 1;
  3682  0313  0024               	movlb	4	; select bank4
  3683  0314  1615               	bsf	21,4	;volatile
  3684                           
  3685                           ;main.c: 350: PIR1bits.SSP1IF = 0;
  3686  0315  0020               	movlb	0	; select bank0
  3687  0316  1191               	bcf	17,3	;volatile
  3688  0317                     i1l147:	
  3689  0317  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3690  0318  0009               	retfie
  3691  0319                     __end_of_isr:	
  3692                           
  3693                           	psect	text5
  3694  0778                     __ptext5:	
  3695 ;; *************** function _map *****************
  3696 ;; Defined at:
  3697 ;;		line 158 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  x               4   13[BANK0 ] unsigned long 
  3700 ;;  in_min          4   17[BANK0 ] unsigned long 
  3701 ;;  in_max          4   21[BANK0 ] unsigned long 
  3702 ;;  out_min         4   25[BANK0 ] unsigned long 
  3703 ;;  out_max         4   29[BANK0 ] unsigned long 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  4   13[BANK0 ] unsigned long 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, pclath, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 1F/0
  3712 ;;		On exit  : 1F/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3715 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;Total ram usage:       36 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    1
  3722 ;; This function calls:
  3723 ;;		___lldiv
  3724 ;;		___lmul
  3725 ;; This function is called by:
  3726 ;;		_isr
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           
  3731                           ;psect for function _map
  3732  0778                     _map:	
  3733                           
  3734                           ;main.c: 159: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3735                           
  3736                           ;incstack = 0
  3737                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3738  0778  0831               	movf	map@in_min,w
  3739  0779  0235               	subwf	map@in_max,w
  3740  077A  00C1               	movwf	??_map
  3741  077B  0832               	movf	map@in_min+1,w
  3742  077C  3B36               	subwfb	map@in_max+1,w
  3743  077D  00C2               	movwf	??_map+1
  3744  077E  0833               	movf	map@in_min+2,w
  3745  077F  3B37               	subwfb	map@in_max+2,w
  3746  0780  00C3               	movwf	??_map+2
  3747  0781  0834               	movf	map@in_min+3,w
  3748  0782  3B38               	subwfb	map@in_max+3,w
  3749  0783  00C4               	movwf	??_map+3
  3750  0784  0844               	movf	??_map+3,w
  3751  0785  00A3               	movwf	___lldiv@divisor+3
  3752  0786  0843               	movf	??_map+2,w
  3753  0787  00A2               	movwf	___lldiv@divisor+2
  3754  0788  0842               	movf	??_map+1,w
  3755  0789  00A1               	movwf	___lldiv@divisor+1
  3756  078A  0841               	movf	??_map,w
  3757  078B  00A0               	movwf	___lldiv@divisor
  3758  078C  0831               	movf	map@in_min,w
  3759  078D  022D               	subwf	map@x,w
  3760  078E  00C5               	movwf	??_map+4
  3761  078F  0832               	movf	map@in_min+1,w
  3762  0790  3B2E               	subwfb	map@x+1,w
  3763  0791  00C6               	movwf	??_map+5
  3764  0792  0833               	movf	map@in_min+2,w
  3765  0793  3B2F               	subwfb	map@x+2,w
  3766  0794  00C7               	movwf	??_map+6
  3767  0795  0834               	movf	map@in_min+3,w
  3768  0796  3B30               	subwfb	map@x+3,w
  3769  0797  00C8               	movwf	??_map+7
  3770  0798  0848               	movf	??_map+7,w
  3771  0799  00F3               	movwf	___lmul@multiplier+3
  3772  079A  0847               	movf	??_map+6,w
  3773  079B  00F2               	movwf	___lmul@multiplier+2
  3774  079C  0846               	movf	??_map+5,w
  3775  079D  00F1               	movwf	___lmul@multiplier+1
  3776  079E  0845               	movf	??_map+4,w
  3777  079F  00F0               	movwf	___lmul@multiplier
  3778  07A0  0839               	movf	map@out_min,w
  3779  07A1  023D               	subwf	map@out_max,w
  3780  07A2  00C9               	movwf	??_map+8
  3781  07A3  083A               	movf	map@out_min+1,w
  3782  07A4  3B3E               	subwfb	map@out_max+1,w
  3783  07A5  00CA               	movwf	??_map+9
  3784  07A6  083B               	movf	map@out_min+2,w
  3785  07A7  3B3F               	subwfb	map@out_max+2,w
  3786  07A8  00CB               	movwf	??_map+10
  3787  07A9  083C               	movf	map@out_min+3,w
  3788  07AA  3B40               	subwfb	map@out_max+3,w
  3789  07AB  00CC               	movwf	??_map+11
  3790  07AC  084C               	movf	??_map+11,w
  3791  07AD  00F7               	movwf	___lmul@multiplicand+3
  3792  07AE  084B               	movf	??_map+10,w
  3793  07AF  00F6               	movwf	___lmul@multiplicand+2
  3794  07B0  084A               	movf	??_map+9,w
  3795  07B1  00F5               	movwf	___lmul@multiplicand+1
  3796  07B2  0849               	movf	??_map+8,w
  3797  07B3  00F4               	movwf	___lmul@multiplicand
  3798  07B4  318F  274B  3187   	fcall	___lmul
  3799  07B7  0873               	movf	?___lmul+3,w
  3800  07B8  00A7               	movwf	___lldiv@dividend+3
  3801  07B9  0872               	movf	?___lmul+2,w
  3802  07BA  00A6               	movwf	___lldiv@dividend+2
  3803  07BB  0871               	movf	?___lmul+1,w
  3804  07BC  00A5               	movwf	___lldiv@dividend+1
  3805  07BD  0870               	movf	?___lmul,w
  3806  07BE  00A4               	movwf	___lldiv@dividend
  3807  07BF  318F  27AE         	fcall	___lldiv
  3808  07C1  0820               	movf	?___lldiv,w
  3809  07C2  0739               	addwf	map@out_min,w
  3810  07C3  00CD               	movwf	??_map+12
  3811  07C4  0821               	movf	?___lldiv+1,w
  3812  07C5  3D3A               	addwfc	map@out_min+1,w
  3813  07C6  00CE               	movwf	??_map+13
  3814  07C7  0822               	movf	?___lldiv+2,w
  3815  07C8  3D3B               	addwfc	map@out_min+2,w
  3816  07C9  00CF               	movwf	??_map+14
  3817  07CA  0823               	movf	?___lldiv+3,w
  3818  07CB  3D3C               	addwfc	map@out_min+3,w
  3819  07CC  00D0               	movwf	??_map+15
  3820  07CD  0850               	movf	??_map+15,w
  3821  07CE  00B0               	movwf	?_map+3
  3822  07CF  084F               	movf	??_map+14,w
  3823  07D0  00AF               	movwf	?_map+2
  3824  07D1  084E               	movf	??_map+13,w
  3825  07D2  00AE               	movwf	?_map+1
  3826  07D3  084D               	movf	??_map+12,w
  3827  07D4  00AD               	movwf	?_map
  3828  07D5  0008               	return
  3829  07D6                     __end_of_map:	
  3830                           
  3831                           	psect	text6
  3832  0F4B                     __ptext6:	
  3833 ;; *************** function ___lmul *****************
  3834 ;; Defined at:
  3835 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  multiplier      4    0[COMMON] unsigned long 
  3838 ;;  multiplicand    4    4[COMMON] unsigned long 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  product         4    8[COMMON] unsigned long 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  4    0[COMMON] unsigned long 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 1F/0
  3847 ;;		On exit  : 1F/0
  3848 ;;		Unchanged: 1F/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3850 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;Total ram usage:       12 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_map
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function ___lmul
  3865  0F4B                     ___lmul:	
  3866                           
  3867                           ;incstack = 0
  3868                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3869  0F4B  3000               	movlw	0
  3870  0F4C  00FB               	movwf	___lmul@product+3
  3871  0F4D  3000               	movlw	0
  3872  0F4E  00FA               	movwf	___lmul@product+2
  3873  0F4F  3000               	movlw	0
  3874  0F50  00F9               	movwf	___lmul@product+1
  3875  0F51  3000               	movlw	0
  3876  0F52  00F8               	movwf	___lmul@product
  3877  0F53                     i1l1472:	
  3878  0F53  1C70               	btfss	___lmul@multiplier,0
  3879  0F54  2F5D               	goto	i1l1476
  3880  0F55  0874               	movf	___lmul@multiplicand,w
  3881  0F56  07F8               	addwf	___lmul@product,f
  3882  0F57  0875               	movf	___lmul@multiplicand+1,w
  3883  0F58  3DF9               	addwfc	___lmul@product+1,f
  3884  0F59  0876               	movf	___lmul@multiplicand+2,w
  3885  0F5A  3DFA               	addwfc	___lmul@product+2,f
  3886  0F5B  0877               	movf	___lmul@multiplicand+3,w
  3887  0F5C  3DFB               	addwfc	___lmul@product+3,f
  3888  0F5D                     i1l1476:	
  3889  0F5D  3001               	movlw	1
  3890  0F5E                     u83_25:	
  3891  0F5E  35F4               	lslf	___lmul@multiplicand,f
  3892  0F5F  0DF5               	rlf	___lmul@multiplicand+1,f
  3893  0F60  0DF6               	rlf	___lmul@multiplicand+2,f
  3894  0F61  0DF7               	rlf	___lmul@multiplicand+3,f
  3895  0F62  0B89               	decfsz	9,f
  3896  0F63  2F5E               	goto	u83_25
  3897  0F64  3001               	movlw	1
  3898  0F65                     u84_25:	
  3899  0F65  36F3               	lsrf	___lmul@multiplier+3,f
  3900  0F66  0CF2               	rrf	___lmul@multiplier+2,f
  3901  0F67  0CF1               	rrf	___lmul@multiplier+1,f
  3902  0F68  0CF0               	rrf	___lmul@multiplier,f
  3903  0F69  0B89               	decfsz	9,f
  3904  0F6A  2F65               	goto	u84_25
  3905  0F6B  0873               	movf	___lmul@multiplier+3,w
  3906  0F6C  0472               	iorwf	___lmul@multiplier+2,w
  3907  0F6D  0471               	iorwf	___lmul@multiplier+1,w
  3908  0F6E  0470               	iorwf	___lmul@multiplier,w
  3909  0F6F  1D03               	skipz
  3910  0F70  2F53               	goto	i1l1472
  3911  0F71  087B               	movf	___lmul@product+3,w
  3912  0F72  00F3               	movwf	?___lmul+3
  3913  0F73  087A               	movf	___lmul@product+2,w
  3914  0F74  00F2               	movwf	?___lmul+2
  3915  0F75  0879               	movf	___lmul@product+1,w
  3916  0F76  00F1               	movwf	?___lmul+1
  3917  0F77  0878               	movf	___lmul@product,w
  3918  0F78  00F0               	movwf	?___lmul
  3919  0F79  0008               	return
  3920  0F7A                     __end_of___lmul:	
  3921                           
  3922                           	psect	text7
  3923  0FAE                     __ptext7:	
  3924 ;; *************** function ___lldiv *****************
  3925 ;; Defined at:
  3926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  divisor         4    0[BANK0 ] unsigned long 
  3929 ;;  dividend        4    4[BANK0 ] unsigned long 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  quotient        4    8[BANK0 ] unsigned long 
  3932 ;;  counter         1   12[BANK0 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  4    0[BANK0 ] unsigned long 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 1F/0
  3939 ;;		On exit  : 1F/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3942 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;Total ram usage:       14 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_map
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function ___lldiv
  3957  0FAE                     ___lldiv:	
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3961  0FAE  3000               	movlw	0
  3962  0FAF  00AB               	movwf	___lldiv@quotient+3
  3963  0FB0  3000               	movlw	0
  3964  0FB1  00AA               	movwf	___lldiv@quotient+2
  3965  0FB2  3000               	movlw	0
  3966  0FB3  00A9               	movwf	___lldiv@quotient+1
  3967  0FB4  3000               	movlw	0
  3968  0FB5  00A8               	movwf	___lldiv@quotient
  3969  0FB6  0823               	movf	___lldiv@divisor+3,w
  3970  0FB7  0422               	iorwf	___lldiv@divisor+2,w
  3971  0FB8  0421               	iorwf	___lldiv@divisor+1,w
  3972  0FB9  0420               	iorwf	___lldiv@divisor,w
  3973  0FBA  1903               	skipnz
  3974  0FBB  2FF7               	goto	i1l1504
  3975  0FBC  01AC               	clrf	___lldiv@counter
  3976  0FBD  0AAC               	incf	___lldiv@counter,f
  3977  0FBE                     i1l1490:	
  3978  0FBE  1BA3               	btfsc	___lldiv@divisor+3,7
  3979  0FBF  2FCC               	goto	i1l1492
  3980  0FC0  3001               	movlw	1
  3981  0FC1                     u87_25:	
  3982  0FC1  35A0               	lslf	___lldiv@divisor,f
  3983  0FC2  0DA1               	rlf	___lldiv@divisor+1,f
  3984  0FC3  0DA2               	rlf	___lldiv@divisor+2,f
  3985  0FC4  0DA3               	rlf	___lldiv@divisor+3,f
  3986  0FC5  0B89               	decfsz	9,f
  3987  0FC6  2FC1               	goto	u87_25
  3988  0FC7  3001               	movlw	1
  3989  0FC8  00FC               	movwf	??___lldiv
  3990  0FC9  087C               	movf	??___lldiv,w
  3991  0FCA  07AC               	addwf	___lldiv@counter,f
  3992  0FCB  2FBE               	goto	i1l1490
  3993  0FCC                     i1l1492:	
  3994  0FCC  3001               	movlw	1
  3995  0FCD                     u89_25:	
  3996  0FCD  35A8               	lslf	___lldiv@quotient,f
  3997  0FCE  0DA9               	rlf	___lldiv@quotient+1,f
  3998  0FCF  0DAA               	rlf	___lldiv@quotient+2,f
  3999  0FD0  0DAB               	rlf	___lldiv@quotient+3,f
  4000  0FD1  0B89               	decfsz	9,f
  4001  0FD2  2FCD               	goto	u89_25
  4002  0FD3  0823               	movf	___lldiv@divisor+3,w
  4003  0FD4  0227               	subwf	___lldiv@dividend+3,w
  4004  0FD5  1D03               	skipz
  4005  0FD6  2FE1               	goto	u90_25
  4006  0FD7  0822               	movf	___lldiv@divisor+2,w
  4007  0FD8  0226               	subwf	___lldiv@dividend+2,w
  4008  0FD9  1D03               	skipz
  4009  0FDA  2FE1               	goto	u90_25
  4010  0FDB  0821               	movf	___lldiv@divisor+1,w
  4011  0FDC  0225               	subwf	___lldiv@dividend+1,w
  4012  0FDD  1D03               	skipz
  4013  0FDE  2FE1               	goto	u90_25
  4014  0FDF  0820               	movf	___lldiv@divisor,w
  4015  0FE0  0224               	subwf	___lldiv@dividend,w
  4016  0FE1                     u90_25:	
  4017  0FE1  1C03               	skipc
  4018  0FE2  2FEC               	goto	i1l1500
  4019  0FE3  0820               	movf	___lldiv@divisor,w
  4020  0FE4  02A4               	subwf	___lldiv@dividend,f
  4021  0FE5  0821               	movf	___lldiv@divisor+1,w
  4022  0FE6  3BA5               	subwfb	___lldiv@dividend+1,f
  4023  0FE7  0822               	movf	___lldiv@divisor+2,w
  4024  0FE8  3BA6               	subwfb	___lldiv@dividend+2,f
  4025  0FE9  0823               	movf	___lldiv@divisor+3,w
  4026  0FEA  3BA7               	subwfb	___lldiv@dividend+3,f
  4027  0FEB  1428               	bsf	___lldiv@quotient,0
  4028  0FEC                     i1l1500:	
  4029  0FEC  3001               	movlw	1
  4030  0FED                     u91_25:	
  4031  0FED  36A3               	lsrf	___lldiv@divisor+3,f
  4032  0FEE  0CA2               	rrf	___lldiv@divisor+2,f
  4033  0FEF  0CA1               	rrf	___lldiv@divisor+1,f
  4034  0FF0  0CA0               	rrf	___lldiv@divisor,f
  4035  0FF1  0B89               	decfsz	9,f
  4036  0FF2  2FED               	goto	u91_25
  4037  0FF3  3001               	movlw	1
  4038  0FF4  02AC               	subwf	___lldiv@counter,f
  4039  0FF5  1D03               	btfss	3,2
  4040  0FF6  2FCC               	goto	i1l1492
  4041  0FF7                     i1l1504:	
  4042  0FF7  082B               	movf	___lldiv@quotient+3,w
  4043  0FF8  00A3               	movwf	?___lldiv+3
  4044  0FF9  082A               	movf	___lldiv@quotient+2,w
  4045  0FFA  00A2               	movwf	?___lldiv+2
  4046  0FFB  0829               	movf	___lldiv@quotient+1,w
  4047  0FFC  00A1               	movwf	?___lldiv+1
  4048  0FFD  0828               	movf	___lldiv@quotient,w
  4049  0FFE  00A0               	movwf	?___lldiv
  4050  0FFF  0008               	return
  4051  1000                     __end_of___lldiv:	
  4052                           
  4053                           	psect	text8
  4054  0F7A                     __ptext8:	
  4055 ;; *************** function ___lwdiv *****************
  4056 ;; Defined at:
  4057 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  divisor         2    0[COMMON] unsigned int 
  4060 ;;  dividend        2    2[COMMON] unsigned int 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  quotient        2    5[COMMON] unsigned int 
  4063 ;;  counter         1    7[COMMON] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2    0[COMMON] unsigned int 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 1F/0
  4070 ;;		On exit  : 1F/0
  4071 ;;		Unchanged: 1F/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;Total ram usage:        8 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_isr
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function ___lwdiv
  4088  0F7A                     ___lwdiv:	
  4089                           
  4090                           ;incstack = 0
  4091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4092  0F7A  01F5               	clrf	___lwdiv@quotient
  4093  0F7B  01F6               	clrf	___lwdiv@quotient+1
  4094  0F7C  0870               	movf	___lwdiv@divisor,w
  4095  0F7D  0471               	iorwf	___lwdiv@divisor+1,w
  4096  0F7E  1903               	btfsc	3,2
  4097  0F7F  2FA9               	goto	i1l1646
  4098  0F80  01F7               	clrf	___lwdiv@counter
  4099  0F81  0AF7               	incf	___lwdiv@counter,f
  4100  0F82                     i1l1634:	
  4101  0F82  1BF1               	btfsc	___lwdiv@divisor+1,7
  4102  0F83  2F8E               	goto	i1l1636
  4103  0F84  3001               	movlw	1
  4104  0F85                     u103_25:	
  4105  0F85  35F0               	lslf	___lwdiv@divisor,f
  4106  0F86  0DF1               	rlf	___lwdiv@divisor+1,f
  4107  0F87  0B89               	decfsz	9,f
  4108  0F88  2F85               	goto	u103_25
  4109  0F89  3001               	movlw	1
  4110  0F8A  00F4               	movwf	??___lwdiv
  4111  0F8B  0874               	movf	??___lwdiv,w
  4112  0F8C  07F7               	addwf	___lwdiv@counter,f
  4113  0F8D  2F82               	goto	i1l1634
  4114  0F8E                     i1l1636:	
  4115  0F8E  3001               	movlw	1
  4116  0F8F                     u105_25:	
  4117  0F8F  35F5               	lslf	___lwdiv@quotient,f
  4118  0F90  0DF6               	rlf	___lwdiv@quotient+1,f
  4119  0F91  0B89               	decfsz	9,f
  4120  0F92  2F8F               	goto	u105_25
  4121  0F93  0871               	movf	___lwdiv@divisor+1,w
  4122  0F94  0273               	subwf	___lwdiv@dividend+1,w
  4123  0F95  1D03               	skipz
  4124  0F96  2F99               	goto	u106_25
  4125  0F97  0870               	movf	___lwdiv@divisor,w
  4126  0F98  0272               	subwf	___lwdiv@dividend,w
  4127  0F99                     u106_25:	
  4128  0F99  1C03               	skipc
  4129  0F9A  2FA0               	goto	i1l1642
  4130  0F9B  0870               	movf	___lwdiv@divisor,w
  4131  0F9C  02F2               	subwf	___lwdiv@dividend,f
  4132  0F9D  0871               	movf	___lwdiv@divisor+1,w
  4133  0F9E  3BF3               	subwfb	___lwdiv@dividend+1,f
  4134  0F9F  1475               	bsf	___lwdiv@quotient,0
  4135  0FA0                     i1l1642:	
  4136  0FA0  3001               	movlw	1
  4137  0FA1                     u107_25:	
  4138  0FA1  36F1               	lsrf	___lwdiv@divisor+1,f
  4139  0FA2  0CF0               	rrf	___lwdiv@divisor,f
  4140  0FA3  0B89               	decfsz	9,f
  4141  0FA4  2FA1               	goto	u107_25
  4142  0FA5  3001               	movlw	1
  4143  0FA6  02F7               	subwf	___lwdiv@counter,f
  4144  0FA7  1D03               	btfss	3,2
  4145  0FA8  2F8E               	goto	i1l1636
  4146  0FA9                     i1l1646:	
  4147  0FA9  0876               	movf	___lwdiv@quotient+1,w
  4148  0FAA  00F1               	movwf	?___lwdiv+1
  4149  0FAB  0875               	movf	___lwdiv@quotient,w
  4150  0FAC  00F0               	movwf	?___lwdiv
  4151  0FAD  0008               	return
  4152  0FAE                     __end_of___lwdiv:	
  4153                           
  4154                           	psect	text9
  4155  0F2D                     __ptext9:	
  4156 ;; *************** function _ADC_read *****************
  4157 ;; Defined at:
  4158 ;;		line 162 in file "main.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  channel         1    wreg     unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  channel         1    3[COMMON] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    0[COMMON] unsigned int 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 1F/0
  4169 ;;		On exit  : 1F/1
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;Total ram usage:        4 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_isr
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function _ADC_read
  4187  0F2D                     _ADC_read:	
  4188                           
  4189                           ;incstack = 0
  4190                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  4191                           ;ADC_read@channel stored from wreg
  4192  0F2D  00F3               	movwf	ADC_read@channel
  4193                           
  4194                           ;main.c: 163: ADCON0 = (unsigned char) (channel << 2);
  4195  0F2E  0873               	movf	ADC_read@channel,w
  4196  0F2F  00F2               	movwf	??_ADC_read
  4197  0F30  3001               	movlw	1
  4198  0F31                     u93_25:	
  4199  0F31  35F2               	lslf	??_ADC_read,f
  4200  0F32  3EFF               	addlw	-1
  4201  0F33  1D03               	skipz
  4202  0F34  2F31               	goto	u93_25
  4203  0F35  3572               	lslf	??_ADC_read,w
  4204  0F36  0021               	movlb	1	; select bank1
  4205  0F37  009D               	movwf	29	;volatile
  4206                           
  4207                           ;main.c: 164: ADCON0bits.ADON = 1;
  4208  0F38  141D               	bsf	29,0	;volatile
  4209                           
  4210                           ;main.c: 165: _delay((unsigned long)((1)*(32000000/4000.0)));
  4211  0F39  300B               	movlw	11
  4212  0F3A  00F2               	movwf	??_ADC_read
  4213  0F3B  3062               	movlw	98
  4214  0F3C                     u166_27:	
  4215  0F3C  0B89               	decfsz	9,f
  4216  0F3D  2F3C               	goto	u166_27
  4217  0F3E  0BF2               	decfsz	??_ADC_read,f
  4218  0F3F  2F3C               	goto	u166_27
  4219  0F40  3200               	nop2
  4220                           
  4221                           ;main.c: 166: ADCON0bits.GO_nDONE = 1;
  4222  0F41  0021               	movlb	1	; select bank1
  4223  0F42  149D               	bsf	29,1	;volatile
  4224  0F43                     i1l100:	
  4225                           ;main.c: 167: while (ADCON0bits.GO_nDONE);
  4226                           
  4227  0F43  189D               	btfsc	29,1	;volatile
  4228  0F44  2F43               	goto	i1l100
  4229                           
  4230                           ;main.c: 168: ADCON0bits.ADON = 0;
  4231  0F45  101D               	bcf	29,0	;volatile
  4232                           
  4233                           ;main.c: 169: return (((unsigned int) ADRESH) << 8) | ((unsigned int) ADRESL & 0xFF);
  4234  0F46  081C               	movf	28,w	;volatile
  4235  0F47  00F1               	movwf	?_ADC_read+1
  4236  0F48  081B               	movf	27,w	;volatile
  4237  0F49  00F0               	movwf	?_ADC_read
  4238  0F4A  0008               	return
  4239  0F4B                     __end_of_ADC_read:	
  4240  007E                     btemp	set	126	;btemp
  4241  007E                     int$flags	set	126
  4242  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        1
    BSS         11
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     59      71
    BANK1            80     27      27
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            37      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _map->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___lldiv

Critical Paths under _main in BANK1

    _main->_init_I2C_buffer
    _init_I2C_buffer->_eeprom_read

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    12      4    1090
                                             11 BANK1     16    12      4
                       _eeprom_write
                    _init_I2C_buffer
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      7     7      0     382
                                              4 BANK1      7     7      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          4     4      0      22
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         4     3      1     348
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 10    10      0    3632
                                             49 BANK0     10    10      0
                           _ADC_read
                            ___lwdiv
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 36    16     20    2232
                                             13 BANK0     36    16     20
                            ___lldiv
                             ___lmul
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     314
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4    1378
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ADC_read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read

 _isr (ROOT)
   _ADC_read
   ___lwdiv
   _map
     ___lldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1B      1B       7       33.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               25      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 23:42:00 2020

             __CFG_CP$OFF 0000                       l201 0699                       l152 036E  
                     l182 053D                       l191 064A                       l175 04B5  
                     l167 042C                       l184 05C2                       l177 053A  
                     l169 04B2                       l362 0F15                       l195 0677  
                     l197 0683                       l189 05C5                       l382 07D7  
                     l199 068E              __CFG_CPD$OFF 0000                       u811 0F14  
                     _map 0778                       _isr 0004              __CFG_BORV$LO 0000  
                     wreg 0009              __CFG_LVP$OFF 0000                      l2010 064C  
                    l2002 05EF                      l2030 068F                      l2022 0679  
                    l2014 0653                      l2016 0666                      l2026 0684  
                    l2018 066C                      l1570 0717                      l1556 06F6  
                    l1584 0739                      l1920 03CE                      l1930 03F6  
                    l1908 03B4                      l1598 075B                      l1948 0457  
                    l1884 0381                      l1966 04DF                      ?_map 002D  
                    l1984 0567                      l1896 039A                      ?_isr 0070  
            __CFG_WDTE$ON 0000                      u1405 04A8                      u1505 05B8  
                    u1445 0507                      u1455 0530                      u1545 0617  
                    u1617 03F1                      u1555 0640                      u1395 047F  
                    u1627 0442                      u1637 04CB                      u1495 058F  
                    u1647 0553                      u1657 05DB                      _WPUA 020C  
                    _WPUB 020D            ??_eeprom_write 00A1              __CFG_WRT$OFF 0000  
                    _main 0338                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      map@x 002D                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0319          __end_of_ADC_read 0F4B  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ??_map 0041  
                   ??_isr 0051             __CFG_PLLEN$ON 0000                     ?_main 00AB  
                   _EEADR 0191           __end_of___lldiv 1000                     _T1CON 0018  
                   _IOCBF 0396                     _IOCBN 0395           __end_of___lwdiv 0FAE  
                   i1l100 0F43                     i1l126 00A2                     i1l147 0317  
                   _PORTA 000C                     _PORTB 000D                     _TRISA 008C  
                   _TRISB 008D                     u90_25 0FE1                     u91_25 0FED  
                   u83_25 0F5E                     u84_25 0F65                     u93_25 0F31  
                   u87_25 0FC1                     u89_25 0FCD       ___lmul@multiplicand 0074  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000                     main@i 00B7  
                   status 0003                     wtemp0 007E           __initialization 031B  
            __end_of_main 069B                    ??_main 00AF                    _ADCON0 009D  
                  _ADRESH 009C                    _ADRESL 009B                    _EEDATA 0193  
                  _EECON1 0195                    _EECON2 0196                    _ANSELA 018C  
                  _ANSELB 018D                    i1l1500 0FEC                    u103_25 0F85  
                  i1l1504 0FF7                    i1l1472 0F53                    i1l1704 008A  
                  i1l1642 0FA0                    i1l1634 0F82                    i1l1490 0FBE  
                  i1l1730 012C                    i1l1636 0F8E                    i1l1492 0FCC  
                  i1l1476 0F5D                    i1l1804 0309                    i1l1732 0284  
                  i1l1716 00A4                    u105_25 0F8F                    i1l1646 0FA9  
                  i1l1742 028D                    i1l1726 00D7                    i1l1672 003F  
                  i1l1746 028F                    i1l1666 002D                    i1l1684 005A  
                  i1l1668 003D                    u106_25 0F99                    i1l1790 02F9  
                  i1l1782 02DC                    i1l1774 02CE                    i1l1758 02AA  
                  i1l1766 02BD                    i1l1694 0072                    i1l1796 0302  
                  i1l1788 02F3                    u107_25 0FA1                    i1l1798 0304  
                  _INTCON 000B                    u166_27 0F3C                    _OSCCON 0099  
    __size_of_eeprom_read 001B                    ___lmul 0F4B            __CFG_STVREN$ON 0000  
               ??___lldiv 007C                 ??___lwdiv 0074      __end_of_eeprom_write 07FE  
                  _stock1 0061                    _stock2 005F                    _stock3 005D  
                  _stock4 005B  __size_of_init_I2C_buffer 00DD                 ?_ADC_read 0070  
       __end_of_RX_ELMNTS 1001   __end_of__initialization 0334           eeprom_read@addr 00A3  
          __pcstackCOMMON 0070              __pidataBANK0 07FE      init_I2C_buffer@i_640 00A8  
    init_I2C_buffer@i_641 00A9      init_I2C_buffer@i_642 00AA            _OPTION_REGbits 0095  
         ADC_read@channel 0073                ??_ADC_read 0072         eeprom_write@value 00A0  
              __pbssBANK0 005B                __pmaintext 0338                   ?___lmul 0070  
              __pintentry 0004            ___lmul@product 0078                   _SSP1ADD 0212  
                 _SSP1BUF 0211         ??_init_I2C_buffer 00A4     __size_of_eeprom_write 0028  
         __size_of___lmul 002F                   ___lldiv 0FAE                   ___lwdiv 0F7A  
                 __ptext1 069B                   __ptext2 0F12                   __ptext3 07D6  
                 __ptext5 0778                   __ptext6 0F4B                   __ptext7 0FAE  
                 __ptext8 0F7A                   __ptext9 0F2D                   _average 0064  
               _T1CONbits 0018              __size_of_map 005E              __size_of_isr 0315  
               _IOCBFbits 0396                   clrloop0 0F07      end_of_initialization 0334  
                 isr@junk 0063              _eeprom_write 07D6           ___lldiv@divisor 0020  
         ___lldiv@counter 002C          __CFG_FOSC$INTOSC 0000         __size_of_ADC_read 001E  
              map@out_max 003D                map@out_min 0039                 _RX_ELMNTS 1000  
           ??_eeprom_read 00A0            __end_of___lmul 0F7A       start_initialization 031B  
             __end_of_map 07D6               __end_of_isr 0319                  ??___lmul 0078  
     __end_of_eeprom_read 0F2D               __pdataBANK0 0066           _init_I2C_buffer 069B  
             __pbssBIGRAM 22F5                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0          init_I2C_buffer@i 00A7          eeprom_write@addr 00A3  
        ___lwdiv@dividend 0072                  ?___lldiv 0020                  ?___lwdiv 0070  
               _first_i2c 0066                 _index_i2c 0065                  _ADC_read 0F2D  
        ___lwdiv@quotient 0075                  _LATAbits 010C                  _LATBbits 010D  
               clear_ram0 0F06               _eeprom_read 0F12                  _PIE1bits 0091  
                _PIE2bits 0092                  _PIR1bits 0011                  _PIR2bits 0012  
 __end_of_init_I2C_buffer 0778                  _SSP1CON1 0215                  _SSP1STAT 0214  
               map@in_max 0035                 map@in_min 0031                _ADCON0bits 009D  
               main@i_816 00B8                 main@i_817 00B9                 main@i_818 00BA  
       ___lmul@multiplier 0070                _I2C_buffer 22F5                _EECON1bits 0195  
        __size_of___lldiv 0052          __size_of___lwdiv 0034           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077              _SSP1CON1bits 0215              _SSP1CON2bits 0216  
            _SSP1CON3bits 0217             __size_of_main 0363          ?_init_I2C_buffer 0070  
                int$flags 007E                  main@argc 00AB                  main@argv 00AD  
            _SSP1STATbits 0214                _INTCONbits 000B                  intlevel1 0000  
        ___lldiv@dividend 0024         __CFG_CLKOUTEN$OFF 0000             __pstringtext1 1000  
        ___lldiv@quotient 0028             ?_eeprom_write 00A0                _STATUSbits 0003  
            ?_eeprom_read 0070  
