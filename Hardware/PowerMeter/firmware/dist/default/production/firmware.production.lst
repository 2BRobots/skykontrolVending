

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 05 14:36:08 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9s 
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	pa_nodes0,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F1840 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  008C                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  010C                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011D                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0197                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020C                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0291                     	;# 
   150  0291                     	;# 
   151  0292                     	;# 
   152  0293                     	;# 
   153  0294                     	;# 
   154  0295                     	;# 
   155  0295                     	;# 
   156  0296                     	;# 
   157  0391                     	;# 
   158  0392                     	;# 
   159  0393                     	;# 
   160  039A                     	;# 
   161  039C                     	;# 
   162  039D                     	;# 
   163  039E                     	;# 
   164  039F                     	;# 
   165  0FE4                     	;# 
   166  0FE5                     	;# 
   167  0FE6                     	;# 
   168  0FE7                     	;# 
   169  0FE8                     	;# 
   170  0FE9                     	;# 
   171  0FEA                     	;# 
   172  0FEB                     	;# 
   173  0FED                     	;# 
   174  0FEE                     	;# 
   175  0FEF                     	;# 
   176                           
   177                           	psect	eeprom_data
   178  0000  0010 0000 0010 0000 0042 0080 0034 007B 	db	16,0,16,0,66,128,52,123	;# 
   179  0008  0010 0000 00FF 00FF 00FF 00FF 00FF 00FF 	db	16,0,255,255,255,255,255,255	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  008C                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  010C                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0115                     	;# 
   224  0116                     	;# 
   225  0117                     	;# 
   226  0118                     	;# 
   227  0119                     	;# 
   228  011A                     	;# 
   229  011B                     	;# 
   230  011D                     	;# 
   231  011D                     	;# 
   232  018C                     	;# 
   233  0191                     	;# 
   234  0191                     	;# 
   235  0192                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0193                     	;# 
   239  0194                     	;# 
   240  0195                     	;# 
   241  0196                     	;# 
   242  0197                     	;# 
   243  0199                     	;# 
   244  019A                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019C                     	;# 
   250  019C                     	;# 
   251  019D                     	;# 
   252  019E                     	;# 
   253  019F                     	;# 
   254  020C                     	;# 
   255  0211                     	;# 
   256  0211                     	;# 
   257  0212                     	;# 
   258  0212                     	;# 
   259  0213                     	;# 
   260  0213                     	;# 
   261  0214                     	;# 
   262  0214                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0215                     	;# 
   266  0216                     	;# 
   267  0216                     	;# 
   268  0217                     	;# 
   269  0217                     	;# 
   270  0291                     	;# 
   271  0291                     	;# 
   272  0292                     	;# 
   273  0293                     	;# 
   274  0294                     	;# 
   275  0295                     	;# 
   276  0295                     	;# 
   277  0296                     	;# 
   278  0391                     	;# 
   279  0392                     	;# 
   280  0393                     	;# 
   281  039A                     	;# 
   282  039C                     	;# 
   283  039D                     	;# 
   284  039E                     	;# 
   285  039F                     	;# 
   286  0FE4                     	;# 
   287  0FE5                     	;# 
   288  0FE6                     	;# 
   289  0FE7                     	;# 
   290  0FE8                     	;# 
   291  0FE9                     	;# 
   292  0FEA                     	;# 
   293  0FEB                     	;# 
   294  0FED                     	;# 
   295  0FEE                     	;# 
   296  0FEF                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  008C                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0095                     	;# 
   327  0096                     	;# 
   328  0097                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009A                     	;# 
   332  009B                     	;# 
   333  009B                     	;# 
   334  009C                     	;# 
   335  009D                     	;# 
   336  009E                     	;# 
   337  010C                     	;# 
   338  0111                     	;# 
   339  0112                     	;# 
   340  0115                     	;# 
   341  0116                     	;# 
   342  0117                     	;# 
   343  0118                     	;# 
   344  0119                     	;# 
   345  011A                     	;# 
   346  011B                     	;# 
   347  011D                     	;# 
   348  011D                     	;# 
   349  018C                     	;# 
   350  0191                     	;# 
   351  0191                     	;# 
   352  0192                     	;# 
   353  0193                     	;# 
   354  0193                     	;# 
   355  0193                     	;# 
   356  0194                     	;# 
   357  0195                     	;# 
   358  0196                     	;# 
   359  0197                     	;# 
   360  0199                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019C                     	;# 
   367  019C                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019F                     	;# 
   371  020C                     	;# 
   372  0211                     	;# 
   373  0211                     	;# 
   374  0212                     	;# 
   375  0212                     	;# 
   376  0213                     	;# 
   377  0213                     	;# 
   378  0214                     	;# 
   379  0214                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0216                     	;# 
   384  0216                     	;# 
   385  0217                     	;# 
   386  0217                     	;# 
   387  0291                     	;# 
   388  0291                     	;# 
   389  0292                     	;# 
   390  0293                     	;# 
   391  0294                     	;# 
   392  0295                     	;# 
   393  0295                     	;# 
   394  0296                     	;# 
   395  0391                     	;# 
   396  0392                     	;# 
   397  0393                     	;# 
   398  039A                     	;# 
   399  039C                     	;# 
   400  039D                     	;# 
   401  039E                     	;# 
   402  039F                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  008C                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  010C                     	;# 
   455  0111                     	;# 
   456  0112                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0194                     	;# 
   474  0195                     	;# 
   475  0196                     	;# 
   476  0197                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531                           
   532                           	psect	idataBANK1
   533  0000                     __pidataBANK1:	
   534                           
   535                           	psect	stringtext1
   536  0729                     __pstringtext1:	
   537  0729                     exp@coeff:	
   538  0729  3400               	retlw	0
   539  072A  3400               	retlw	0
   540  072B  3480               	retlw	128
   541  072C  343F               	retlw	63
   542  072D  3418               	retlw	24
   543  072E  3472               	retlw	114
   544  072F  3431               	retlw	49
   545  0730  343F               	retlw	63
   546  0731  34F0               	retlw	240
   547  0732  34FD               	retlw	253
   548  0733  3475               	retlw	117
   549  0734  343E               	retlw	62
   550  0735  3447               	retlw	71
   551  0736  3458               	retlw	88
   552  0737  3463               	retlw	99
   553  0738  343D               	retlw	61
   554  0739  3458               	retlw	88
   555  073A  3495               	retlw	149
   556  073B  341D               	retlw	29
   557  073C  343C               	retlw	60
   558  073D  3482               	retlw	130
   559  073E  34C4               	retlw	196
   560  073F  34AE               	retlw	174
   561  0740  343A               	retlw	58
   562  0741  34A8               	retlw	168
   563  0742  3478               	retlw	120
   564  0743  3421               	retlw	33
   565  0744  3439               	retlw	57
   566  0745  34EF               	retlw	239
   567  0746  3493               	retlw	147
   568  0747  3480               	retlw	128
   569  0748  3437               	retlw	55
   570  0749  34A0               	retlw	160
   571  074A  3492               	retlw	146
   572  074B  34A7               	retlw	167
   573  074C  3435               	retlw	53
   574  074D  3446               	retlw	70
   575  074E  3456               	retlw	86
   576  074F  3415               	retlw	21
   577  0750  3434               	retlw	52
   578  0751                     __end_ofexp@coeff:	
   579                           
   580                           	psect	stringtext2
   581  0751                     __pstringtext2:	
   582  0751                     log@coeff:	
   583  0751  3400               	retlw	0
   584  0752  3400               	retlw	0
   585  0753  3400               	retlw	0
   586  0754  3400               	retlw	0
   587  0755  34C4               	retlw	196
   588  0756  34FF               	retlw	255
   589  0757  347F               	retlw	127
   590  0758  343F               	retlw	63
   591  0759  3480               	retlw	128
   592  075A  34EF               	retlw	239
   593  075B  34FF               	retlw	255
   594  075C  34BE               	retlw	190
   595  075D  3490               	retlw	144
   596  075E  34E1               	retlw	225
   597  075F  34A9               	retlw	169
   598  0760  343E               	retlw	62
   599  0761  34EC               	retlw	236
   600  0762  3482               	retlw	130
   601  0763  3476               	retlw	118
   602  0764  34BE               	retlw	190
   603  0765  3482               	retlw	130
   604  0766  34AD               	retlw	173
   605  0767  342B               	retlw	43
   606  0768  343E               	retlw	62
   607  0769  340E               	retlw	14
   608  076A  343C               	retlw	60
   609  076B  34C3               	retlw	195
   610  076C  34BD               	retlw	189
   611  076D  3487               	retlw	135
   612  076E  34D1               	retlw	209
   613  076F  3413               	retlw	19
   614  0770  343D               	retlw	61
   615  0771  3441               	retlw	65
   616  0772  3478               	retlw	120
   617  0773  34D3               	retlw	211
   618  0774  34BB               	retlw	187
   619  0775                     __end_oflog@coeff:	
   620  0003                     _STATUSbits	set	3
   621  000B                     _INTCON	set	11
   622  0012                     _PIR2bits	set	18
   623  000B                     _INTCONbits	set	11
   624  0011                     _PIR1bits	set	17
   625  0092                     _PIE2bits	set	146
   626  009E                     _ADCON1	set	158
   627  0095                     _OPTION_REGbits	set	149
   628  008C                     _TRISA	set	140
   629  0099                     _OSCCON	set	153
   630  0091                     _PIE1bits	set	145
   631  009B                     _ADRESL	set	155
   632  009C                     _ADRESH	set	156
   633  009D                     _ADCON0bits	set	157
   634  009D                     _ADCON0	set	157
   635  010C                     _LATAbits	set	268
   636  0191                     _EEADR	set	401
   637  0196                     _EECON2	set	406
   638  0193                     _EEDATA	set	403
   639  0195                     _EECON1	set	405
   640  0195                     _EECON1bits	set	405
   641  018C                     _ANSELA	set	396
   642  0212                     _SSP1ADD	set	530
   643  0217                     _SSP1CON3bits	set	535
   644  0216                     _SSP1CON2bits	set	534
   645  0215                     _SSP1CON1	set	533
   646  0214                     _SSP1STAT	set	532
   647  020C                     _WPUA	set	524
   648  0215                     _SSP1CON1bits	set	533
   649  0211                     _SSP1BUF	set	529
   650  0214                     _SSP1STATbits	set	532
   651                           
   652                           ; #config settings
   653  0000                     
   654                           	psect	cinit
   655  0835                     start_initialization:	
   656  0835                     __initialization:	
   657                           
   658                           ; Initialize objects allocated to BANK1
   659  0835  0021               	movlb	1	; select bank1
   660                           
   661                           ;initializer for _first_i2c
   662  0836  3001               	movlw	1
   663  0837  00EE               	movwf	__pdataBANK1& (0+127)
   664                           
   665                           ; Clear objects allocated to BANK0
   666  0838  0020               	movlb	0	; select bank0
   667  0839  3020               	movlw	low __pbssBANK2
   668  083A  01EF               	clrf	__pbssBANK0& (0+127)
   669                           
   670                           ; Clear objects allocated to BANK2
   671  083B  0084               	movwf	4
   672  083C  3001               	movlw	high __pbssBANK2
   673  083D  0085               	movwf	5
   674  083E  3029               	movlw	41
   675  083F  3187  2775  3188   	fcall	clear_ram0
   676  0842                     end_of_initialization:	
   677                           ;End of C runtime variable initialization code
   678                           
   679  0842                     __end_of__initialization:	
   680  0842  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   681  0843  0020               	movlb	0
   682  0844  2845               	ljmp	l3020	;jump to C main() function
   683  0845                     __pmaintext:	
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 172 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  argc            2    0[BANK2 ] int 
   692 ;;  argv            2    2[BANK2 ] PTR PTR unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  i               2    8[BANK2 ] int 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  2    0[BANK2 ] int 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : B1F/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   704 ;;      Params:         0       0       0       4
   705 ;;      Locals:         0       0       0       6
   706 ;;      Temps:          0       0       0       4
   707 ;;      Totals:         0       0       0      14
   708 ;;Total ram usage:       14 bytes
   709 ;; Hardware stack levels required when called:    6
   710 ;; This function calls:
   711 ;;		_ADC_read
   712 ;;		___fladd
   713 ;;		___fldiv
   714 ;;		___flmul
   715 ;;		___xxtofl
   716 ;;		_eeprom_write
   717 ;;		_init_I2C_buffer
   718 ;;		_pow
   719 ;;		_sqrt
   720 ;; This function is called by:
   721 ;;		Startup code after reset
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _main
   727  0845                     _main:	
   728  0845                     l3020:	
   729                           ;incstack = 0
   730                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   731                           
   732                           
   733                           ;main.c: 173: OSCCON = 0b11110000;
   734  0845  30F0               	movlw	240
   735  0846  0021               	movlb	1	; select bank1
   736  0847  0099               	movwf	25	;volatile
   737                           
   738                           ;main.c: 174: init_I2C_buffer();
   739  0848  274E  3188         	fcall	_init_I2C_buffer
   740                           
   741                           ;main.c: 175: TRISA = 0b00011111;
   742  084A  301F               	movlw	31
   743  084B  0021               	movlb	1	; select bank1
   744  084C  008C               	movwf	12	;volatile
   745                           
   746                           ;main.c: 176: ANSELA = 0b00010001;
   747  084D  3011               	movlw	17
   748  084E  0023               	movlb	3	; select bank3
   749  084F  008C               	movwf	12	;volatile
   750                           
   751                           ;main.c: 177: WPUA = 0b00001110;
   752  0850  300E               	movlw	14
   753  0851  0024               	movlb	4	; select bank4
   754  0852  008C               	movwf	12	;volatile
   755                           
   756                           ;main.c: 178: OPTION_REGbits.nWPUEN = 1;
   757  0853  0021               	movlb	1	; select bank1
   758  0854  1795               	bsf	21,7	;volatile
   759                           
   760                           ;main.c: 179: ADCON1 = 0b11110000;
   761  0855  30F0               	movlw	240
   762  0856  009E               	movwf	30	;volatile
   763                           
   764                           ;main.c: 180: SSP1STAT = 0b10000000;
   765  0857  3080               	movlw	128
   766  0858  0024               	movlb	4	; select bank4
   767  0859  0094               	movwf	20	;volatile
   768                           
   769                           ;main.c: 181: SSP1CON1 = 0b00110110;
   770  085A  3036               	movlw	54
   771  085B  0095               	movwf	21	;volatile
   772                           
   773                           ;main.c: 182: SSP1CON2bits.SEN = 1;
   774  085C  1416               	bsf	22,0	;volatile
   775                           
   776                           ;main.c: 183: SSP1CON3bits.BOEN = 1;
   777  085D  1617               	bsf	23,4	;volatile
   778                           
   779                           ;main.c: 184: SSP1CON3bits.SDAHT = 1;
   780  085E  1597               	bsf	23,3	;volatile
   781                           
   782                           ;main.c: 185: SSP1CON3bits.SBCDE = 1;
   783  085F  1517               	bsf	23,2	;volatile
   784                           
   785                           ;main.c: 186: SSP1ADD = (char) (0x3E << 1);
   786  0860  307C               	movlw	124
   787  0861  0092               	movwf	18	;volatile
   788                           
   789                           ;main.c: 187: PIR1bits.SSP1IF = 0;
   790  0862  0020               	movlb	0	; select bank0
   791  0863  1191               	bcf	17,3	;volatile
   792                           
   793                           ;main.c: 188: PIR2bits.BCL1IF = 0;
   794  0864  1192               	bcf	18,3	;volatile
   795                           
   796                           ;main.c: 189: PIE2bits.BCL1IE = 1;
   797  0865  0021               	movlb	1	; select bank1
   798  0866  1592               	bsf	18,3	;volatile
   799                           
   800                           ;main.c: 190: PIE1bits.SSP1IE = 1;
   801  0867  1591               	bsf	17,3	;volatile
   802                           
   803                           ;main.c: 191: INTCONbits.PEIE = 1;
   804  0868  170B               	bsf	11,6	;volatile
   805                           
   806                           ;main.c: 192: INTCON = 0b01001000;
   807  0869  3048               	movlw	72
   808  086A  008B               	movwf	11	;volatile
   809                           
   810                           ;main.c: 193: INTCONbits.GIE = 1;
   811  086B  178B               	bsf	11,7	;volatile
   812                           
   813                           ;main.c: 195: LATAbits.LATA5 = 1;
   814  086C  0022               	movlb	2	; select bank2
   815  086D  168C               	bsf	12,5	;volatile
   816  086E                     l108:	
   817                           ;main.c: 197: while (1) {
   818                           
   819  086E  0064               	clrwdt	;# 
   820                           
   821                           ;main.c: 199: if (I2C_buffer.data.RESET == 1) {
   822  086F  0022               	movlb	2	; select bank2
   823  0870  0B21               	decfsz	(_I2C_buffer^(0+256)+1),w	;volatile
   824  0871  2873               	goto	l3068
   825  0872  0001               	reset	;# 
   826  0873                     l3068:	
   827                           
   828                           ;main.c: 201: };main.c: 203: if (I2C_buffer.data.SAVE == 1) {
   829  0873  0022               	movlb	2	; select bank2
   830  0874  0B22               	decfsz	(_I2C_buffer^(0+256)+2),w	;volatile
   831  0875  28BC               	goto	l3076
   832                           
   833                           ;main.c: 204: eeprom_write(0, I2C_buffer.byte[0x03]);
   834  0876  0823               	movf	(_I2C_buffer^(0+256)+3),w	;volatile
   835  0877  00F0               	movwf	eeprom_write@value
   836  0878  3000               	movlw	0
   837  0879  2269  3188         	fcall	_eeprom_write
   838                           
   839                           ;main.c: 205: eeprom_write(1, I2C_buffer.byte[0x04]);
   840  087B  0022               	movlb	2	; select bank2
   841  087C  0824               	movf	(_I2C_buffer^(0+256)+4),w	;volatile
   842  087D  00F0               	movwf	eeprom_write@value
   843  087E  3001               	movlw	1
   844  087F  2269  3188         	fcall	_eeprom_write
   845                           
   846                           ;main.c: 206: eeprom_write(2, I2C_buffer.byte[0x05]);
   847  0881  0022               	movlb	2	; select bank2
   848  0882  0825               	movf	(_I2C_buffer^(0+256)+5),w	;volatile
   849  0883  00F0               	movwf	eeprom_write@value
   850  0884  3002               	movlw	2
   851  0885  2269  3188         	fcall	_eeprom_write
   852                           
   853                           ;main.c: 207: eeprom_write(3, I2C_buffer.byte[0x06]);
   854  0887  0022               	movlb	2	; select bank2
   855  0888  0826               	movf	(_I2C_buffer^(0+256)+6),w	;volatile
   856  0889  00F0               	movwf	eeprom_write@value
   857  088A  3003               	movlw	3
   858  088B  2269  3188         	fcall	_eeprom_write
   859                           
   860                           ;main.c: 208: eeprom_write(4, I2C_buffer.byte[0x07]);
   861  088D  0022               	movlb	2	; select bank2
   862  088E  0827               	movf	(_I2C_buffer^(0+256)+7),w	;volatile
   863  088F  00F0               	movwf	eeprom_write@value
   864  0890  3004               	movlw	4
   865  0891  2269  3188         	fcall	_eeprom_write
   866                           
   867                           ;main.c: 209: eeprom_write(5, I2C_buffer.byte[0x08]);
   868  0893  0022               	movlb	2	; select bank2
   869  0894  0828               	movf	(_I2C_buffer^(0+256)+8),w	;volatile
   870  0895  00F0               	movwf	eeprom_write@value
   871  0896  3005               	movlw	5
   872  0897  2269  3188         	fcall	_eeprom_write
   873                           
   874                           ;main.c: 210: eeprom_write(6, I2C_buffer.byte[0x09]);
   875  0899  0022               	movlb	2	; select bank2
   876  089A  0829               	movf	(_I2C_buffer^(0+256)+9),w	;volatile
   877  089B  00F0               	movwf	eeprom_write@value
   878  089C  3006               	movlw	6
   879  089D  2269  3188         	fcall	_eeprom_write
   880                           
   881                           ;main.c: 211: eeprom_write(7, I2C_buffer.byte[0x0A]);
   882  089F  0022               	movlb	2	; select bank2
   883  08A0  082A               	movf	(_I2C_buffer^(0+256)+10),w	;volatile
   884  08A1  00F0               	movwf	eeprom_write@value
   885  08A2  3007               	movlw	7
   886  08A3  2269  3188         	fcall	_eeprom_write
   887                           
   888                           ;main.c: 212: eeprom_write(8, I2C_buffer.byte[0x0B]);
   889  08A5  0022               	movlb	2	; select bank2
   890  08A6  082B               	movf	(_I2C_buffer^(0+256)+11),w	;volatile
   891  08A7  00F0               	movwf	eeprom_write@value
   892  08A8  3008               	movlw	8
   893  08A9  2269  3188         	fcall	_eeprom_write
   894                           
   895                           ;main.c: 213: eeprom_write(9, I2C_buffer.byte[0x0C]);
   896  08AB  0022               	movlb	2	; select bank2
   897  08AC  082C               	movf	(_I2C_buffer^(0+256)+12),w	;volatile
   898  08AD  00F0               	movwf	eeprom_write@value
   899  08AE  3009               	movlw	9
   900  08AF  2269  3188         	fcall	_eeprom_write
   901                           
   902                           ;main.c: 214: _delay((unsigned long)((5)*(32000000/4000.0)));
   903  08B1  3034               	movlw	52
   904  08B2  0022               	movlb	2	; select bank2
   905  08B3  00CD               	movwf	??_main^(0+256)
   906  08B4  30F1               	movlw	241
   907  08B5                     u3337:	
   908  08B5  0B89               	decfsz	9,f
   909  08B6  28B5               	goto	u3337
   910  08B7  0BCD               	decfsz	??_main^(0+256),f
   911  08B8  28B5               	goto	u3337
   912  08B9  3200               	nop2
   913                           
   914                           ;main.c: 215: I2C_buffer.data.SAVE = 0;
   915  08BA  0022               	movlb	2	; select bank2
   916  08BB  01A2               	clrf	(_I2C_buffer^(0+256)+2)	;volatile
   917  08BC                     l3076:	
   918                           
   919                           ;main.c: 216: };main.c: 218: iacc = 0;
   920  08BC  01C1               	clrf	_iacc^(0+256)
   921  08BD  01C2               	clrf	(_iacc+1)^(0+256)
   922  08BE  01C3               	clrf	(_iacc+2)^(0+256)
   923  08BF  01C4               	clrf	(_iacc+3)^(0+256)
   924                           
   925                           ;main.c: 219: vacc = 0;
   926  08C0  01BD               	clrf	_vacc^(0+256)
   927  08C1  01BE               	clrf	(_vacc+1)^(0+256)
   928  08C2  01BF               	clrf	(_vacc+2)^(0+256)
   929  08C3  01C0               	clrf	(_vacc+3)^(0+256)
   930                           
   931                           ;main.c: 221: for (int i = 0; i < I2C_buffer.data.samples; i++)
   932  08C4  01D1               	clrf	main@i^(0+256)
   933  08C5  01D2               	clrf	(main@i+1)^(0+256)
   934  08C6                     l3100:	
   935  08C6  0852               	movf	(main@i+1)^(0+256),w
   936  08C7  3A80               	xorlw	128
   937  08C8  00CD               	movwf	??_main^(0+256)
   938  08C9  082C               	movf	((_I2C_buffer+1)^(0+256)+11),w	;volatile
   939  08CA  3A80               	xorlw	128
   940  08CB  024D               	subwf	??_main^(0+256),w
   941  08CC  1D03               	skipz
   942  08CD  28D0               	goto	u3305
   943  08CE  082B               	movf	(_I2C_buffer^(0+256)+11),w	;volatile
   944  08CF  0251               	subwf	main@i^(0+256),w
   945  08D0                     u3305:	
   946  08D0  1803               	btfsc	3,0
   947  08D1  2998               	goto	l3102
   948  08D2  0064               	clrwdt	;# 
   949                           
   950                           ;main.c: 225: adc = (float) ADC_read(0x00);
   951  08D3  3000               	movlw	0
   952  08D4  2282  3188         	fcall	_ADC_read
   953  08D6  26AC  3188         	fcall	PL16	;call to abstracted procedure
   954  08D8  2555  3188         	fcall	___xxtofl
   955                           
   956                           ;main.c: 227: adc = ((adc * 5) / 1023) - 2.5;
   957  08DA  2630               	fcall	PL2	;call to abstracted procedure
   958  08DB  3183  23B8  3188   	fcall	___flmul
   959  08DE  272B               	fcall	PL48	;call to abstracted procedure
   960  08DF  3185  252E  3188   	fcall	___fldiv
   961  08E2  26EC               	fcall	PL24	;call to abstracted procedure
   962  08E3  3181  21DF  3188   	fcall	___fladd
   963  08E6  26CC  3188         	fcall	PL20	;call to abstracted procedure
   964                           
   965                           ;main.c: 228: adc = (adc / (float)I2C_buffer.data.ctRl) * (float) I2C_buffer.data.ctRati
      +                          o;
   966  08E8  0823               	movf	(_I2C_buffer^(0+256)+3),w	;volatile
   967  08E9  00FA               	movwf	___xxtofl@val
   968  08EA  0824               	movf	((_I2C_buffer+1)^(0+256)+3),w	;volatile
   969  08EB  26A5  3188         	fcall	PL12	;call to abstracted procedure
   970  08ED  2555  3188         	fcall	___xxtofl
   971  08EF  087D               	movf	?___xxtofl+3,w
   972  08F0  00C0               	movwf	___flmul@b+3
   973  08F1  087C               	movf	?___xxtofl+2,w
   974  08F2  00BF               	movwf	___flmul@b+2
   975  08F3  087B               	movf	?___xxtofl+1,w
   976  08F4  00BE               	movwf	___flmul@b+1
   977  08F5  087A               	movf	?___xxtofl,w
   978  08F6  00BD               	movwf	___flmul@b
   979  08F7  0022               	movlb	2	; select bank2
   980  08F8  0825               	movf	(_I2C_buffer^(0+256)+5),w	;volatile
   981  08F9  00FA               	movwf	___xxtofl@val
   982  08FA  0826               	movf	((_I2C_buffer+1)^(0+256)+5),w	;volatile
   983  08FB  26A5  3188         	fcall	PL12	;call to abstracted procedure
   984  08FD  2555  3188         	fcall	___xxtofl
   985  08FF  26FC               	fcall	PL28	;call to abstracted procedure
   986  0900  0848               	movf	(_adc+3)^(0+256),w
   987  0901  0020               	movlb	0	; select bank0
   988  0902  00DD               	movwf	___fldiv@b+3
   989  0903  0022               	movlb	2	; select bank2
   990  0904  0847               	movf	(_adc+2)^(0+256),w
   991  0905  0020               	movlb	0	; select bank0
   992  0906  00DC               	movwf	___fldiv@b+2
   993  0907  0022               	movlb	2	; select bank2
   994  0908  0846               	movf	(_adc+1)^(0+256),w
   995  0909  0020               	movlb	0	; select bank0
   996  090A  00DB               	movwf	___fldiv@b+1
   997  090B  0022               	movlb	2	; select bank2
   998  090C  0845               	movf	_adc^(0+256),w
   999  090D  0020               	movlb	0	; select bank0
  1000  090E  00DA               	movwf	___fldiv@b
  1001  090F  3185  252E  3188   	fcall	___fldiv
  1002  0912  0859               	movf	?___fldiv+3,w
  1003  0913  00C4               	movwf	___flmul@a+3
  1004  0914  0858               	movf	?___fldiv+2,w
  1005  0915  00C3               	movwf	___flmul@a+2
  1006  0916  0857               	movf	?___fldiv+1,w
  1007  0917  00C2               	movwf	___flmul@a+1
  1008  0918  0856               	movf	?___fldiv,w
  1009  0919  00C1               	movwf	___flmul@a
  1010  091A  3183  23B8  3188   	fcall	___flmul
  1011                           
  1012                           ;main.c: 229: iacc += pow(adc, 2);
  1013  091D  265F  3188         	fcall	PL4	;call to abstracted procedure
  1014  091F  229B  3188         	fcall	_pow
  1015                           
  1016                           ;main.c: 229: iacc += pow(adc, 2);
  1017  0921  2685               	fcall	PL6	;call to abstracted procedure
  1018  0922  0844               	movf	(_iacc+3)^(0+256),w
  1019  0923  0021               	movlb	1	; select bank1
  1020  0924  00A7               	movwf	(___fladd@a+3)^(0+128)
  1021  0925  0022               	movlb	2	; select bank2
  1022  0926  0843               	movf	(_iacc+2)^(0+256),w
  1023  0927  0021               	movlb	1	; select bank1
  1024  0928  00A6               	movwf	(___fladd@a+2)^(0+128)
  1025  0929  0022               	movlb	2	; select bank2
  1026  092A  0842               	movf	(_iacc+1)^(0+256),w
  1027  092B  0021               	movlb	1	; select bank1
  1028  092C  00A5               	movwf	(___fladd@a+1)^(0+128)
  1029  092D  0022               	movlb	2	; select bank2
  1030  092E  0841               	movf	_iacc^(0+256),w
  1031  092F  0021               	movlb	1	; select bank1
  1032  0930  00A4               	movwf	___fladd@a^(0+128)
  1033  0931  3181  21DF  3188   	fcall	___fladd
  1034  0934  0823               	movf	(?___fladd+3)^(0+128),w
  1035  0935  0022               	movlb	2	; select bank2
  1036  0936  00C4               	movwf	(_iacc+3)^(0+256)
  1037  0937  0021               	movlb	1	; select bank1
  1038  0938  0822               	movf	(?___fladd+2)^(0+128),w
  1039  0939  0022               	movlb	2	; select bank2
  1040  093A  00C3               	movwf	(_iacc+2)^(0+256)
  1041  093B  0021               	movlb	1	; select bank1
  1042  093C  0821               	movf	(?___fladd+1)^(0+128),w
  1043  093D  0022               	movlb	2	; select bank2
  1044  093E  00C2               	movwf	(_iacc+1)^(0+256)
  1045  093F  0021               	movlb	1	; select bank1
  1046  0940  0820               	movf	?___fladd^(0+128),w
  1047  0941  0022               	movlb	2	; select bank2
  1048  0942  00C1               	movwf	_iacc^(0+256)
  1049                           
  1050                           ;main.c: 231: adc = (float) ADC_read(0x03);
  1051  0943  3003               	movlw	3
  1052  0944  2282  3188         	fcall	_ADC_read
  1053  0946  26AC  3188         	fcall	PL16	;call to abstracted procedure
  1054  0948  2555  3188         	fcall	___xxtofl
  1055                           
  1056                           ;main.c: 233: adc = ((adc * 5) / 1023) - 2.5;
  1057  094A  2630               	fcall	PL2	;call to abstracted procedure
  1058  094B  3183  23B8  3188   	fcall	___flmul
  1059  094E  272B               	fcall	PL48	;call to abstracted procedure
  1060  094F  3185  252E  3188   	fcall	___fldiv
  1061  0952  26EC               	fcall	PL24	;call to abstracted procedure
  1062  0953  3181  21DF  3188   	fcall	___fladd
  1063  0956  26CC  3188         	fcall	PL20	;call to abstracted procedure
  1064                           
  1065                           ;main.c: 234: adc = adc * I2C_buffer.data.trRatio;
  1066  0958  3007               	movlw	7
  1067  0959  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  1068  095A  270D               	fcall	PL36	;call to abstracted procedure
  1069  095B  0022               	movlb	2	; select bank2
  1070  095C  0848               	movf	(_adc+3)^(0+256),w
  1071  095D  0020               	movlb	0	; select bank0
  1072  095E  00C4               	movwf	___flmul@a+3
  1073  095F  0022               	movlb	2	; select bank2
  1074  0960  0847               	movf	(_adc+2)^(0+256),w
  1075  0961  0020               	movlb	0	; select bank0
  1076  0962  00C3               	movwf	___flmul@a+2
  1077  0963  0022               	movlb	2	; select bank2
  1078  0964  0846               	movf	(_adc+1)^(0+256),w
  1079  0965  0020               	movlb	0	; select bank0
  1080  0966  00C2               	movwf	___flmul@a+1
  1081  0967  0022               	movlb	2	; select bank2
  1082  0968  0845               	movf	_adc^(0+256),w
  1083  0969  0020               	movlb	0	; select bank0
  1084  096A  00C1               	movwf	___flmul@a
  1085  096B  3183  23B8  3188   	fcall	___flmul
  1086                           
  1087                           ;main.c: 235: vacc += pow(adc, 2);
  1088  096E  265F  3188         	fcall	PL4	;call to abstracted procedure
  1089  0970  229B  3188         	fcall	_pow
  1090                           
  1091                           ;main.c: 235: vacc += pow(adc, 2);
  1092  0972  2685               	fcall	PL6	;call to abstracted procedure
  1093  0973  0840               	movf	(_vacc+3)^(0+256),w
  1094  0974  0021               	movlb	1	; select bank1
  1095  0975  00A7               	movwf	(___fladd@a+3)^(0+128)
  1096  0976  0022               	movlb	2	; select bank2
  1097  0977  083F               	movf	(_vacc+2)^(0+256),w
  1098  0978  0021               	movlb	1	; select bank1
  1099  0979  00A6               	movwf	(___fladd@a+2)^(0+128)
  1100  097A  0022               	movlb	2	; select bank2
  1101  097B  083E               	movf	(_vacc+1)^(0+256),w
  1102  097C  0021               	movlb	1	; select bank1
  1103  097D  00A5               	movwf	(___fladd@a+1)^(0+128)
  1104  097E  0022               	movlb	2	; select bank2
  1105  097F  083D               	movf	_vacc^(0+256),w
  1106  0980  0021               	movlb	1	; select bank1
  1107  0981  00A4               	movwf	___fladd@a^(0+128)
  1108  0982  3181  21DF  3188   	fcall	___fladd
  1109  0985  0823               	movf	(?___fladd+3)^(0+128),w
  1110  0986  0022               	movlb	2	; select bank2
  1111  0987  00C0               	movwf	(_vacc+3)^(0+256)
  1112  0988  0021               	movlb	1	; select bank1
  1113  0989  0822               	movf	(?___fladd+2)^(0+128),w
  1114  098A  0022               	movlb	2	; select bank2
  1115  098B  00BF               	movwf	(_vacc+2)^(0+256)
  1116  098C  0021               	movlb	1	; select bank1
  1117  098D  0821               	movf	(?___fladd+1)^(0+128),w
  1118  098E  0022               	movlb	2	; select bank2
  1119  098F  00BE               	movwf	(_vacc+1)^(0+256)
  1120  0990  0021               	movlb	1	; select bank1
  1121  0991  0820               	movf	?___fladd^(0+128),w
  1122  0992  0022               	movlb	2	; select bank2
  1123  0993  00BD               	movwf	_vacc^(0+256)
  1124  0994  0AD1               	incf	main@i^(0+256),f
  1125  0995  1903               	skipnz
  1126  0996  0AD2               	incf	(main@i+1)^(0+256),f
  1127  0997  28C6               	goto	l3100
  1128  0998                     l3102:	
  1129                           
  1130                           ;main.c: 236: };main.c: 238: I2C_buffer.data.Irms = sqrt(iacc / (float)I2C_buffer.data.s
      +                          amples);
  1131  0998  0022               	movlb	2	; select bank2
  1132  0999  082B               	movf	(_I2C_buffer^(0+256)+11),w	;volatile
  1133  099A  00FA               	movwf	___xxtofl@val
  1134  099B  082C               	movf	((_I2C_buffer+1)^(0+256)+11),w	;volatile
  1135  099C  26A5  3188         	fcall	PL12	;call to abstracted procedure
  1136  099E  2555  3188         	fcall	___xxtofl
  1137  09A0  26FC               	fcall	PL28	;call to abstracted procedure
  1138  09A1  0844               	movf	(_iacc+3)^(0+256),w
  1139  09A2  0020               	movlb	0	; select bank0
  1140  09A3  00DD               	movwf	___fldiv@b+3
  1141  09A4  0022               	movlb	2	; select bank2
  1142  09A5  0843               	movf	(_iacc+2)^(0+256),w
  1143  09A6  0020               	movlb	0	; select bank0
  1144  09A7  00DC               	movwf	___fldiv@b+2
  1145  09A8  0022               	movlb	2	; select bank2
  1146  09A9  0842               	movf	(_iacc+1)^(0+256),w
  1147  09AA  0020               	movlb	0	; select bank0
  1148  09AB  00DB               	movwf	___fldiv@b+1
  1149  09AC  0022               	movlb	2	; select bank2
  1150  09AD  0841               	movf	_iacc^(0+256),w
  1151  09AE  0020               	movlb	0	; select bank0
  1152  09AF  00DA               	movwf	___fldiv@b
  1153  09B0  3185  252E  3188   	fcall	___fldiv
  1154  09B3  26BC               	fcall	PL18	;call to abstracted procedure
  1155  09B4  3186  2638  3188   	fcall	_sqrt
  1156  09B7  0823               	movf	(?_sqrt+3)^(0+128),w
  1157  09B8  0022               	movlb	2	; select bank2
  1158  09B9  00B0               	movwf	((_I2C_buffer+3)^(0+256)+13)	;volatile
  1159  09BA  0021               	movlb	1	; select bank1
  1160  09BB  0822               	movf	(?_sqrt+2)^(0+128),w
  1161  09BC  0022               	movlb	2	; select bank2
  1162  09BD  00AF               	movwf	((_I2C_buffer+2)^(0+256)+13)	;volatile
  1163  09BE  0021               	movlb	1	; select bank1
  1164  09BF  0821               	movf	(?_sqrt+1)^(0+128),w
  1165  09C0  0022               	movlb	2	; select bank2
  1166  09C1  00AE               	movwf	((_I2C_buffer+1)^(0+256)+13)	;volatile
  1167  09C2  0021               	movlb	1	; select bank1
  1168  09C3  0820               	movf	?_sqrt^(0+128),w
  1169  09C4  0022               	movlb	2	; select bank2
  1170  09C5  00AD               	movwf	(_I2C_buffer^(0+256)+13)	;volatile
  1171                           
  1172                           ;main.c: 239: I2C_buffer.data.Vrms = sqrt(vacc / (float)I2C_buffer.data.samples);
  1173  09C6  082B               	movf	(_I2C_buffer^(0+256)+11),w	;volatile
  1174  09C7  00FA               	movwf	___xxtofl@val
  1175  09C8  082C               	movf	((_I2C_buffer+1)^(0+256)+11),w	;volatile
  1176  09C9  26A5  3188         	fcall	PL12	;call to abstracted procedure
  1177  09CB  2555  3188         	fcall	___xxtofl
  1178  09CD  26FC               	fcall	PL28	;call to abstracted procedure
  1179  09CE  0840               	movf	(_vacc+3)^(0+256),w
  1180  09CF  0020               	movlb	0	; select bank0
  1181  09D0  00DD               	movwf	___fldiv@b+3
  1182  09D1  0022               	movlb	2	; select bank2
  1183  09D2  083F               	movf	(_vacc+2)^(0+256),w
  1184  09D3  0020               	movlb	0	; select bank0
  1185  09D4  00DC               	movwf	___fldiv@b+2
  1186  09D5  0022               	movlb	2	; select bank2
  1187  09D6  083E               	movf	(_vacc+1)^(0+256),w
  1188  09D7  0020               	movlb	0	; select bank0
  1189  09D8  00DB               	movwf	___fldiv@b+1
  1190  09D9  0022               	movlb	2	; select bank2
  1191  09DA  083D               	movf	_vacc^(0+256),w
  1192  09DB  0020               	movlb	0	; select bank0
  1193  09DC  00DA               	movwf	___fldiv@b
  1194  09DD  3185  252E  3188   	fcall	___fldiv
  1195  09E0  26BC               	fcall	PL18	;call to abstracted procedure
  1196  09E1  3186  2638  3188   	fcall	_sqrt
  1197  09E4  0823               	movf	(?_sqrt+3)^(0+128),w
  1198  09E5  0022               	movlb	2	; select bank2
  1199  09E6  00B4               	movwf	((_I2C_buffer+3)^(0+256)+17)	;volatile
  1200  09E7  0021               	movlb	1	; select bank1
  1201  09E8  0822               	movf	(?_sqrt+2)^(0+128),w
  1202  09E9  0022               	movlb	2	; select bank2
  1203  09EA  00B3               	movwf	((_I2C_buffer+2)^(0+256)+17)	;volatile
  1204  09EB  0021               	movlb	1	; select bank1
  1205  09EC  0821               	movf	(?_sqrt+1)^(0+128),w
  1206  09ED  0022               	movlb	2	; select bank2
  1207  09EE  00B2               	movwf	((_I2C_buffer+1)^(0+256)+17)	;volatile
  1208  09EF  0021               	movlb	1	; select bank1
  1209  09F0  0820               	movf	?_sqrt^(0+128),w
  1210  09F1  0022               	movlb	2	; select bank2
  1211  09F2  00B1               	movwf	(_I2C_buffer^(0+256)+17)	;volatile
  1212                           
  1213                           ;main.c: 240: I2C_buffer.data.Power = I2C_buffer.data.Vrms * I2C_buffer.data.Irms;
  1214  09F3  302D               	movlw	((low (_I2C_buffer| (0+256)))& (0+255)+13)
  1215  09F4  270D               	fcall	PL36	;call to abstracted procedure
  1216  09F5  3011               	movlw	17
  1217  09F6  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  1218  09F7  0086               	movwf	6
  1219  09F8  3F40               	moviw [0]fsr1
  1220  09F9  00C1               	movwf	___flmul@a
  1221  09FA  3F41               	moviw [1]fsr1
  1222  09FB  00C2               	movwf	___flmul@a+1
  1223  09FC  3F42               	moviw [2]fsr1
  1224  09FD  00C3               	movwf	___flmul@a+2
  1225  09FE  3F43               	moviw [3]fsr1
  1226  09FF  00C4               	movwf	___flmul@a+3
  1227  0A00  3183  23B8  3188   	fcall	___flmul
  1228  0A03  0840               	movf	?___flmul+3,w
  1229  0A04  0022               	movlb	2	; select bank2
  1230  0A05  00B8               	movwf	((_I2C_buffer+3)^(0+256)+21)	;volatile
  1231  0A06  0020               	movlb	0	; select bank0
  1232  0A07  083F               	movf	?___flmul+2,w
  1233  0A08  0022               	movlb	2	; select bank2
  1234  0A09  00B7               	movwf	((_I2C_buffer+2)^(0+256)+21)	;volatile
  1235  0A0A  0020               	movlb	0	; select bank0
  1236  0A0B  083E               	movf	?___flmul+1,w
  1237  0A0C  0022               	movlb	2	; select bank2
  1238  0A0D  00B6               	movwf	((_I2C_buffer+1)^(0+256)+21)	;volatile
  1239  0A0E  0020               	movlb	0	; select bank0
  1240  0A0F  083D               	movf	?___flmul,w
  1241  0A10  0022               	movlb	2	; select bank2
  1242  0A11  00B5               	movwf	(_I2C_buffer^(0+256)+21)	;volatile
  1243                           
  1244                           ;main.c: 241: I2C_buffer.data.AvPower = (I2C_buffer.data.Power + I2C_buffer.data.AvPower
      +                          ) / 2;
  1245  0A12  3040               	movlw	64
  1246  0A13  0020               	movlb	0	; select bank0
  1247  0A14  00D9               	movwf	___fldiv@a+3
  1248  0A15  3019               	movlw	25
  1249  0A16  01D8               	clrf	___fldiv@a+2
  1250  0A17  01D7               	clrf	___fldiv@a+1
  1251  0A18  01D6               	clrf	___fldiv@a
  1252  0A19  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  1253  0A1A  0086               	movwf	6
  1254  0A1B  3001               	movlw	1	; select bank2/3
  1255  0A1C  0087               	movwf	7
  1256  0A1D  3F40               	moviw [0]fsr1
  1257  0A1E  0021               	movlb	1	; select bank1
  1258  0A1F  00A0               	movwf	___fladd@b^(0+128)
  1259  0A20  3F41               	moviw [1]fsr1
  1260  0A21  00A1               	movwf	(___fladd@b+1)^(0+128)
  1261  0A22  3F42               	moviw [2]fsr1
  1262  0A23  00A2               	movwf	(___fladd@b+2)^(0+128)
  1263  0A24  3F43               	moviw [3]fsr1
  1264  0A25  00A3               	movwf	(___fladd@b+3)^(0+128)
  1265  0A26  3015               	movlw	21
  1266  0A27  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  1267  0A28  0086               	movwf	6
  1268  0A29  3F40               	moviw [0]fsr1
  1269  0A2A  00A4               	movwf	___fladd@a^(0+128)
  1270  0A2B  3F41               	moviw [1]fsr1
  1271  0A2C  00A5               	movwf	(___fladd@a+1)^(0+128)
  1272  0A2D  3F42               	moviw [2]fsr1
  1273  0A2E  00A6               	movwf	(___fladd@a+2)^(0+128)
  1274  0A2F  3F43               	moviw [3]fsr1
  1275  0A30  00A7               	movwf	(___fladd@a+3)^(0+128)
  1276  0A31  3181  21DF  3188   	fcall	___fladd
  1277  0A34  0823               	movf	(?___fladd+3)^(0+128),w
  1278  0A35  0020               	movlb	0	; select bank0
  1279  0A36  00DD               	movwf	___fldiv@b+3
  1280  0A37  0021               	movlb	1	; select bank1
  1281  0A38  0822               	movf	(?___fladd+2)^(0+128),w
  1282  0A39  0020               	movlb	0	; select bank0
  1283  0A3A  00DC               	movwf	___fldiv@b+2
  1284  0A3B  0021               	movlb	1	; select bank1
  1285  0A3C  0821               	movf	(?___fladd+1)^(0+128),w
  1286  0A3D  0020               	movlb	0	; select bank0
  1287  0A3E  00DB               	movwf	___fldiv@b+1
  1288  0A3F  0021               	movlb	1	; select bank1
  1289  0A40  0820               	movf	?___fladd^(0+128),w
  1290  0A41  0020               	movlb	0	; select bank0
  1291  0A42  00DA               	movwf	___fldiv@b
  1292  0A43  3185  252E  3188   	fcall	___fldiv
  1293  0A46  0859               	movf	?___fldiv+3,w
  1294  0A47  0022               	movlb	2	; select bank2
  1295  0A48  00BC               	movwf	((_I2C_buffer+3)^(0+256)+25)	;volatile
  1296  0A49  0020               	movlb	0	; select bank0
  1297  0A4A  0858               	movf	?___fldiv+2,w
  1298  0A4B  0022               	movlb	2	; select bank2
  1299  0A4C  00BB               	movwf	((_I2C_buffer+2)^(0+256)+25)	;volatile
  1300  0A4D  0020               	movlb	0	; select bank0
  1301  0A4E  0857               	movf	?___fldiv+1,w
  1302  0A4F  0022               	movlb	2	; select bank2
  1303  0A50  00BA               	movwf	((_I2C_buffer+1)^(0+256)+25)	;volatile
  1304  0A51  0020               	movlb	0	; select bank0
  1305  0A52  0856               	movf	?___fldiv,w
  1306  0A53  0022               	movlb	2	; select bank2
  1307  0A54  00B9               	movwf	(_I2C_buffer^(0+256)+25)	;volatile
  1308                           
  1309                           ;main.c: 242: LATAbits.LATA5 = (char)!LATAbits.LATA5;
  1310  0A55  1003               	clrc
  1311  0A56  1E8C               	btfss	12,5	;volatile
  1312  0A57  1403               	setc
  1313  0A58  1C03               	btfss	3,0
  1314  0A59  2A5D               	goto	u3310
  1315  0A5A  0022               	movlb	2	; select bank2
  1316  0A5B  168C               	bsf	12,5	;volatile
  1317  0A5C  2A5F               	goto	l3110
  1318  0A5D                     u3310:	
  1319  0A5D  0022               	movlb	2	; select bank2
  1320  0A5E  128C               	bcf	12,5	;volatile
  1321  0A5F                     l3110:	
  1322                           
  1323                           ;main.c: 243: _delay((unsigned long)((10)*(32000000/4000.0)));
  1324  0A5F  3068               	movlw	104
  1325  0A60  0022               	movlb	2	; select bank2
  1326  0A61  00CD               	movwf	??_main^(0+256)
  1327  0A62  30E4               	movlw	228
  1328  0A63                     u3347:	
  1329  0A63  0B89               	decfsz	9,f
  1330  0A64  2A63               	goto	u3347
  1331  0A65  0BCD               	decfsz	??_main^(0+256),f
  1332  0A66  2A63               	goto	u3347
  1333  0A67  0000               	nop
  1334  0A68  286E               	goto	l108
  1335  0A69                     __end_of_main:	
  1336  0A69                     __ptext21:	
  1337 ;; *************** function _eeprom_write *****************
  1338 ;; Defined at:
  1339 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  addr            1    wreg     unsigned char 
  1342 ;;  value           1    0[COMMON] unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  addr            1    1[COMMON] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 1F/2
  1351 ;;		On exit  : 1F/3
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1354 ;;      Params:         1       0       0       0
  1355 ;;      Locals:         1       0       0       0
  1356 ;;      Temps:          0       0       0       0
  1357 ;;      Totals:         2       0       0       0
  1358 ;;Total ram usage:        2 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _eeprom_write
  1370  0A69                     _eeprom_write:	
  1371                           
  1372                           ;incstack = 0
  1373                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1374                           ;eeprom_write@addr stored from wreg
  1375  0A69  00F1               	movwf	eeprom_write@addr
  1376  0A6A                     l293:	
  1377                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  1378                           
  1379  0A6A  0023               	movlb	3	; select bank3
  1380  0A6B  1895               	btfsc	21,1	;volsfr
  1381  0A6C  2A6A               	goto	l293
  1382  0A6D  0871               	movf	eeprom_write@addr,w
  1383  0A6E  0091               	movwf	17	;volatile
  1384  0A6F  0192               	clrf	18	;volatile
  1385  0A70  0870               	movf	eeprom_write@value,w
  1386  0A71  0093               	movwf	19	;volatile
  1387  0A72  303F               	movlw	63
  1388  0A73  0595               	andwf	21,f	;volsfr
  1389  0A74  1003               	bcf	3,0	;volatile
  1390  0A75  1B8B               	btfsc	11,7	;volatile
  1391  0A76  1403               	bsf	3,0	;volatile
  1392  0A77  138B               	bcf	11,7	;volatile
  1393  0A78  1515               	bsf	21,2	;volsfr
  1394  0A79  3055               	movlw	85
  1395  0A7A  0096               	movwf	22	;volsfr
  1396  0A7B  30AA               	movlw	170
  1397  0A7C  0096               	movwf	22	;volsfr
  1398  0A7D  1495               	bsf	21,1	;volsfr
  1399  0A7E  1115               	bcf	21,2	;volsfr
  1400  0A7F  1803               	btfsc	3,0	;volatile
  1401  0A80  178B               	bsf	11,7	;volatile
  1402  0A81  0008               	return
  1403  0A82                     __end_of_eeprom_write:	
  1404  0A82                     __ptext22:	
  1405 ;; *************** function _ADC_read *****************
  1406 ;; Defined at:
  1407 ;;		line 77 in file "main.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  channel         1    wreg     unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  channel         1    3[COMMON] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  2    0[COMMON] unsigned int 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/2
  1418 ;;		On exit  : 1F/1
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1421 ;;      Params:         2       0       0       0
  1422 ;;      Locals:         1       0       0       0
  1423 ;;      Temps:          1       0       0       0
  1424 ;;      Totals:         4       0       0       0
  1425 ;;Total ram usage:        4 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _ADC_read
  1437  0A82                     _ADC_read:	
  1438                           
  1439                           ;incstack = 0
  1440                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  1441                           ;ADC_read@channel stored from wreg
  1442  0A82  00F3               	movwf	ADC_read@channel
  1443                           
  1444                           ;main.c: 78: ADCON0 = (unsigned char) (channel << 2);
  1445  0A83  0709               	addwf	9,w
  1446  0A84  0709               	addwf	9,w
  1447  0A85  0021               	movlb	1	; select bank1
  1448  0A86  009D               	movwf	29	;volatile
  1449                           
  1450                           ;main.c: 79: ADCON0bits.ADON = 1;
  1451  0A87  141D               	bsf	29,0	;volatile
  1452                           
  1453                           ;main.c: 80: _delay((unsigned long)((1)*(32000000/4000.0)));
  1454  0A88  300B               	movlw	11
  1455  0A89  00F2               	movwf	??_ADC_read
  1456  0A8A  3062               	movlw	98
  1457  0A8B                     u3357:	
  1458  0A8B  0B89               	decfsz	9,f
  1459  0A8C  2A8B               	goto	u3357
  1460  0A8D  0BF2               	decfsz	??_ADC_read,f
  1461  0A8E  2A8B               	goto	u3357
  1462  0A8F  3200               	nop2
  1463                           
  1464                           ;main.c: 81: ADCON0bits.GO_nDONE = 1;
  1465  0A90  0021               	movlb	1	; select bank1
  1466  0A91  149D               	bsf	29,1	;volatile
  1467  0A92                     l77:	
  1468                           ;main.c: 82: while (ADCON0bits.GO_nDONE);
  1469                           
  1470  0A92  189D               	btfsc	29,1	;volatile
  1471  0A93  2A92               	goto	l77
  1472                           
  1473                           ;main.c: 83: ADCON0bits.ADON = 0;
  1474  0A94  101D               	bcf	29,0	;volatile
  1475                           
  1476                           ;main.c: 84: return (((unsigned int) ADRESH) << 8) | ((unsigned int) ADRESL & 0xFF);
  1477  0A95  081C               	movf	28,w	;volatile
  1478  0A96  00F1               	movwf	?_ADC_read+1
  1479  0A97  01F0               	clrf	?_ADC_read
  1480  0A98  081B               	movf	27,w	;volatile
  1481  0A99  04F0               	iorwf	?_ADC_read,f
  1482  0A9A  0008               	return
  1483  0A9B                     __end_of_ADC_read:	
  1484  0A9B                     __ptext2:	
  1485 ;; *************** function _pow *****************
  1486 ;; Defined at:
  1487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\pow.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  x               4   57[BANK1 ] unsigned char 
  1490 ;;  y               4   61[BANK1 ] unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  yi              4   74[BANK1 ] unsigned long 
  1493 ;;  sign            1   73[BANK1 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  4   57[BANK1 ] unsigned char 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 1F/1
  1500 ;;		On exit  : 1F/1
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1503 ;;      Params:         0       0       8       0
  1504 ;;      Locals:         0       0      13       0
  1505 ;;      Temps:          0       0       0       0
  1506 ;;      Totals:         0       0      21       0
  1507 ;;Total ram usage:       21 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    5
  1510 ;; This function calls:
  1511 ;;		___fleq
  1512 ;;		___flge
  1513 ;;		___flmul
  1514 ;;		___flneg
  1515 ;;		___fltol
  1516 ;;		___xxtofl
  1517 ;;		_exp
  1518 ;;		_log
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _pow
  1526  0A9B                     _pow:	
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _pow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1530  0A9B  01E9               	clrf	pow@sign^(0+128)
  1531  0A9C  085C               	movf	(pow@x+3)^(0+128),w
  1532  0A9D  0020               	movlb	0	; select bank0
  1533  0A9E  00AD               	movwf	___fleq@ff1+3
  1534  0A9F  0021               	movlb	1	; select bank1
  1535  0AA0  085B               	movf	(pow@x+2)^(0+128),w
  1536  0AA1  0020               	movlb	0	; select bank0
  1537  0AA2  00AC               	movwf	___fleq@ff1+2
  1538  0AA3  0021               	movlb	1	; select bank1
  1539  0AA4  085A               	movf	(pow@x+1)^(0+128),w
  1540  0AA5  0020               	movlb	0	; select bank0
  1541  0AA6  00AB               	movwf	___fleq@ff1+1
  1542  0AA7  0021               	movlb	1	; select bank1
  1543  0AA8  0859               	movf	pow@x^(0+128),w
  1544  0AA9  2706  3188         	fcall	PL34	;call to abstracted procedure
  1545  0AAB  239B  3188         	fcall	___fleq
  1546  0AAD  1C03               	btfss	3,0
  1547  0AAE  2ABF               	goto	l2824
  1548  0AAF  01F0               	clrf	___flge@ff1
  1549  0AB0  01F1               	clrf	___flge@ff1+1
  1550  0AB1  01F2               	clrf	___flge@ff1+2
  1551  0AB2  01F3               	clrf	___flge@ff1+3
  1552  0AB3  0021               	movlb	1	; select bank1
  1553  0AB4  0860               	movf	(pow@y+3)^(0+128),w
  1554  0AB5  00F7               	movwf	___flge@ff2+3
  1555  0AB6  085F               	movf	(pow@y+2)^(0+128),w
  1556  0AB7  00F6               	movwf	___flge@ff2+2
  1557  0AB8  085E               	movf	(pow@y+1)^(0+128),w
  1558  0AB9  00F5               	movwf	___flge@ff2+1
  1559  0ABA  085D               	movf	pow@y^(0+128),w
  1560  0ABB  00F4               	movwf	___flge@ff2
  1561  0ABC  24F9  3188         	fcall	___flge
  1562  0ABE  2F39               	ljmp	PL60	;call to abstracted procedure
  1563  0ABF                     l2824:	
  1564  0ABF  0021               	movlb	1	; select bank1
  1565  0AC0  0860               	movf	(pow@y+3)^(0+128),w
  1566  0AC1  0020               	movlb	0	; select bank0
  1567  0AC2  00AD               	movwf	___fleq@ff1+3
  1568  0AC3  0021               	movlb	1	; select bank1
  1569  0AC4  085F               	movf	(pow@y+2)^(0+128),w
  1570  0AC5  0020               	movlb	0	; select bank0
  1571  0AC6  00AC               	movwf	___fleq@ff1+2
  1572  0AC7  0021               	movlb	1	; select bank1
  1573  0AC8  085E               	movf	(pow@y+1)^(0+128),w
  1574  0AC9  0020               	movlb	0	; select bank0
  1575  0ACA  00AB               	movwf	___fleq@ff1+1
  1576  0ACB  0021               	movlb	1	; select bank1
  1577  0ACC  085D               	movf	pow@y^(0+128),w
  1578  0ACD  2706  3188         	fcall	PL34	;call to abstracted procedure
  1579  0ACF  239B  3188         	fcall	___fleq
  1580  0AD1  1C03               	btfss	3,0
  1581  0AD2  2ADC               	goto	l2830
  1582  0AD3  303F               	movlw	63
  1583  0AD4  0021               	movlb	1	; select bank1
  1584  0AD5  00DC               	movwf	(?_pow+3)^(0+128)
  1585  0AD6  3080               	movlw	128
  1586  0AD7  00DB               	movwf	(?_pow+2)^(0+128)
  1587  0AD8  3000               	movlw	0
  1588  0AD9  01DA               	clrf	(?_pow+1)^(0+128)
  1589  0ADA  01D9               	clrf	?_pow^(0+128)
  1590  0ADB  0008               	return
  1591  0ADC                     l2830:	
  1592  0ADC  0021               	movlb	1	; select bank1
  1593  0ADD  085C               	movf	(pow@x+3)^(0+128),w
  1594  0ADE  00F3               	movwf	___flge@ff1+3
  1595  0ADF  085B               	movf	(pow@x+2)^(0+128),w
  1596  0AE0  00F2               	movwf	___flge@ff1+2
  1597  0AE1  085A               	movf	(pow@x+1)^(0+128),w
  1598  0AE2  00F1               	movwf	___flge@ff1+1
  1599  0AE3  0859               	movf	pow@x^(0+128),w
  1600  0AE4  3183  2387  3188   	fcall	PL40	;call to abstracted procedure
  1601  0AE7  24F9  3188         	fcall	___flge
  1602  0AE9  1803               	btfsc	3,0
  1603  0AEA  2B36               	goto	l2842
  1604  0AEB  0860               	movf	(pow@y+3)^(0+128),w
  1605  0AEC  00F3               	movwf	___fltol@f1+3
  1606  0AED  085F               	movf	(pow@y+2)^(0+128),w
  1607  0AEE  00F2               	movwf	___fltol@f1+2
  1608  0AEF  085E               	movf	(pow@y+1)^(0+128),w
  1609  0AF0  00F1               	movwf	___fltol@f1+1
  1610  0AF1  085D               	movf	pow@y^(0+128),w
  1611  0AF2  00F0               	movwf	___fltol@f1
  1612  0AF3  25C8  3188         	fcall	___fltol
  1613  0AF5  0873               	movf	?___fltol+3,w
  1614  0AF6  00ED               	movwf	(pow@yi+3)^(0+128)
  1615  0AF7  0872               	movf	?___fltol+2,w
  1616  0AF8  00EC               	movwf	(pow@yi+2)^(0+128)
  1617  0AF9  0871               	movf	?___fltol+1,w
  1618  0AFA  00EB               	movwf	(pow@yi+1)^(0+128)
  1619  0AFB  0870               	movf	?___fltol,w
  1620  0AFC  00EA               	movwf	pow@yi^(0+128)
  1621  0AFD  086D               	movf	(pow@yi+3)^(0+128),w
  1622  0AFE  00FD               	movwf	___xxtofl@val+3
  1623  0AFF  086C               	movf	(pow@yi+2)^(0+128),w
  1624  0B00  00FC               	movwf	___xxtofl@val+2
  1625  0B01  086B               	movf	(pow@yi+1)^(0+128),w
  1626  0B02  00FB               	movwf	___xxtofl@val+1
  1627  0B03  086A               	movf	pow@yi^(0+128),w
  1628  0B04  00FA               	movwf	___xxtofl@val
  1629  0B05  3000               	movlw	0
  1630  0B06  2555  3188         	fcall	___xxtofl
  1631  0B08  087D               	movf	?___xxtofl+3,w
  1632  0B09  00AD               	movwf	___fleq@ff1+3
  1633  0B0A  087C               	movf	?___xxtofl+2,w
  1634  0B0B  00AC               	movwf	___fleq@ff1+2
  1635  0B0C  087B               	movf	?___xxtofl+1,w
  1636  0B0D  00AB               	movwf	___fleq@ff1+1
  1637  0B0E  087A               	movf	?___xxtofl,w
  1638  0B0F  00AA               	movwf	___fleq@ff1
  1639  0B10  0021               	movlb	1	; select bank1
  1640  0B11  0860               	movf	(pow@y+3)^(0+128),w
  1641  0B12  0020               	movlb	0	; select bank0
  1642  0B13  00B1               	movwf	___fleq@ff2+3
  1643  0B14  0021               	movlb	1	; select bank1
  1644  0B15  085F               	movf	(pow@y+2)^(0+128),w
  1645  0B16  0020               	movlb	0	; select bank0
  1646  0B17  00B0               	movwf	___fleq@ff2+2
  1647  0B18  0021               	movlb	1	; select bank1
  1648  0B19  085E               	movf	(pow@y+1)^(0+128),w
  1649  0B1A  0020               	movlb	0	; select bank0
  1650  0B1B  00AF               	movwf	___fleq@ff2+1
  1651  0B1C  0021               	movlb	1	; select bank1
  1652  0B1D  085D               	movf	pow@y^(0+128),w
  1653  0B1E  0020               	movlb	0	; select bank0
  1654  0B1F  00AE               	movwf	___fleq@ff2
  1655  0B20  239B  3188         	fcall	___fleq
  1656  0B22  1803               	btfsc	3,0
  1657  0B23  2B26               	goto	l2836
  1658  0B24  0021               	movlb	1	; select bank1
  1659  0B25  2F39               	ljmp	PL60	;call to abstracted procedure
  1660  0B26                     l2836:	
  1661  0B26  0021               	movlb	1	; select bank1
  1662  0B27  086A               	movf	pow@yi^(0+128),w
  1663  0B28  00E9               	movwf	pow@sign^(0+128)
  1664  0B29  3001               	movlw	1
  1665  0B2A  05E9               	andwf	pow@sign^(0+128),f
  1666  0B2B  271A  3188         	fcall	PL44	;call to abstracted procedure
  1667  0B2D  25BF               	fcall	___flneg
  1668  0B2E  0873               	movf	?___flneg+3,w
  1669  0B2F  00DC               	movwf	(pow@x+3)^(0+128)
  1670  0B30  0872               	movf	?___flneg+2,w
  1671  0B31  00DB               	movwf	(pow@x+2)^(0+128)
  1672  0B32  0871               	movf	?___flneg+1,w
  1673  0B33  00DA               	movwf	(pow@x+1)^(0+128)
  1674  0B34  0870               	movf	?___flneg,w
  1675  0B35  00D9               	movwf	pow@x^(0+128)
  1676  0B36                     l2842:	
  1677  0B36  085C               	movf	(pow@x+3)^(0+128),w
  1678  0B37  00C9               	movwf	(log@x+3)^(0+128)
  1679  0B38  085B               	movf	(pow@x+2)^(0+128),w
  1680  0B39  00C8               	movwf	(log@x+2)^(0+128)
  1681  0B3A  085A               	movf	(pow@x+1)^(0+128),w
  1682  0B3B  00C7               	movwf	(log@x+1)^(0+128)
  1683  0B3C  0859               	movf	pow@x^(0+128),w
  1684  0B3D  00C6               	movwf	log@x^(0+128)
  1685  0B3E  3180  2070  3188   	fcall	_log
  1686  0B41  0849               	movf	(?_log+3)^(0+128),w
  1687  0B42  00E4               	movwf	(_pow$1333+3)^(0+128)
  1688  0B43  0848               	movf	(?_log+2)^(0+128),w
  1689  0B44  00E3               	movwf	(_pow$1333+2)^(0+128)
  1690  0B45  0847               	movf	(?_log+1)^(0+128),w
  1691  0B46  00E2               	movwf	(_pow$1333+1)^(0+128)
  1692  0B47  0846               	movf	?_log^(0+128),w
  1693  0B48  00E1               	movwf	_pow$1333^(0+128)
  1694  0B49  0860               	movf	(pow@y+3)^(0+128),w
  1695  0B4A  0020               	movlb	0	; select bank0
  1696  0B4B  00C0               	movwf	___flmul@b+3
  1697  0B4C  0021               	movlb	1	; select bank1
  1698  0B4D  085F               	movf	(pow@y+2)^(0+128),w
  1699  0B4E  0020               	movlb	0	; select bank0
  1700  0B4F  00BF               	movwf	___flmul@b+2
  1701  0B50  0021               	movlb	1	; select bank1
  1702  0B51  085E               	movf	(pow@y+1)^(0+128),w
  1703  0B52  0020               	movlb	0	; select bank0
  1704  0B53  00BE               	movwf	___flmul@b+1
  1705  0B54  0021               	movlb	1	; select bank1
  1706  0B55  085D               	movf	pow@y^(0+128),w
  1707  0B56  0020               	movlb	0	; select bank0
  1708  0B57  00BD               	movwf	___flmul@b
  1709  0B58  0021               	movlb	1	; select bank1
  1710  0B59  0864               	movf	(_pow$1333+3)^(0+128),w
  1711  0B5A  0020               	movlb	0	; select bank0
  1712  0B5B  00C4               	movwf	___flmul@a+3
  1713  0B5C  0021               	movlb	1	; select bank1
  1714  0B5D  0863               	movf	(_pow$1333+2)^(0+128),w
  1715  0B5E  0020               	movlb	0	; select bank0
  1716  0B5F  00C3               	movwf	___flmul@a+2
  1717  0B60  0021               	movlb	1	; select bank1
  1718  0B61  0862               	movf	(_pow$1333+1)^(0+128),w
  1719  0B62  0020               	movlb	0	; select bank0
  1720  0B63  00C2               	movwf	___flmul@a+1
  1721  0B64  0021               	movlb	1	; select bank1
  1722  0B65  0861               	movf	_pow$1333^(0+128),w
  1723  0B66  0020               	movlb	0	; select bank0
  1724  0B67  00C1               	movwf	___flmul@a
  1725  0B68  3183  23B8  3188   	fcall	___flmul
  1726  0B6B  0840               	movf	?___flmul+3,w
  1727  0B6C  0021               	movlb	1	; select bank1
  1728  0B6D  00E8               	movwf	(_pow$1334+3)^(0+128)
  1729  0B6E  0020               	movlb	0	; select bank0
  1730  0B6F  083F               	movf	?___flmul+2,w
  1731  0B70  0021               	movlb	1	; select bank1
  1732  0B71  00E7               	movwf	(_pow$1334+2)^(0+128)
  1733  0B72  0020               	movlb	0	; select bank0
  1734  0B73  083E               	movf	?___flmul+1,w
  1735  0B74  0021               	movlb	1	; select bank1
  1736  0B75  00E6               	movwf	(_pow$1334+1)^(0+128)
  1737  0B76  0020               	movlb	0	; select bank0
  1738  0B77  083D               	movf	?___flmul,w
  1739  0B78  0021               	movlb	1	; select bank1
  1740  0B79  00E5               	movwf	_pow$1334^(0+128)
  1741  0B7A  0868               	movf	(_pow$1334+3)^(0+128),w
  1742  0B7B  00D1               	movwf	(exp@x+3)^(0+128)
  1743  0B7C  0867               	movf	(_pow$1334+2)^(0+128),w
  1744  0B7D  00D0               	movwf	(exp@x+2)^(0+128)
  1745  0B7E  0866               	movf	(_pow$1334+1)^(0+128),w
  1746  0B7F  00CF               	movwf	(exp@x+1)^(0+128)
  1747  0B80  0865               	movf	_pow$1334^(0+128),w
  1748  0B81  00CE               	movwf	exp@x^(0+128)
  1749  0B82  23CF  3188         	fcall	_exp
  1750  0B84  0851               	movf	(?_exp+3)^(0+128),w
  1751  0B85  00DC               	movwf	(pow@x+3)^(0+128)
  1752  0B86  0850               	movf	(?_exp+2)^(0+128),w
  1753  0B87  00DB               	movwf	(pow@x+2)^(0+128)
  1754  0B88  084F               	movf	(?_exp+1)^(0+128),w
  1755  0B89  00DA               	movwf	(pow@x+1)^(0+128)
  1756  0B8A  084E               	movf	?_exp^(0+128),w
  1757  0B8B  00D9               	movwf	pow@x^(0+128)
  1758  0B8C  0869               	movf	pow@sign^(0+128),w
  1759  0B8D  1903               	btfsc	3,2
  1760  0B8E  0008               	return
  1761  0B8F  271A  3188         	fcall	PL44	;call to abstracted procedure
  1762  0B91  25BF               	fcall	___flneg
  1763  0B92  0873               	movf	?___flneg+3,w
  1764  0B93  00DC               	movwf	(?_pow+3)^(0+128)
  1765  0B94  0872               	movf	?___flneg+2,w
  1766  0B95  00DB               	movwf	(?_pow+2)^(0+128)
  1767  0B96  0871               	movf	?___flneg+1,w
  1768  0B97  00DA               	movwf	(?_pow+1)^(0+128)
  1769  0B98  0870               	movf	?___flneg,w
  1770  0B99  00D9               	movwf	?_pow^(0+128)
  1771  0B9A  0008               	return
  1772  0B9B                     __end_of_pow:	
  1773  0B9B                     __ptext8:	
  1774 ;; *************** function ___fleq *****************
  1775 ;; Defined at:
  1776 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  ff1             4   10[BANK0 ] PTR int 
  1779 ;;  ff2             4   14[BANK0 ] PTR int 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;		None               void
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0
  1786 ;; Tracked objects:
  1787 ;;		On entry : 1F/0
  1788 ;;		On exit  : 1F/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1791 ;;      Params:         0       8       0       0
  1792 ;;      Locals:         0       0       0       0
  1793 ;;      Temps:          0       4       0       0
  1794 ;;      Totals:         0      12       0       0
  1795 ;;Total ram usage:       12 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_pow
  1802 ;;		_exp
  1803 ;;		_frexp
  1804 ;;		_ldexp
  1805 ;;		_log
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function ___fleq
  1811  0B9B                     ___fleq:	
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  1815  0B9B  3080               	movlw	128
  1816  0B9C  01B2               	clrf	??___fleq
  1817  0B9D  01B3               	clrf	??___fleq+1
  1818  0B9E  052C               	andwf	___fleq@ff1+2,w
  1819  0B9F  00B4               	movwf	??___fleq+2
  1820  0BA0  307F               	movlw	127
  1821  0BA1  052D               	andwf	___fleq@ff1+3,w
  1822  0BA2  00B5               	movwf	??___fleq+3
  1823  0BA3  0434               	iorwf	??___fleq+2,w
  1824  0BA4  0433               	iorwf	??___fleq+1,w
  1825  0BA5  0432               	iorwf	??___fleq,w
  1826  0BA6  1D03               	skipz
  1827  0BA7  2BAC               	goto	l2032
  1828  0BA8  01AA               	clrf	___fleq@ff1
  1829  0BA9  01AB               	clrf	___fleq@ff1+1
  1830  0BAA  01AC               	clrf	___fleq@ff1+2
  1831  0BAB  01AD               	clrf	___fleq@ff1+3
  1832  0BAC                     l2032:	
  1833  0BAC  3080               	movlw	128
  1834  0BAD  01B2               	clrf	??___fleq
  1835  0BAE  01B3               	clrf	??___fleq+1
  1836  0BAF  0530               	andwf	___fleq@ff2+2,w
  1837  0BB0  00B4               	movwf	??___fleq+2
  1838  0BB1  307F               	movlw	127
  1839  0BB2  0531               	andwf	___fleq@ff2+3,w
  1840  0BB3  00B5               	movwf	??___fleq+3
  1841  0BB4  0434               	iorwf	??___fleq+2,w
  1842  0BB5  0433               	iorwf	??___fleq+1,w
  1843  0BB6  0432               	iorwf	??___fleq,w
  1844  0BB7  1D03               	skipz
  1845  0BB8  2BBB               	goto	l2036
  1846  0BB9  2734  3188         	fcall	PL54	;call to abstracted procedure
  1847  0BBB                     l2036:	
  1848  0BBB  0831               	movf	___fleq@ff2+3,w
  1849  0BBC  062D               	xorwf	___fleq@ff1+3,w
  1850  0BBD  1D03               	skipz
  1851  0BBE  2BC9               	goto	u1695
  1852  0BBF  0830               	movf	___fleq@ff2+2,w
  1853  0BC0  062C               	xorwf	___fleq@ff1+2,w
  1854  0BC1  1D03               	skipz
  1855  0BC2  2BC9               	goto	u1695
  1856  0BC3  082F               	movf	___fleq@ff2+1,w
  1857  0BC4  062B               	xorwf	___fleq@ff1+1,w
  1858  0BC5  1D03               	skipz
  1859  0BC6  2BC9               	goto	u1695
  1860  0BC7  082E               	movf	___fleq@ff2,w
  1861  0BC8  062A               	xorwf	___fleq@ff1,w
  1862  0BC9                     u1695:	
  1863  0BC9  1903               	skipnz
  1864  0BCA  2BCD               	goto	l2040
  1865  0BCB  1003               	clrc
  1866  0BCC  0008               	return
  1867  0BCD                     l2040:	
  1868  0BCD  1403               	setc
  1869  0BCE  0008               	return
  1870  0BCF                     __end_of___fleq:	
  1871  0BCF                     __ptext4:	
  1872 ;; *************** function _exp *****************
  1873 ;; Defined at:
  1874 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\exp.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  x               4   46[BANK1 ] int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  exponent        2   54[BANK1 ] int 
  1879 ;;  sign            1   56[BANK1 ] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  4   46[BANK1 ] unsigned char 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 1F/1
  1886 ;;		On exit  : 1F/1
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1889 ;;      Params:         0       0       4       0
  1890 ;;      Locals:         0       0       7       0
  1891 ;;      Temps:          0       0       0       0
  1892 ;;      Totals:         0       0      11       0
  1893 ;;Total ram usage:       11 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    4
  1896 ;; This function calls:
  1897 ;;		___fldiv
  1898 ;;		___fleq
  1899 ;;		___flge
  1900 ;;		___flmul
  1901 ;;		___flneg
  1902 ;;		___flsub
  1903 ;;		___fltol
  1904 ;;		___xxtofl
  1905 ;;		_eval_poly
  1906 ;;		_floor
  1907 ;;		_ldexp
  1908 ;; This function is called by:
  1909 ;;		_pow
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _exp
  1915  0BCF                     _exp:	
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _exp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1919  0BCF  26DC  3188         	fcall	PL22	;call to abstracted procedure
  1920  0BD1  2734  3188         	fcall	PL54	;call to abstracted procedure
  1921  0BD3  239B  3188         	fcall	___fleq
  1922  0BD5  1C03               	btfss	3,0
  1923  0BD6  2BE0               	goto	l2724
  1924  0BD7  303F               	movlw	63
  1925  0BD8  0021               	movlb	1	; select bank1
  1926  0BD9  00D1               	movwf	(?_exp+3)^(0+128)
  1927  0BDA  3080               	movlw	128
  1928  0BDB  00D0               	movwf	(?_exp+2)^(0+128)
  1929  0BDC  3000               	movlw	0
  1930  0BDD  01CF               	clrf	(?_exp+1)^(0+128)
  1931  0BDE  01CE               	clrf	?_exp^(0+128)
  1932  0BDF  0008               	return
  1933  0BE0                     l2724:	
  1934  0BE0  3044               	movlw	68
  1935  0BE1  00F3               	movwf	___flge@ff1+3
  1936  0BE2  3031               	movlw	49
  1937  0BE3  00F2               	movwf	___flge@ff1+2
  1938  0BE4  3072               	movlw	114
  1939  0BE5  00F1               	movwf	___flge@ff1+1
  1940  0BE6  3018               	movlw	24
  1941  0BE7  00F0               	movwf	___flge@ff1
  1942  0BE8  0021               	movlb	1	; select bank1
  1943  0BE9  0851               	movf	(exp@x+3)^(0+128),w
  1944  0BEA  00F7               	movwf	___flge@ff2+3
  1945  0BEB  0850               	movf	(exp@x+2)^(0+128),w
  1946  0BEC  00F6               	movwf	___flge@ff2+2
  1947  0BED  084F               	movf	(exp@x+1)^(0+128),w
  1948  0BEE  00F5               	movwf	___flge@ff2+1
  1949  0BEF  084E               	movf	exp@x^(0+128),w
  1950  0BF0  00F4               	movwf	___flge@ff2
  1951  0BF1  24F9  3188         	fcall	___flge
  1952  0BF3  1803               	btfsc	3,0
  1953  0BF4  2BFC               	goto	l2730
  1954  0BF5  307F               	movlw	127
  1955  0BF6  00D1               	movwf	(?_exp+3)^(0+128)
  1956  0BF7  00D0               	movwf	(?_exp+2)^(0+128)
  1957  0BF8  30FF               	movlw	255
  1958  0BF9  00CF               	movwf	(?_exp+1)^(0+128)
  1959  0BFA  00CE               	movwf	?_exp^(0+128)
  1960  0BFB  0008               	return
  1961  0BFC                     l2730:	
  1962  0BFC  2723  3188         	fcall	PL46	;call to abstracted procedure
  1963  0BFE  00F0               	movwf	___flge@ff1
  1964  0BFF  30C4               	movlw	196
  1965  0C00  00F7               	movwf	___flge@ff2+3
  1966  0C01  303A               	movlw	58
  1967  0C02  00F6               	movwf	___flge@ff2+2
  1968  0C03  3048               	movlw	72
  1969  0C04  00F5               	movwf	___flge@ff2+1
  1970  0C05  3087               	movlw	135
  1971  0C06  00F4               	movwf	___flge@ff2
  1972  0C07  24F9  3188         	fcall	___flge
  1973  0C09  1803               	btfsc	3,0
  1974  0C0A  2C0C               	goto	l2734
  1975  0C0B  2F44               	ljmp	PL66	;call to abstracted procedure
  1976  0C0C                     l2734:	
  1977  0C0C  2723               	fcall	PL46	;call to abstracted procedure
  1978  0C0D  3183  2387  3188   	fcall	PL40	;call to abstracted procedure
  1979  0C10  24F9  3188         	fcall	___flge
  1980  0C12  1803               	btfsc	3,0
  1981  0C13  2C16               	goto	u2920
  1982  0C14  3001               	movlw	1
  1983  0C15  2C17               	goto	u2930
  1984  0C16                     u2920:	
  1985  0C16  3000               	movlw	0
  1986  0C17                     u2930:	
  1987  0C17  00D8               	movwf	exp@sign^(0+128)
  1988  0C18  0858               	movf	exp@sign^(0+128),w
  1989  0C19  1903               	btfsc	3,2
  1990  0C1A  2C2C               	goto	l2740
  1991  0C1B  0851               	movf	(exp@x+3)^(0+128),w
  1992  0C1C  00F3               	movwf	___flneg@f1+3
  1993  0C1D  0850               	movf	(exp@x+2)^(0+128),w
  1994  0C1E  00F2               	movwf	___flneg@f1+2
  1995  0C1F  084F               	movf	(exp@x+1)^(0+128),w
  1996  0C20  00F1               	movwf	___flneg@f1+1
  1997  0C21  084E               	movf	exp@x^(0+128),w
  1998  0C22  00F0               	movwf	___flneg@f1
  1999  0C23  25BF               	fcall	___flneg
  2000  0C24  0873               	movf	?___flneg+3,w
  2001  0C25  00D1               	movwf	(exp@x+3)^(0+128)
  2002  0C26  0872               	movf	?___flneg+2,w
  2003  0C27  00D0               	movwf	(exp@x+2)^(0+128)
  2004  0C28  0871               	movf	?___flneg+1,w
  2005  0C29  00CF               	movwf	(exp@x+1)^(0+128)
  2006  0C2A  0870               	movf	?___flneg,w
  2007  0C2B  00CE               	movwf	exp@x^(0+128)
  2008  0C2C                     l2740:	
  2009  0C2C  303F               	movlw	63
  2010  0C2D  0020               	movlb	0	; select bank0
  2011  0C2E  00C0               	movwf	___flmul@b+3
  2012  0C2F  30B8               	movlw	184
  2013  0C30  00BF               	movwf	___flmul@b+2
  2014  0C31  30AA               	movlw	170
  2015  0C32  00BE               	movwf	___flmul@b+1
  2016  0C33  303B               	movlw	59
  2017  0C34  00BD               	movwf	___flmul@b
  2018  0C35  0021               	movlb	1	; select bank1
  2019  0C36  0851               	movf	(exp@x+3)^(0+128),w
  2020  0C37  0020               	movlb	0	; select bank0
  2021  0C38  00C4               	movwf	___flmul@a+3
  2022  0C39  0021               	movlb	1	; select bank1
  2023  0C3A  0850               	movf	(exp@x+2)^(0+128),w
  2024  0C3B  0020               	movlb	0	; select bank0
  2025  0C3C  00C3               	movwf	___flmul@a+2
  2026  0C3D  0021               	movlb	1	; select bank1
  2027  0C3E  084F               	movf	(exp@x+1)^(0+128),w
  2028  0C3F  0020               	movlb	0	; select bank0
  2029  0C40  00C2               	movwf	___flmul@a+1
  2030  0C41  0021               	movlb	1	; select bank1
  2031  0C42  084E               	movf	exp@x^(0+128),w
  2032  0C43  0020               	movlb	0	; select bank0
  2033  0C44  00C1               	movwf	___flmul@a
  2034  0C45  3183  23B8  3188   	fcall	___flmul
  2035  0C48  0840               	movf	?___flmul+3,w
  2036  0C49  0021               	movlb	1	; select bank1
  2037  0C4A  00D1               	movwf	(exp@x+3)^(0+128)
  2038  0C4B  0020               	movlb	0	; select bank0
  2039  0C4C  083F               	movf	?___flmul+2,w
  2040  0C4D  0021               	movlb	1	; select bank1
  2041  0C4E  00D0               	movwf	(exp@x+2)^(0+128)
  2042  0C4F  0020               	movlb	0	; select bank0
  2043  0C50  083E               	movf	?___flmul+1,w
  2044  0C51  0021               	movlb	1	; select bank1
  2045  0C52  00CF               	movwf	(exp@x+1)^(0+128)
  2046  0C53  0020               	movlb	0	; select bank0
  2047  0C54  083D               	movf	?___flmul,w
  2048  0C55  0021               	movlb	1	; select bank1
  2049  0C56  00CE               	movwf	exp@x^(0+128)
  2050  0C57  0851               	movf	(exp@x+3)^(0+128),w
  2051  0C58  00B7               	movwf	(floor@x+3)^(0+128)
  2052  0C59  0850               	movf	(exp@x+2)^(0+128),w
  2053  0C5A  00B6               	movwf	(floor@x+2)^(0+128)
  2054  0C5B  084F               	movf	(exp@x+1)^(0+128),w
  2055  0C5C  00B5               	movwf	(floor@x+1)^(0+128)
  2056  0C5D  084E               	movf	exp@x^(0+128),w
  2057  0C5E  00B4               	movwf	floor@x^(0+128)
  2058  0C5F  3181  211A  3188   	fcall	_floor
  2059  0C62  0837               	movf	(?_floor+3)^(0+128),w
  2060  0C63  00D5               	movwf	(_exp$1335+3)^(0+128)
  2061  0C64  0836               	movf	(?_floor+2)^(0+128),w
  2062  0C65  00D4               	movwf	(_exp$1335+2)^(0+128)
  2063  0C66  0835               	movf	(?_floor+1)^(0+128),w
  2064  0C67  00D3               	movwf	(_exp$1335+1)^(0+128)
  2065  0C68  0834               	movf	?_floor^(0+128),w
  2066  0C69  00D2               	movwf	_exp$1335^(0+128)
  2067  0C6A  0855               	movf	(_exp$1335+3)^(0+128),w
  2068  0C6B  00F3               	movwf	___fltol@f1+3
  2069  0C6C  0854               	movf	(_exp$1335+2)^(0+128),w
  2070  0C6D  00F2               	movwf	___fltol@f1+2
  2071  0C6E  0853               	movf	(_exp$1335+1)^(0+128),w
  2072  0C6F  00F1               	movwf	___fltol@f1+1
  2073  0C70  0852               	movf	_exp$1335^(0+128),w
  2074  0C71  00F0               	movwf	___fltol@f1
  2075  0C72  25C8  3188         	fcall	___fltol
  2076  0C74  0871               	movf	?___fltol+1,w
  2077  0C75  00D7               	movwf	(exp@exponent+1)^(0+128)
  2078  0C76  0870               	movf	?___fltol,w
  2079  0C77  00D6               	movwf	exp@exponent^(0+128)
  2080  0C78  00FA               	movwf	___xxtofl@val
  2081  0C79  0857               	movf	(exp@exponent+1)^(0+128),w
  2082  0C7A  26A5  3188         	fcall	PL12	;call to abstracted procedure
  2083  0C7C  2555  3188         	fcall	___xxtofl
  2084  0C7E  087D               	movf	?___xxtofl+3,w
  2085  0C7F  0021               	movlb	1	; select bank1
  2086  0C80  00B7               	movwf	(___flsub@a+3)^(0+128)
  2087  0C81  087C               	movf	?___xxtofl+2,w
  2088  0C82  00B6               	movwf	(___flsub@a+2)^(0+128)
  2089  0C83  087B               	movf	?___xxtofl+1,w
  2090  0C84  00B5               	movwf	(___flsub@a+1)^(0+128)
  2091  0C85  087A               	movf	?___xxtofl,w
  2092  0C86  00B4               	movwf	___flsub@a^(0+128)
  2093  0C87  0851               	movf	(exp@x+3)^(0+128),w
  2094  0C88  00BB               	movwf	(___flsub@b+3)^(0+128)
  2095  0C89  0850               	movf	(exp@x+2)^(0+128),w
  2096  0C8A  00BA               	movwf	(___flsub@b+2)^(0+128)
  2097  0C8B  084F               	movf	(exp@x+1)^(0+128),w
  2098  0C8C  00B9               	movwf	(___flsub@b+1)^(0+128)
  2099  0C8D  084E               	movf	exp@x^(0+128),w
  2100  0C8E  00B8               	movwf	___flsub@b^(0+128)
  2101  0C8F  2613               	fcall	___flsub
  2102  0C90  0837               	movf	(?___flsub+3)^(0+128),w
  2103  0C91  00D1               	movwf	(exp@x+3)^(0+128)
  2104  0C92  0836               	movf	(?___flsub+2)^(0+128),w
  2105  0C93  00D0               	movwf	(exp@x+2)^(0+128)
  2106  0C94  0835               	movf	(?___flsub+1)^(0+128),w
  2107  0C95  00CF               	movwf	(exp@x+1)^(0+128)
  2108  0C96  0834               	movf	?___flsub^(0+128),w
  2109  0C97  00CE               	movwf	exp@x^(0+128)
  2110  0C98  0851               	movf	(exp@x+3)^(0+128),w
  2111  0C99  00B7               	movwf	(eval_poly@x+3)^(0+128)
  2112  0C9A  0850               	movf	(exp@x+2)^(0+128),w
  2113  0C9B  00B6               	movwf	(eval_poly@x+2)^(0+128)
  2114  0C9C  084F               	movf	(exp@x+1)^(0+128),w
  2115  0C9D  00B5               	movwf	(eval_poly@x+1)^(0+128)
  2116  0C9E  084E               	movf	exp@x^(0+128),w
  2117  0C9F  00B4               	movwf	eval_poly@x^(0+128)
  2118  0CA0  3029               	movlw	low (exp@coeff| (0+32768))
  2119  0CA1  00B8               	movwf	eval_poly@d^(0+128)
  2120  0CA2  3087               	movlw	high (exp@coeff| (0+32768))
  2121  0CA3  00B9               	movwf	(eval_poly@d^(0+128)+1)
  2122  0CA4  3009               	movlw	9
  2123  0CA5  00BA               	movwf	eval_poly@n^(0+128)
  2124  0CA6  01BB               	clrf	(eval_poly@n+1)^(0+128)
  2125  0CA7  3183  230F  3188   	fcall	_eval_poly
  2126  0CAA  0837               	movf	(?_eval_poly+3)^(0+128),w
  2127  0CAB  00C9               	movwf	(ldexp@value+3)^(0+128)
  2128  0CAC  0836               	movf	(?_eval_poly+2)^(0+128),w
  2129  0CAD  00C8               	movwf	(ldexp@value+2)^(0+128)
  2130  0CAE  0835               	movf	(?_eval_poly+1)^(0+128),w
  2131  0CAF  00C7               	movwf	(ldexp@value+1)^(0+128)
  2132  0CB0  0834               	movf	?_eval_poly^(0+128),w
  2133  0CB1  00C6               	movwf	ldexp@value^(0+128)
  2134  0CB2  0857               	movf	(exp@exponent+1)^(0+128),w
  2135  0CB3  00CB               	movwf	(ldexp@newexp+1)^(0+128)
  2136  0CB4  0856               	movf	exp@exponent^(0+128),w
  2137  0CB5  00CA               	movwf	ldexp@newexp^(0+128)
  2138  0CB6  2794  3188         	fcall	_ldexp
  2139  0CB8  0849               	movf	(?_ldexp+3)^(0+128),w
  2140  0CB9  00D1               	movwf	(exp@x+3)^(0+128)
  2141  0CBA  0848               	movf	(?_ldexp+2)^(0+128),w
  2142  0CBB  00D0               	movwf	(exp@x+2)^(0+128)
  2143  0CBC  0847               	movf	(?_ldexp+1)^(0+128),w
  2144  0CBD  00CF               	movwf	(exp@x+1)^(0+128)
  2145  0CBE  0846               	movf	?_ldexp^(0+128),w
  2146  0CBF  00CE               	movwf	exp@x^(0+128)
  2147  0CC0  0858               	movf	exp@sign^(0+128),w
  2148  0CC1  1903               	btfsc	3,2
  2149  0CC2  0008               	return
  2150  0CC3  26DC  3188         	fcall	PL22	;call to abstracted procedure
  2151  0CC5  307F               	movlw	127
  2152  0CC6  00B1               	movwf	___fleq@ff2+3
  2153  0CC7  00B0               	movwf	___fleq@ff2+2
  2154  0CC8  30FF               	movlw	255
  2155  0CC9  00AF               	movwf	___fleq@ff2+1
  2156  0CCA  00AE               	movwf	___fleq@ff2
  2157  0CCB  239B  3188         	fcall	___fleq
  2158  0CCD  1C03               	btfss	3,0
  2159  0CCE  2CD1               	goto	l2756
  2160  0CCF  0021               	movlb	1	; select bank1
  2161  0CD0  2F44               	ljmp	PL66	;call to abstracted procedure
  2162  0CD1                     l2756:	
  2163  0CD1  0021               	movlb	1	; select bank1
  2164  0CD2  0851               	movf	(exp@x+3)^(0+128),w
  2165  0CD3  0020               	movlb	0	; select bank0
  2166  0CD4  00D9               	movwf	___fldiv@a+3
  2167  0CD5  0021               	movlb	1	; select bank1
  2168  0CD6  0850               	movf	(exp@x+2)^(0+128),w
  2169  0CD7  0020               	movlb	0	; select bank0
  2170  0CD8  00D8               	movwf	___fldiv@a+2
  2171  0CD9  0021               	movlb	1	; select bank1
  2172  0CDA  084F               	movf	(exp@x+1)^(0+128),w
  2173  0CDB  0020               	movlb	0	; select bank0
  2174  0CDC  00D7               	movwf	___fldiv@a+1
  2175  0CDD  0021               	movlb	1	; select bank1
  2176  0CDE  084E               	movf	exp@x^(0+128),w
  2177  0CDF  0020               	movlb	0	; select bank0
  2178  0CE0  00D6               	movwf	___fldiv@a
  2179  0CE1  303F               	movlw	63
  2180  0CE2  00DD               	movwf	___fldiv@b+3
  2181  0CE3  3080               	movlw	128
  2182  0CE4  00DC               	movwf	___fldiv@b+2
  2183  0CE5  01DB               	clrf	___fldiv@b+1
  2184  0CE6  01DA               	clrf	___fldiv@b
  2185  0CE7  3185  252E         	fcall	___fldiv
  2186  0CE9  0859               	movf	?___fldiv+3,w
  2187  0CEA  0021               	movlb	1	; select bank1
  2188  0CEB  00D1               	movwf	(?_exp+3)^(0+128)
  2189  0CEC  0020               	movlb	0	; select bank0
  2190  0CED  0858               	movf	?___fldiv+2,w
  2191  0CEE  0021               	movlb	1	; select bank1
  2192  0CEF  00D0               	movwf	(?_exp+2)^(0+128)
  2193  0CF0  0020               	movlb	0	; select bank0
  2194  0CF1  0857               	movf	?___fldiv+1,w
  2195  0CF2  0021               	movlb	1	; select bank1
  2196  0CF3  00CF               	movwf	(?_exp+1)^(0+128)
  2197  0CF4  0020               	movlb	0	; select bank0
  2198  0CF5  0856               	movf	?___fldiv,w
  2199  0CF6  0021               	movlb	1	; select bank1
  2200  0CF7  00CE               	movwf	?_exp^(0+128)
  2201  0CF8  0008               	return
  2202  0CF9                     __end_of_exp:	
  2203  0CF9                     __ptext11:	
  2204 ;; *************** function ___flge *****************
  2205 ;; Defined at:
  2206 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  ff1             4    0[COMMON] long 
  2209 ;;  ff2             4    4[COMMON] long 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;		None               void
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 1F/1
  2218 ;;		On exit  : 1F/1
  2219 ;;		Unchanged: 1F/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2221 ;;      Params:         8       0       0       0
  2222 ;;      Locals:         0       0       0       0
  2223 ;;      Temps:          4       0       0       0
  2224 ;;      Totals:        12       0       0       0
  2225 ;;Total ram usage:       12 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_pow
  2232 ;;		_exp
  2233 ;;		_floor
  2234 ;;		_ldexp
  2235 ;;		_log
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function ___flge
  2241  0CF9                     ___flge:	
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2245  0CF9  3080               	movlw	128
  2246  0CFA  01F8               	clrf	??___flge
  2247  0CFB  01F9               	clrf	??___flge+1
  2248  0CFC  0572               	andwf	___flge@ff1+2,w
  2249  0CFD  00FA               	movwf	??___flge+2
  2250  0CFE  307F               	movlw	127
  2251  0CFF  0573               	andwf	___flge@ff1+3,w
  2252  0D00  00FB               	movwf	??___flge+3
  2253  0D01  047A               	iorwf	??___flge+2,w
  2254  0D02  0479               	iorwf	??___flge+1,w
  2255  0D03  0478               	iorwf	??___flge,w
  2256  0D04  1D03               	skipz
  2257  0D05  2D0A               	goto	l2064
  2258  0D06  01F0               	clrf	___flge@ff1
  2259  0D07  01F1               	clrf	___flge@ff1+1
  2260  0D08  01F2               	clrf	___flge@ff1+2
  2261  0D09  01F3               	clrf	___flge@ff1+3
  2262  0D0A                     l2064:	
  2263  0D0A  3080               	movlw	128
  2264  0D0B  01F8               	clrf	??___flge
  2265  0D0C  01F9               	clrf	??___flge+1
  2266  0D0D  0576               	andwf	___flge@ff2+2,w
  2267  0D0E  00FA               	movwf	??___flge+2
  2268  0D0F  307F               	movlw	127
  2269  0D10  0577               	andwf	___flge@ff2+3,w
  2270  0D11  00FB               	movwf	??___flge+3
  2271  0D12  047A               	iorwf	??___flge+2,w
  2272  0D13  0479               	iorwf	??___flge+1,w
  2273  0D14  0478               	iorwf	??___flge,w
  2274  0D15  1D03               	skipz
  2275  0D16  2D1B               	goto	l478
  2276  0D17  01F4               	clrf	___flge@ff2
  2277  0D18  01F5               	clrf	___flge@ff2+1
  2278  0D19  01F6               	clrf	___flge@ff2+2
  2279  0D1A  01F7               	clrf	___flge@ff2+3
  2280  0D1B                     l478:	
  2281  0D1B  1FF3               	btfss	___flge@ff1+3,7
  2282  0D1C  2D2F               	goto	l2070
  2283  0D1D  273E  3188         	fcall	PL64	;call to abstracted procedure
  2284  0D1F  0870               	movf	___flge@ff1,w
  2285  0D20  02F8               	subwf	??___flge,f
  2286  0D21  0871               	movf	___flge@ff1+1,w
  2287  0D22  3BF9               	subwfb	??___flge+1,f
  2288  0D23  0872               	movf	___flge@ff1+2,w
  2289  0D24  3BFA               	subwfb	??___flge+2,f
  2290  0D25  0873               	movf	___flge@ff1+3,w
  2291  0D26  3BFB               	subwfb	??___flge+3,f
  2292  0D27  087B               	movf	??___flge+3,w
  2293  0D28  00F3               	movwf	___flge@ff1+3
  2294  0D29  087A               	movf	??___flge+2,w
  2295  0D2A  00F2               	movwf	___flge@ff1+2
  2296  0D2B  0879               	movf	??___flge+1,w
  2297  0D2C  00F1               	movwf	___flge@ff1+1
  2298  0D2D  0878               	movf	??___flge,w
  2299  0D2E  00F0               	movwf	___flge@ff1
  2300  0D2F                     l2070:	
  2301  0D2F  1FF7               	btfss	___flge@ff2+3,7
  2302  0D30  2D43               	goto	l480
  2303  0D31  273E  3188         	fcall	PL64	;call to abstracted procedure
  2304  0D33  0874               	movf	___flge@ff2,w
  2305  0D34  02F8               	subwf	??___flge,f
  2306  0D35  0875               	movf	___flge@ff2+1,w
  2307  0D36  3BF9               	subwfb	??___flge+1,f
  2308  0D37  0876               	movf	___flge@ff2+2,w
  2309  0D38  3BFA               	subwfb	??___flge+2,f
  2310  0D39  0877               	movf	___flge@ff2+3,w
  2311  0D3A  3BFB               	subwfb	??___flge+3,f
  2312  0D3B  087B               	movf	??___flge+3,w
  2313  0D3C  00F7               	movwf	___flge@ff2+3
  2314  0D3D  087A               	movf	??___flge+2,w
  2315  0D3E  00F6               	movwf	___flge@ff2+2
  2316  0D3F  0879               	movf	??___flge+1,w
  2317  0D40  00F5               	movwf	___flge@ff2+1
  2318  0D41  0878               	movf	??___flge,w
  2319  0D42  00F4               	movwf	___flge@ff2
  2320  0D43                     l480:	
  2321  0D43  3080               	movlw	128
  2322  0D44  06F3               	xorwf	___flge@ff1+3,f
  2323  0D45  06F7               	xorwf	___flge@ff2+3,f
  2324  0D46  0877               	movf	___flge@ff2+3,w
  2325  0D47  0273               	subwf	___flge@ff1+3,w
  2326  0D48  1D03               	skipz
  2327  0D49  0008               	return
  2328  0D4A  0876               	movf	___flge@ff2+2,w
  2329  0D4B  0272               	subwf	___flge@ff1+2,w
  2330  0D4C  1D03               	skipz
  2331  0D4D  0008               	return
  2332  0D4E  0875               	movf	___flge@ff2+1,w
  2333  0D4F  0271               	subwf	___flge@ff1+1,w
  2334  0D50  1D03               	skipz
  2335  0D51  0008               	return
  2336  0D52  0874               	movf	___flge@ff2,w
  2337  0D53  0270               	subwf	___flge@ff1,w
  2338  0D54  0008               	return
  2339  0D55                     __end_of___flge:	
  2340  0D55                     __ptext9:	
  2341 ;; *************** function ___xxtofl *****************
  2342 ;; Defined at:
  2343 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  sign            1    wreg     unsigned char 
  2346 ;;  val             4   10[COMMON] long 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  sign            1    4[BANK0 ] unsigned char 
  2349 ;;  arg             4    6[BANK0 ] unsigned long 
  2350 ;;  exp             1    5[BANK0 ] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  4   10[COMMON] unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 1C/2
  2357 ;;		On exit  : 1F/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2360 ;;      Params:         4       0       0       0
  2361 ;;      Locals:         0       6       0       0
  2362 ;;      Temps:          0       4       0       0
  2363 ;;      Totals:         4      10       0       0
  2364 ;;Total ram usage:       14 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;;		_pow
  2372 ;;		_exp
  2373 ;;		_floor
  2374 ;;		_log
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function ___xxtofl
  2380  0D55                     ___xxtofl:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2384                           ;___xxtofl@sign stored from wreg
  2385  0D55  0020               	movlb	0	; select bank0
  2386  0D56  00A4               	movwf	___xxtofl@sign
  2387  0D57  0824               	movf	___xxtofl@sign,w
  2388  0D58  1D03               	btfss	3,2
  2389  0D59  1FFD               	btfss	___xxtofl@val+3,7
  2390  0D5A  2D6B               	goto	l2420
  2391  0D5B  097A               	comf	___xxtofl@val,w
  2392  0D5C  00A6               	movwf	___xxtofl@arg
  2393  0D5D  097B               	comf	___xxtofl@val+1,w
  2394  0D5E  00A7               	movwf	___xxtofl@arg+1
  2395  0D5F  097C               	comf	___xxtofl@val+2,w
  2396  0D60  00A8               	movwf	___xxtofl@arg+2
  2397  0D61  097D               	comf	___xxtofl@val+3,w
  2398  0D62  00A9               	movwf	___xxtofl@arg+3
  2399  0D63  0AA6               	incf	___xxtofl@arg,f
  2400  0D64  1903               	skipnz
  2401  0D65  0AA7               	incf	___xxtofl@arg+1,f
  2402  0D66  1903               	skipnz
  2403  0D67  0AA8               	incf	___xxtofl@arg+2,f
  2404  0D68  1903               	skipnz
  2405  0D69  0AA9               	incf	___xxtofl@arg+3,f
  2406  0D6A  2D73               	goto	l750
  2407  0D6B                     l2420:	
  2408  0D6B  087D               	movf	___xxtofl@val+3,w
  2409  0D6C  00A9               	movwf	___xxtofl@arg+3
  2410  0D6D  087C               	movf	___xxtofl@val+2,w
  2411  0D6E  00A8               	movwf	___xxtofl@arg+2
  2412  0D6F  087B               	movf	___xxtofl@val+1,w
  2413  0D70  00A7               	movwf	___xxtofl@arg+1
  2414  0D71  087A               	movf	___xxtofl@val,w
  2415  0D72  00A6               	movwf	___xxtofl@arg
  2416  0D73                     l750:	
  2417  0D73  087D               	movf	___xxtofl@val+3,w
  2418  0D74  047C               	iorwf	___xxtofl@val+2,w
  2419  0D75  047B               	iorwf	___xxtofl@val+1,w
  2420  0D76  047A               	iorwf	___xxtofl@val,w
  2421  0D77  1D03               	skipz
  2422  0D78  2D7E               	goto	l2424
  2423  0D79  01FA               	clrf	?___xxtofl
  2424  0D7A  01FB               	clrf	?___xxtofl+1
  2425  0D7B  01FC               	clrf	?___xxtofl+2
  2426  0D7C  01FD               	clrf	?___xxtofl+3
  2427  0D7D  0008               	return
  2428  0D7E                     l2424:	
  2429  0D7E  3096               	movlw	150
  2430  0D7F  00A5               	movwf	___xxtofl@exp
  2431  0D80                     l2428:	
  2432  0D80  30FE               	movlw	254
  2433  0D81  0529               	andwf	___xxtofl@arg+3,w
  2434  0D82  1903               	btfsc	3,2
  2435  0D83  2D91               	goto	l2436
  2436  0D84  0AA5               	incf	___xxtofl@exp,f
  2437  0D85  2749  3188         	fcall	PL86	;call to abstracted procedure
  2438  0D87  2D80               	goto	l2428
  2439  0D88                     l2430:	
  2440  0D88  3001               	movlw	1
  2441  0D89  0AA5               	incf	___xxtofl@exp,f
  2442  0D8A  07A6               	addwf	___xxtofl@arg,f
  2443  0D8B  3000               	movlw	0
  2444  0D8C  3DA7               	addwfc	___xxtofl@arg+1,f
  2445  0D8D  3DA8               	addwfc	___xxtofl@arg+2,f
  2446  0D8E  3DA9               	addwfc	___xxtofl@arg+3,f
  2447  0D8F  2749  3188         	fcall	PL86	;call to abstracted procedure
  2448  0D91                     l2436:	
  2449  0D91  30FF               	movlw	255
  2450  0D92  0529               	andwf	___xxtofl@arg+3,w
  2451  0D93  1903               	btfsc	3,2
  2452  0D94  2D9F               	goto	l2440
  2453  0D95  2D88               	goto	l2430
  2454  0D96                     l2442:	
  2455  0D96  3002               	movlw	2
  2456  0D97  0225               	subwf	___xxtofl@exp,w
  2457  0D98  1C03               	btfss	3,0
  2458  0D99  2DA1               	goto	l763
  2459  0D9A  03A5               	decf	___xxtofl@exp,f
  2460  0D9B  35A6               	lslf	___xxtofl@arg,f
  2461  0D9C  0DA7               	rlf	___xxtofl@arg+1,f
  2462  0D9D  0DA8               	rlf	___xxtofl@arg+2,f
  2463  0D9E  0DA9               	rlf	___xxtofl@arg+3,f
  2464  0D9F                     l2440:	
  2465  0D9F  1FA8               	btfss	___xxtofl@arg+2,7
  2466  0DA0  2D96               	goto	l2442
  2467  0DA1                     l763:	
  2468  0DA1  1C25               	btfss	___xxtofl@exp,0
  2469  0DA2  13A8               	bcf	___xxtofl@arg+2,7
  2470  0DA3  36A5               	lsrf	___xxtofl@exp,f
  2471  0DA4  0825               	movf	___xxtofl@exp,w
  2472  0DA5  00A3               	movwf	??___xxtofl+3
  2473  0DA6  01A2               	clrf	??___xxtofl+2
  2474  0DA7  01A1               	clrf	??___xxtofl+1
  2475  0DA8  01A0               	clrf	??___xxtofl
  2476  0DA9  0820               	movf	??___xxtofl,w
  2477  0DAA  04A6               	iorwf	___xxtofl@arg,f
  2478  0DAB  0821               	movf	??___xxtofl+1,w
  2479  0DAC  04A7               	iorwf	___xxtofl@arg+1,f
  2480  0DAD  0822               	movf	??___xxtofl+2,w
  2481  0DAE  04A8               	iorwf	___xxtofl@arg+2,f
  2482  0DAF  0823               	movf	??___xxtofl+3,w
  2483  0DB0  04A9               	iorwf	___xxtofl@arg+3,f
  2484  0DB1  0824               	movf	___xxtofl@sign,w
  2485  0DB2  1D03               	btfss	3,2
  2486  0DB3  1FFD               	btfss	___xxtofl@val+3,7
  2487  0DB4  2DB6               	goto	l2454
  2488  0DB5  17A9               	bsf	___xxtofl@arg+3,7
  2489  0DB6                     l2454:	
  2490  0DB6  0829               	movf	___xxtofl@arg+3,w
  2491  0DB7  00FD               	movwf	?___xxtofl+3
  2492  0DB8  0828               	movf	___xxtofl@arg+2,w
  2493  0DB9  00FC               	movwf	?___xxtofl+2
  2494  0DBA  0827               	movf	___xxtofl@arg+1,w
  2495  0DBB  00FB               	movwf	?___xxtofl+1
  2496  0DBC  0826               	movf	___xxtofl@arg,w
  2497  0DBD  00FA               	movwf	?___xxtofl
  2498  0DBE  0008               	return
  2499  0DBF                     __end_of___xxtofl:	
  2500  0DBF                     __ptext17:	
  2501 ;; *************** function ___flneg *****************
  2502 ;; Defined at:
  2503 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  f1              4    0[COMMON] unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  4    0[COMMON] unsigned char 
  2510 ;; Registers used:
  2511 ;;		wreg
  2512 ;; Tracked objects:
  2513 ;;		On entry : 1F/1
  2514 ;;		On exit  : 1F/1
  2515 ;;		Unchanged: 1F/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2517 ;;      Params:         4       0       0       0
  2518 ;;      Locals:         0       0       0       0
  2519 ;;      Temps:          0       0       0       0
  2520 ;;      Totals:         4       0       0       0
  2521 ;;Total ram usage:        4 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_pow
  2528 ;;		_exp
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function ___flneg
  2534  0DBF                     ___flneg:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in ___flneg: [wreg]
  2538  0DBF  0873               	movf	___flneg@f1+3,w
  2539  0DC0  0472               	iorwf	___flneg@f1+2,w
  2540  0DC1  0471               	iorwf	___flneg@f1+1,w
  2541  0DC2  0470               	iorwf	___flneg@f1,w
  2542  0DC3  1903               	skipnz
  2543  0DC4  0008               	return
  2544  0DC5  3080               	movlw	128
  2545  0DC6  06F3               	xorwf	___flneg@f1+3,f
  2546  0DC7  0008               	return
  2547  0DC8                     __end_of___flneg:	
  2548  0DC8                     __ptext10:	
  2549 ;; *************** function ___fltol *****************
  2550 ;; Defined at:
  2551 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  f1              4    0[COMMON] unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  exp1            1    9[COMMON] unsigned char 
  2556 ;;  sign1           1    8[COMMON] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  4    0[COMMON] long 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 1F/1
  2563 ;;		On exit  : 1F/1
  2564 ;;		Unchanged: 1F/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2566 ;;      Params:         4       0       0       0
  2567 ;;      Locals:         2       0       0       0
  2568 ;;      Temps:          4       0       0       0
  2569 ;;      Totals:        10       0       0       0
  2570 ;;Total ram usage:       10 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_pow
  2577 ;;		_exp
  2578 ;;		_floor
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function ___fltol
  2584  0DC8                     ___fltol:	
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2588  0DC8  1003               	clrc
  2589  0DC9  0D72               	rlf	___fltol@f1+2,w
  2590  0DCA  0D73               	rlf	___fltol@f1+3,w
  2591  0DCB  00F9               	movwf	___fltol@exp1
  2592  0DCC  0879               	movf	___fltol@exp1,w
  2593  0DCD  1D03               	btfss	3,2
  2594  0DCE  2DD4               	goto	l2084
  2595  0DCF                     l2082:	
  2596  0DCF  01F0               	clrf	?___fltol
  2597  0DD0  01F1               	clrf	?___fltol+1
  2598  0DD1  01F2               	clrf	?___fltol+2
  2599  0DD2  01F3               	clrf	?___fltol+3
  2600  0DD3  0008               	return
  2601  0DD4                     l2084:	
  2602  0DD4  0870               	movf	___fltol@f1,w
  2603  0DD5  00F4               	movwf	??___fltol
  2604  0DD6  0871               	movf	___fltol@f1+1,w
  2605  0DD7  00F5               	movwf	??___fltol+1
  2606  0DD8  0872               	movf	___fltol@f1+2,w
  2607  0DD9  00F6               	movwf	??___fltol+2
  2608  0DDA  0873               	movf	___fltol@f1+3,w
  2609  0DDB  00F7               	movwf	??___fltol+3
  2610  0DDC  301F               	movlw	31
  2611  0DDD                     u1785:	
  2612  0DDD  36F7               	lsrf	??___fltol+3,f
  2613  0DDE  0CF6               	rrf	??___fltol+2,f
  2614  0DDF  0CF5               	rrf	??___fltol+1,f
  2615  0DE0  0CF4               	rrf	??___fltol,f
  2616  0DE1  0B89               	decfsz	9,f
  2617  0DE2  2DDD               	goto	u1785
  2618  0DE3  0874               	movf	??___fltol,w
  2619  0DE4  00F8               	movwf	___fltol@sign1
  2620  0DE5  3096               	movlw	150
  2621  0DE6  17F2               	bsf	___fltol@f1+2,7
  2622  0DE7  01F3               	clrf	___fltol@f1+3
  2623  0DE8  02F9               	subwf	___fltol@exp1,f
  2624  0DE9  1FF9               	btfss	___fltol@exp1,7
  2625  0DEA  2DF7               	goto	l2102
  2626  0DEB  0879               	movf	___fltol@exp1,w
  2627  0DEC  3A80               	xorlw	128
  2628  0DED  3E97               	addlw	151
  2629  0DEE  1C03               	btfss	3,0
  2630  0DEF  2DCF               	goto	l2082
  2631  0DF0                     l2098:	
  2632  0DF0  36F3               	lsrf	___fltol@f1+3,f
  2633  0DF1  0CF2               	rrf	___fltol@f1+2,f
  2634  0DF2  0CF1               	rrf	___fltol@f1+1,f
  2635  0DF3  0CF0               	rrf	___fltol@f1,f
  2636  0DF4  0FF9               	incfsz	___fltol@exp1,f
  2637  0DF5  2DF0               	goto	l2098
  2638  0DF6  2E04               	goto	l2110
  2639  0DF7                     l2102:	
  2640  0DF7  3020               	movlw	32
  2641  0DF8  0279               	subwf	___fltol@exp1,w
  2642  0DF9  1803               	btfsc	3,0
  2643  0DFA  2DCF               	goto	l2082
  2644  0DFB                     l2108:	
  2645  0DFB  0879               	movf	___fltol@exp1,w
  2646  0DFC  1903               	btfsc	3,2
  2647  0DFD  2E04               	goto	l2110
  2648  0DFE  35F0               	lslf	___fltol@f1,f
  2649  0DFF  0DF1               	rlf	___fltol@f1+1,f
  2650  0E00  0DF2               	rlf	___fltol@f1+2,f
  2651  0E01  0DF3               	rlf	___fltol@f1+3,f
  2652  0E02  03F9               	decf	___fltol@exp1,f
  2653  0E03  2DFB               	goto	l2108
  2654  0E04                     l2110:	
  2655  0E04  0878               	movf	___fltol@sign1,w
  2656  0E05  1903               	btfsc	3,2
  2657  0E06  0008               	return
  2658  0E07  09F0               	comf	___fltol@f1,f
  2659  0E08  09F1               	comf	___fltol@f1+1,f
  2660  0E09  09F2               	comf	___fltol@f1+2,f
  2661  0E0A  09F3               	comf	___fltol@f1+3,f
  2662  0E0B  0AF0               	incf	___fltol@f1,f
  2663  0E0C  1903               	skipnz
  2664  0E0D  0AF1               	incf	___fltol@f1+1,f
  2665  0E0E  1903               	skipnz
  2666  0E0F  0AF2               	incf	___fltol@f1+2,f
  2667  0E10  1903               	skipnz
  2668  0E11  0AF3               	incf	___fltol@f1+3,f
  2669  0E12  0008               	return
  2670  0E13                     __end_of___fltol:	
  2671  0E13                     __ptext15:	
  2672 ;; *************** function ___flsub *****************
  2673 ;; Defined at:
  2674 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  a               4   20[BANK1 ] unsigned int 
  2677 ;;  b               4   24[BANK1 ] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  4   20[BANK1 ] unsigned int 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, pclath, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 1F/1
  2686 ;;		On exit  : 1F/1
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2689 ;;      Params:         0       0       8       0
  2690 ;;      Locals:         0       0       0       0
  2691 ;;      Temps:          0       0       0       0
  2692 ;;      Totals:         0       0       8       0
  2693 ;;Total ram usage:        8 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    2
  2696 ;; This function calls:
  2697 ;;		___fladd
  2698 ;; This function is called by:
  2699 ;;		_exp
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function ___flsub
  2705  0E13                     ___flsub:	
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  2709  0E13  3080               	movlw	128
  2710  0E14  06B7               	xorwf	(___flsub@a+3)^(0+128),f
  2711  0E15  083B               	movf	(___flsub@b+3)^(0+128),w
  2712  0E16  00A3               	movwf	(___fladd@b+3)^(0+128)
  2713  0E17  083A               	movf	(___flsub@b+2)^(0+128),w
  2714  0E18  00A2               	movwf	(___fladd@b+2)^(0+128)
  2715  0E19  0839               	movf	(___flsub@b+1)^(0+128),w
  2716  0E1A  00A1               	movwf	(___fladd@b+1)^(0+128)
  2717  0E1B  0838               	movf	___flsub@b^(0+128),w
  2718  0E1C  00A0               	movwf	___fladd@b^(0+128)
  2719  0E1D  0837               	movf	(___flsub@a+3)^(0+128),w
  2720  0E1E  00A7               	movwf	(___fladd@a+3)^(0+128)
  2721  0E1F  0836               	movf	(___flsub@a+2)^(0+128),w
  2722  0E20  00A6               	movwf	(___fladd@a+2)^(0+128)
  2723  0E21  0835               	movf	(___flsub@a+1)^(0+128),w
  2724  0E22  00A5               	movwf	(___fladd@a+1)^(0+128)
  2725  0E23  0834               	movf	___flsub@a^(0+128),w
  2726  0E24  00A4               	movwf	___fladd@a^(0+128)
  2727  0E25  3181  21DF         	fcall	___fladd
  2728  0E27  0823               	movf	(?___fladd+3)^(0+128),w
  2729  0E28  00B7               	movwf	(?___flsub+3)^(0+128)
  2730  0E29  0822               	movf	(?___fladd+2)^(0+128),w
  2731  0E2A  00B6               	movwf	(?___flsub+2)^(0+128)
  2732  0E2B  0821               	movf	(?___fladd+1)^(0+128),w
  2733  0E2C  00B5               	movwf	(?___flsub+1)^(0+128)
  2734  0E2D  0820               	movf	?___fladd^(0+128),w
  2735  0E2E  00B4               	movwf	?___flsub^(0+128)
  2736  0E2F  0008               	return
  2737  0E30                     __end_of___flsub:	
  2738  0E30                     PL2:	
  2739  0E30  087D               	movf	?___xxtofl+3,w
  2740  0E31  0022               	movlb	2	; select bank2
  2741  0E32  00C8               	movwf	(_adc+3)^(0+256)
  2742  0E33  087C               	movf	?___xxtofl+2,w
  2743  0E34  00C7               	movwf	(_adc+2)^(0+256)
  2744  0E35  087B               	movf	?___xxtofl+1,w
  2745  0E36  00C6               	movwf	(_adc+1)^(0+256)
  2746  0E37  087A               	movf	?___xxtofl,w
  2747  0E38  00C5               	movwf	_adc^(0+256)
  2748  0E39  30C0               	movlw	192
  2749  0E3A  0021               	movlb	1	; select bank1
  2750  0E3B  00A3               	movwf	(___fladd@b+3)^(0+128)
  2751  0E3C  3020               	movlw	32
  2752  0E3D  00A2               	movwf	(___fladd@b+2)^(0+128)
  2753  0E3E  3044               	movlw	68
  2754  0E3F  01A1               	clrf	(___fladd@b+1)^(0+128)
  2755  0E40  01A0               	clrf	___fladd@b^(0+128)
  2756  0E41  0020               	movlb	0	; select bank0
  2757  0E42  00D9               	movwf	___fldiv@a+3
  2758  0E43  307F               	movlw	127
  2759  0E44  00D8               	movwf	___fldiv@a+2
  2760  0E45  30C0               	movlw	192
  2761  0E46  00D7               	movwf	___fldiv@a+1
  2762  0E47  3040               	movlw	64
  2763  0E48  01D6               	clrf	___fldiv@a
  2764  0E49  00C0               	movwf	___flmul@b+3
  2765  0E4A  30A0               	movlw	160
  2766  0E4B  00BF               	movwf	___flmul@b+2
  2767  0E4C  01BE               	clrf	___flmul@b+1
  2768  0E4D  01BD               	clrf	___flmul@b
  2769  0E4E  0022               	movlb	2	; select bank2
  2770  0E4F  0848               	movf	(_adc+3)^(0+256),w
  2771  0E50  0020               	movlb	0	; select bank0
  2772  0E51  00C4               	movwf	___flmul@a+3
  2773  0E52  0022               	movlb	2	; select bank2
  2774  0E53  0847               	movf	(_adc+2)^(0+256),w
  2775  0E54  0020               	movlb	0	; select bank0
  2776  0E55  00C3               	movwf	___flmul@a+2
  2777  0E56  0022               	movlb	2	; select bank2
  2778  0E57  0846               	movf	(_adc+1)^(0+256),w
  2779  0E58  0020               	movlb	0	; select bank0
  2780  0E59  00C2               	movwf	___flmul@a+1
  2781  0E5A  0022               	movlb	2	; select bank2
  2782  0E5B  0845               	movf	_adc^(0+256),w
  2783  0E5C  0020               	movlb	0	; select bank0
  2784  0E5D  00C1               	movwf	___flmul@a
  2785  0E5E  0008               	return
  2786  0E5F                     __end_ofPL2:	
  2787  0E5F                     PL4:	
  2788  0E5F  0840               	movf	?___flmul+3,w
  2789  0E60  0022               	movlb	2	; select bank2
  2790  0E61  00C8               	movwf	(_adc+3)^(0+256)
  2791  0E62  0020               	movlb	0	; select bank0
  2792  0E63  083F               	movf	?___flmul+2,w
  2793  0E64  0022               	movlb	2	; select bank2
  2794  0E65  00C7               	movwf	(_adc+2)^(0+256)
  2795  0E66  0020               	movlb	0	; select bank0
  2796  0E67  083E               	movf	?___flmul+1,w
  2797  0E68  0022               	movlb	2	; select bank2
  2798  0E69  00C6               	movwf	(_adc+1)^(0+256)
  2799  0E6A  0020               	movlb	0	; select bank0
  2800  0E6B  083D               	movf	?___flmul,w
  2801  0E6C  0022               	movlb	2	; select bank2
  2802  0E6D  00C5               	movwf	_adc^(0+256)
  2803  0E6E  3040               	movlw	64
  2804  0E6F  0021               	movlb	1	; select bank1
  2805  0E70  00E0               	movwf	(pow@y+3)^(0+128)
  2806  0E71  01DF               	clrf	(pow@y+2)^(0+128)
  2807  0E72  01DE               	clrf	(pow@y+1)^(0+128)
  2808  0E73  01DD               	clrf	pow@y^(0+128)
  2809  0E74  0022               	movlb	2	; select bank2
  2810  0E75  0848               	movf	(_adc+3)^(0+256),w
  2811  0E76  0021               	movlb	1	; select bank1
  2812  0E77  00DC               	movwf	(pow@x+3)^(0+128)
  2813  0E78  0022               	movlb	2	; select bank2
  2814  0E79  0847               	movf	(_adc+2)^(0+256),w
  2815  0E7A  0021               	movlb	1	; select bank1
  2816  0E7B  00DB               	movwf	(pow@x+2)^(0+128)
  2817  0E7C  0022               	movlb	2	; select bank2
  2818  0E7D  0846               	movf	(_adc+1)^(0+256),w
  2819  0E7E  0021               	movlb	1	; select bank1
  2820  0E7F  00DA               	movwf	(pow@x+1)^(0+128)
  2821  0E80  0022               	movlb	2	; select bank2
  2822  0E81  0845               	movf	_adc^(0+256),w
  2823  0E82  0021               	movlb	1	; select bank1
  2824  0E83  00D9               	movwf	pow@x^(0+128)
  2825  0E84  0008               	return
  2826  0E85                     __end_ofPL4:	
  2827  0E85                     PL6:	
  2828  0E85  085C               	movf	(?_pow+3)^(0+128),w
  2829  0E86  0022               	movlb	2	; select bank2
  2830  0E87  00D6               	movwf	(_main$1332+3)^(0+256)
  2831  0E88  0021               	movlb	1	; select bank1
  2832  0E89  085B               	movf	(?_pow+2)^(0+128),w
  2833  0E8A  0022               	movlb	2	; select bank2
  2834  0E8B  00D5               	movwf	(_main$1332+2)^(0+256)
  2835  0E8C  0021               	movlb	1	; select bank1
  2836  0E8D  085A               	movf	(?_pow+1)^(0+128),w
  2837  0E8E  0022               	movlb	2	; select bank2
  2838  0E8F  00D4               	movwf	(_main$1332+1)^(0+256)
  2839  0E90  0021               	movlb	1	; select bank1
  2840  0E91  0859               	movf	?_pow^(0+128),w
  2841  0E92  0022               	movlb	2	; select bank2
  2842  0E93  00D3               	movwf	_main$1332^(0+256)
  2843  0E94  0856               	movf	(_main$1332+3)^(0+256),w
  2844  0E95  0021               	movlb	1	; select bank1
  2845  0E96  00A3               	movwf	(___fladd@b+3)^(0+128)
  2846  0E97  0022               	movlb	2	; select bank2
  2847  0E98  0855               	movf	(_main$1332+2)^(0+256),w
  2848  0E99  0021               	movlb	1	; select bank1
  2849  0E9A  00A2               	movwf	(___fladd@b+2)^(0+128)
  2850  0E9B  0022               	movlb	2	; select bank2
  2851  0E9C  0854               	movf	(_main$1332+1)^(0+256),w
  2852  0E9D  0021               	movlb	1	; select bank1
  2853  0E9E  00A1               	movwf	(___fladd@b+1)^(0+128)
  2854  0E9F  0022               	movlb	2	; select bank2
  2855  0EA0  0853               	movf	_main$1332^(0+256),w
  2856  0EA1  0021               	movlb	1	; select bank1
  2857  0EA2  00A0               	movwf	___fladd@b^(0+128)
  2858  0EA3  0022               	movlb	2	; select bank2
  2859  0EA4  0008               	return
  2860  0EA5                     __end_ofPL6:	
  2861  0EA5                     PL12:	
  2862  0EA5  00FB               	movwf	___xxtofl@val+1
  2863  0EA6  0D89               	rlf	9,f
  2864  0EA7  3B89               	subwfb	9,f
  2865  0EA8  0989               	comf	9,f
  2866  0EA9  00FC               	movwf	___xxtofl@val+2
  2867  0EAA  00FD               	movwf	___xxtofl@val+3
  2868  0EAB  3401               	retlw	1
  2869  0EAC                     __end_ofPL12:	
  2870  0EAC                     PL16:	
  2871  0EAC  0870               	movf	?_ADC_read,w
  2872  0EAD  0022               	movlb	2	; select bank2
  2873  0EAE  00CD               	movwf	??_main^(0+256)
  2874  0EAF  0871               	movf	?_ADC_read+1,w
  2875  0EB0  00CE               	movwf	(??_main^(0+256)+1)
  2876  0EB1  01CF               	clrf	(??_main^(0+256)+2)
  2877  0EB2  01D0               	clrf	(??_main^(0+256)+3)
  2878  0EB3  0850               	movf	(??_main+3)^(0+256),w
  2879  0EB4  00FD               	movwf	___xxtofl@val+3
  2880  0EB5  084F               	movf	(??_main+2)^(0+256),w
  2881  0EB6  00FC               	movwf	___xxtofl@val+2
  2882  0EB7  084E               	movf	(??_main+1)^(0+256),w
  2883  0EB8  00FB               	movwf	___xxtofl@val+1
  2884  0EB9  084D               	movf	??_main^(0+256),w
  2885  0EBA  00FA               	movwf	___xxtofl@val
  2886  0EBB  3400               	retlw	0
  2887  0EBC                     __end_ofPL16:	
  2888  0EBC                     PL18:	
  2889  0EBC  0859               	movf	?___fldiv+3,w
  2890  0EBD  0021               	movlb	1	; select bank1
  2891  0EBE  00A3               	movwf	(sqrt@a+3)^(0+128)
  2892  0EBF  0020               	movlb	0	; select bank0
  2893  0EC0  0858               	movf	?___fldiv+2,w
  2894  0EC1  0021               	movlb	1	; select bank1
  2895  0EC2  00A2               	movwf	(sqrt@a+2)^(0+128)
  2896  0EC3  0020               	movlb	0	; select bank0
  2897  0EC4  0857               	movf	?___fldiv+1,w
  2898  0EC5  0021               	movlb	1	; select bank1
  2899  0EC6  00A1               	movwf	(sqrt@a+1)^(0+128)
  2900  0EC7  0020               	movlb	0	; select bank0
  2901  0EC8  0856               	movf	?___fldiv,w
  2902  0EC9  0021               	movlb	1	; select bank1
  2903  0ECA  00A0               	movwf	sqrt@a^(0+128)
  2904  0ECB  0008               	return
  2905  0ECC                     __end_ofPL18:	
  2906  0ECC                     PL20:	
  2907  0ECC  0823               	movf	(?___fladd+3)^(0+128),w
  2908  0ECD  0022               	movlb	2	; select bank2
  2909  0ECE  00C8               	movwf	(_adc+3)^(0+256)
  2910  0ECF  0021               	movlb	1	; select bank1
  2911  0ED0  0822               	movf	(?___fladd+2)^(0+128),w
  2912  0ED1  0022               	movlb	2	; select bank2
  2913  0ED2  00C7               	movwf	(_adc+2)^(0+256)
  2914  0ED3  0021               	movlb	1	; select bank1
  2915  0ED4  0821               	movf	(?___fladd+1)^(0+128),w
  2916  0ED5  0022               	movlb	2	; select bank2
  2917  0ED6  00C6               	movwf	(_adc+1)^(0+256)
  2918  0ED7  0021               	movlb	1	; select bank1
  2919  0ED8  0820               	movf	?___fladd^(0+128),w
  2920  0ED9  0022               	movlb	2	; select bank2
  2921  0EDA  00C5               	movwf	_adc^(0+256)
  2922  0EDB  0008               	return
  2923  0EDC                     __end_ofPL20:	
  2924  0EDC                     PL22:	
  2925  0EDC  0851               	movf	(exp@x+3)^(0+128),w
  2926  0EDD  0020               	movlb	0	; select bank0
  2927  0EDE  00AD               	movwf	___fleq@ff1+3
  2928  0EDF  0021               	movlb	1	; select bank1
  2929  0EE0  0850               	movf	(exp@x+2)^(0+128),w
  2930  0EE1  0020               	movlb	0	; select bank0
  2931  0EE2  00AC               	movwf	___fleq@ff1+2
  2932  0EE3  0021               	movlb	1	; select bank1
  2933  0EE4  084F               	movf	(exp@x+1)^(0+128),w
  2934  0EE5  0020               	movlb	0	; select bank0
  2935  0EE6  00AB               	movwf	___fleq@ff1+1
  2936  0EE7  0021               	movlb	1	; select bank1
  2937  0EE8  084E               	movf	exp@x^(0+128),w
  2938  0EE9  0020               	movlb	0	; select bank0
  2939  0EEA  00AA               	movwf	___fleq@ff1
  2940  0EEB  0008               	return
  2941  0EEC                     __end_ofPL22:	
  2942  0EEC                     PL24:	
  2943  0EEC  0859               	movf	?___fldiv+3,w
  2944  0EED  0021               	movlb	1	; select bank1
  2945  0EEE  00A7               	movwf	(___fladd@a+3)^(0+128)
  2946  0EEF  0020               	movlb	0	; select bank0
  2947  0EF0  0858               	movf	?___fldiv+2,w
  2948  0EF1  0021               	movlb	1	; select bank1
  2949  0EF2  00A6               	movwf	(___fladd@a+2)^(0+128)
  2950  0EF3  0020               	movlb	0	; select bank0
  2951  0EF4  0857               	movf	?___fldiv+1,w
  2952  0EF5  0021               	movlb	1	; select bank1
  2953  0EF6  00A5               	movwf	(___fladd@a+1)^(0+128)
  2954  0EF7  0020               	movlb	0	; select bank0
  2955  0EF8  0856               	movf	?___fldiv,w
  2956  0EF9  0021               	movlb	1	; select bank1
  2957  0EFA  00A4               	movwf	___fladd@a^(0+128)
  2958  0EFB  0008               	return
  2959  0EFC                     __end_ofPL24:	
  2960  0EFC                     PL28:	
  2961  0EFC  087D               	movf	?___xxtofl+3,w
  2962  0EFD  00D9               	movwf	___fldiv@a+3
  2963  0EFE  087C               	movf	?___xxtofl+2,w
  2964  0EFF  00D8               	movwf	___fldiv@a+2
  2965  0F00  087B               	movf	?___xxtofl+1,w
  2966  0F01  00D7               	movwf	___fldiv@a+1
  2967  0F02  087A               	movf	?___xxtofl,w
  2968  0F03  00D6               	movwf	___fldiv@a
  2969  0F04  0022               	movlb	2	; select bank2
  2970  0F05  0008               	return
  2971  0F06                     __end_ofPL28:	
  2972  0F06                     PL34:	
  2973  0F06  0020               	movlb	0	; select bank0
  2974  0F07  00AA               	movwf	___fleq@ff1
  2975  0F08  01AE               	clrf	___fleq@ff2
  2976  0F09  01AF               	clrf	___fleq@ff2+1
  2977  0F0A  01B0               	clrf	___fleq@ff2+2
  2978  0F0B  01B1               	clrf	___fleq@ff2+3
  2979  0F0C  0008               	return
  2980  0F0D                     __end_ofPL34:	
  2981  0F0D                     PL36:	
  2982  0F0D  0086               	movwf	6
  2983  0F0E  3001               	movlw	1	; select bank2/3
  2984  0F0F  0087               	movwf	7
  2985  0F10  3F40               	moviw [0]fsr1
  2986  0F11  0020               	movlb	0	; select bank0
  2987  0F12  00BD               	movwf	___flmul@b
  2988  0F13  3F41               	moviw [1]fsr1
  2989  0F14  00BE               	movwf	___flmul@b+1
  2990  0F15  3F42               	moviw [2]fsr1
  2991  0F16  00BF               	movwf	___flmul@b+2
  2992  0F17  3F43               	moviw [3]fsr1
  2993  0F18  00C0               	movwf	___flmul@b+3
  2994  0F19  0008               	return
  2995  0F1A                     __end_ofPL36:	
  2996  0F1A                     PL44:	
  2997  0F1A  085C               	movf	(pow@x+3)^(0+128),w
  2998  0F1B  00F3               	movwf	___flneg@f1+3
  2999  0F1C  085B               	movf	(pow@x+2)^(0+128),w
  3000  0F1D  00F2               	movwf	___flneg@f1+2
  3001  0F1E  085A               	movf	(pow@x+1)^(0+128),w
  3002  0F1F  00F1               	movwf	___flneg@f1+1
  3003  0F20  0859               	movf	pow@x^(0+128),w
  3004  0F21  00F0               	movwf	___flneg@f1
  3005  0F22  0008               	return
  3006  0F23                     __end_ofPL44:	
  3007  0F23                     PL46:	
  3008  0F23  0851               	movf	(exp@x+3)^(0+128),w
  3009  0F24  00F3               	movwf	___flge@ff1+3
  3010  0F25  0850               	movf	(exp@x+2)^(0+128),w
  3011  0F26  00F2               	movwf	___flge@ff1+2
  3012  0F27  084F               	movf	(exp@x+1)^(0+128),w
  3013  0F28  00F1               	movwf	___flge@ff1+1
  3014  0F29  084E               	movf	exp@x^(0+128),w
  3015  0F2A  0008               	return
  3016  0F2B                     __end_ofPL46:	
  3017  0F2B                     PL48:	
  3018  0F2B  0840               	movf	?___flmul+3,w
  3019  0F2C  00DD               	movwf	___fldiv@b+3
  3020  0F2D  083F               	movf	?___flmul+2,w
  3021  0F2E  00DC               	movwf	___fldiv@b+2
  3022  0F2F  083E               	movf	?___flmul+1,w
  3023  0F30  00DB               	movwf	___fldiv@b+1
  3024  0F31  083D               	movf	?___flmul,w
  3025  0F32  00DA               	movwf	___fldiv@b
  3026  0F33  0008               	return
  3027  0F34                     __end_ofPL48:	
  3028  0F34                     PL54:	
  3029  0F34  01AE               	clrf	___fleq@ff2
  3030  0F35  01AF               	clrf	___fleq@ff2+1
  3031  0F36  01B0               	clrf	___fleq@ff2+2
  3032  0F37  01B1               	clrf	___fleq@ff2+3
  3033  0F38  0008               	return
  3034  0F39                     __end_ofPL54:	
  3035  0F39                     PL60:	
  3036  0F39  01D9               	clrf	?_pow^(0+128)
  3037  0F3A  01DA               	clrf	(?_pow+1)^(0+128)
  3038  0F3B  01DB               	clrf	(?_pow+2)^(0+128)
  3039  0F3C  01DC               	clrf	(?_pow+3)^(0+128)
  3040  0F3D  0008               	return
  3041  0F3E                     __end_ofPL60:	
  3042  0F3E                     PL64:	
  3043  0F3E  3080               	movlw	128
  3044  0F3F  01F8               	clrf	??___flge
  3045  0F40  01F9               	clrf	??___flge+1
  3046  0F41  01FA               	clrf	??___flge+2
  3047  0F42  00FB               	movwf	??___flge+3
  3048  0F43  0008               	return
  3049  0F44                     __end_ofPL64:	
  3050  0F44                     PL66:	
  3051  0F44  01CE               	clrf	?_exp^(0+128)
  3052  0F45  01CF               	clrf	(?_exp+1)^(0+128)
  3053  0F46  01D0               	clrf	(?_exp+2)^(0+128)
  3054  0F47  01D1               	clrf	(?_exp+3)^(0+128)
  3055  0F48  0008               	return
  3056  0F49                     __end_ofPL66:	
  3057  0F49                     PL86:	
  3058  0F49  36A9               	lsrf	___xxtofl@arg+3,f
  3059  0F4A  0CA8               	rrf	___xxtofl@arg+2,f
  3060  0F4B  0CA7               	rrf	___xxtofl@arg+1,f
  3061  0F4C  0CA6               	rrf	___xxtofl@arg,f
  3062  0F4D  0008               	return
  3063  0F4E                     __end_ofPL86:	
  3064  0F4E                     __ptext19:	
  3065 ;; *************** function _init_I2C_buffer *****************
  3066 ;; Defined at:
  3067 ;;		line 87 in file "main.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, pclath, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : B1F/1
  3078 ;;		On exit  : 1F/2
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3081 ;;      Params:         0       0       0       0
  3082 ;;      Locals:         0       0       0       0
  3083 ;;      Temps:          0       0       0       0
  3084 ;;      Totals:         0       0       0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    2
  3088 ;; This function calls:
  3089 ;;		_eeprom_read
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _init_I2C_buffer
  3097  0F4E                     _init_I2C_buffer:	
  3098                           
  3099                           ;main.c: 89: I2C_buffer.data.ID = 0x02;
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _init_I2C_buffer: [wreg+status,2+status,0+pclath+cstack]
  3103  0F4E  3002               	movlw	2
  3104  0F4F  0022               	movlb	2	; select bank2
  3105  0F50  00A0               	movwf	_I2C_buffer^(0+256)	;volatile
  3106                           
  3107                           ;main.c: 90: I2C_buffer.data.RESET = 0;
  3108  0F51  01A1               	clrf	(_I2C_buffer^(0+256)+1)	;volatile
  3109                           
  3110                           ;main.c: 91: I2C_buffer.data.SAVE = 0;
  3111  0F52  01A2               	clrf	(_I2C_buffer^(0+256)+2)	;volatile
  3112                           
  3113                           ;main.c: 92: I2C_buffer.byte[0x03] = eeprom_read(0);
  3114  0F53  3000               	movlw	0
  3115  0F54  2785  3188         	fcall	_eeprom_read
  3116  0F56  0022               	movlb	2	; select bank2
  3117  0F57  00A3               	movwf	(_I2C_buffer^(0+256)+3)	;volatile
  3118                           
  3119                           ;main.c: 93: I2C_buffer.byte[0x04] = eeprom_read(1);
  3120  0F58  3001               	movlw	1
  3121  0F59  2785  3188         	fcall	_eeprom_read
  3122  0F5B  0022               	movlb	2	; select bank2
  3123  0F5C  00A4               	movwf	(_I2C_buffer^(0+256)+4)	;volatile
  3124                           
  3125                           ;main.c: 94: I2C_buffer.byte[0x05] = eeprom_read(2);
  3126  0F5D  3002               	movlw	2
  3127  0F5E  2785  3188         	fcall	_eeprom_read
  3128  0F60  0022               	movlb	2	; select bank2
  3129  0F61  00A5               	movwf	(_I2C_buffer^(0+256)+5)	;volatile
  3130                           
  3131                           ;main.c: 95: I2C_buffer.byte[0x06] = eeprom_read(3);
  3132  0F62  3003               	movlw	3
  3133  0F63  2785  3188         	fcall	_eeprom_read
  3134  0F65  0022               	movlb	2	; select bank2
  3135  0F66  00A6               	movwf	(_I2C_buffer^(0+256)+6)	;volatile
  3136                           
  3137                           ;main.c: 96: I2C_buffer.byte[0x07] = eeprom_read(4);
  3138  0F67  3004               	movlw	4
  3139  0F68  2785  3188         	fcall	_eeprom_read
  3140  0F6A  0022               	movlb	2	; select bank2
  3141  0F6B  00A7               	movwf	(_I2C_buffer^(0+256)+7)	;volatile
  3142                           
  3143                           ;main.c: 97: I2C_buffer.byte[0x08] = eeprom_read(5);
  3144  0F6C  3005               	movlw	5
  3145  0F6D  2785  3188         	fcall	_eeprom_read
  3146  0F6F  0022               	movlb	2	; select bank2
  3147  0F70  00A8               	movwf	(_I2C_buffer^(0+256)+8)	;volatile
  3148                           
  3149                           ;main.c: 98: I2C_buffer.byte[0x09] = eeprom_read(6);
  3150  0F71  3006               	movlw	6
  3151  0F72  2785  3188         	fcall	_eeprom_read
  3152  0F74  0022               	movlb	2	; select bank2
  3153  0F75  00A9               	movwf	(_I2C_buffer^(0+256)+9)	;volatile
  3154                           
  3155                           ;main.c: 99: I2C_buffer.byte[0x0A] = eeprom_read(7);
  3156  0F76  3007               	movlw	7
  3157  0F77  2785  3188         	fcall	_eeprom_read
  3158  0F79  0022               	movlb	2	; select bank2
  3159  0F7A  00AA               	movwf	(_I2C_buffer^(0+256)+10)	;volatile
  3160                           
  3161                           ;main.c: 100: I2C_buffer.byte[0x0B] = eeprom_read(8);
  3162  0F7B  3008               	movlw	8
  3163  0F7C  2785  3188         	fcall	_eeprom_read
  3164  0F7E  0022               	movlb	2	; select bank2
  3165  0F7F  00AB               	movwf	(_I2C_buffer^(0+256)+11)	;volatile
  3166                           
  3167                           ;main.c: 101: I2C_buffer.byte[0x0C] = eeprom_read(9);
  3168  0F80  3009               	movlw	9
  3169  0F81  2785               	fcall	_eeprom_read
  3170  0F82  0022               	movlb	2	; select bank2
  3171  0F83  00AC               	movwf	(_I2C_buffer^(0+256)+12)	;volatile
  3172  0F84  0008               	return
  3173  0F85                     __end_of_init_I2C_buffer:	
  3174  0F85                     __ptext20:	
  3175 ;; *************** function _eeprom_read *****************
  3176 ;; Defined at:
  3177 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  addr            1    wreg     unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  addr            1    0[COMMON] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      unsigned char 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 1F/2
  3188 ;;		On exit  : 1F/3
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3191 ;;      Params:         0       0       0       0
  3192 ;;      Locals:         1       0       0       0
  3193 ;;      Temps:          0       0       0       0
  3194 ;;      Totals:         1       0       0       0
  3195 ;;Total ram usage:        1 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_init_I2C_buffer
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _eeprom_read
  3207  0F85                     _eeprom_read:	
  3208                           
  3209                           ;incstack = 0
  3210                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3211                           ;eeprom_read@addr stored from wreg
  3212  0F85  00F0               	movwf	eeprom_read@addr
  3213  0F86  2F88               	goto	l273
  3214  0F87                     u2861:	
  3215  0F87  0022               	movlb	2	; select bank2
  3216  0F88                     l273:	
  3217                           ;__eeread.c: 8: do
  3218                           
  3219  0F88  0064               	clrwdt	;# 
  3220                           
  3221                           ;__eeread.c: 12: while(EECON1bits.WR);
  3222  0F89  0023               	movlb	3	; select bank3
  3223  0F8A  1895               	btfsc	21,1	;volsfr
  3224  0F8B  2F87               	goto	u2861
  3225                           
  3226                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  3227  0F8C  0870               	movf	eeprom_read@addr,w
  3228  0F8D  0091               	movwf	17	;volatile
  3229  0F8E  0192               	clrf	18	;volatile
  3230  0F8F  303F               	movlw	63
  3231  0F90  0595               	andwf	21,f	;volsfr
  3232  0F91  1415               	bsf	21,0	;volsfr
  3233  0F92  0813               	movf	19,w	;volatile
  3234  0F93  0008               	return
  3235  0F94                     __end_of_eeprom_read:	
  3236  0F94                     __ptext5:	
  3237 ;; *************** function _ldexp *****************
  3238 ;; Defined at:
  3239 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  value           4   38[BANK1 ] unsigned char 
  3242 ;;  newexp          2   42[BANK1 ] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  4   38[BANK1 ] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 1F/1
  3251 ;;		On exit  : 1F/1
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3254 ;;      Params:         0       0       6       0
  3255 ;;      Locals:         0       0       0       0
  3256 ;;      Temps:          0       0       2       0
  3257 ;;      Totals:         0       0       8       0
  3258 ;;Total ram usage:        8 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		___fleq
  3263 ;;		___flge
  3264 ;; This function is called by:
  3265 ;;		_exp
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _ldexp
  3271  0F94                     _ldexp:	
  3272                           
  3273                           ;incstack = 0
  3274                           ; Regs used in _ldexp: [wreg+status,2+status,0+pclath+cstack]
  3275  0F94  0849               	movf	(ldexp@value+3)^(0+128),w
  3276  0F95  0020               	movlb	0	; select bank0
  3277  0F96  00AD               	movwf	___fleq@ff1+3
  3278  0F97  0021               	movlb	1	; select bank1
  3279  0F98  0848               	movf	(ldexp@value+2)^(0+128),w
  3280  0F99  0020               	movlb	0	; select bank0
  3281  0F9A  00AC               	movwf	___fleq@ff1+2
  3282  0F9B  0021               	movlb	1	; select bank1
  3283  0F9C  0847               	movf	(ldexp@value+1)^(0+128),w
  3284  0F9D  0020               	movlb	0	; select bank0
  3285  0F9E  00AB               	movwf	___fleq@ff1+1
  3286  0F9F  0021               	movlb	1	; select bank1
  3287  0FA0  0846               	movf	ldexp@value^(0+128),w
  3288  0FA1  2706  3188         	fcall	PL34	;call to abstracted procedure
  3289  0FA3  239B  3188         	fcall	___fleq
  3290  0FA5  1C03               	btfss	3,0
  3291  0FA6  2FA9               	goto	l2668
  3292  0FA7  0021               	movlb	1	; select bank1
  3293  0FA8  2FFB               	ljmp	PL74	;call to abstracted procedure
  3294  0FA9                     l2668:	
  3295  0FA9  0021               	movlb	1	; select bank1
  3296  0FAA  0849               	movf	(ldexp@value^(0+128)+3),w
  3297  0FAB  397F               	andlw	127
  3298  0FAC  00CC               	movwf	??_ldexp^(0+128)
  3299  0FAD  01CD               	clrf	(??_ldexp^(0+128)+1)
  3300  0FAE  35CC               	lslf	??_ldexp^(0+128),f
  3301  0FAF  0DCD               	rlf	(??_ldexp^(0+128)+1),f
  3302  0FB0  084C               	movf	??_ldexp^(0+128),w
  3303  0FB1  07CA               	addwf	ldexp@newexp^(0+128),f
  3304  0FB2  084D               	movf	(??_ldexp+1)^(0+128),w
  3305  0FB3  3DCB               	addwfc	(ldexp@newexp+1)^(0+128),f
  3306  0FB4  0D48               	rlf	(ldexp@value^(0+128)+2),w
  3307  0FB5  0D48               	rlf	(ldexp@value^(0+128)+2),w
  3308  0FB6  3901               	andlw	1
  3309  0FB7  07CA               	addwf	ldexp@newexp^(0+128),f
  3310  0FB8  1803               	skipnc
  3311  0FB9  0ACB               	incf	(ldexp@newexp+1)^(0+128),f
  3312  0FBA  1FCB               	btfss	(ldexp@newexp+1)^(0+128),7
  3313  0FBB  2FBD               	goto	l2676
  3314  0FBC  2FFB               	ljmp	PL74	;call to abstracted procedure
  3315  0FBD                     l2676:	
  3316  0FBD  084B               	movf	(ldexp@newexp+1)^(0+128),w
  3317  0FBE  3A80               	xorlw	128
  3318  0FBF  00CC               	movwf	??_ldexp^(0+128)
  3319  0FC0  3081               	movlw	129
  3320  0FC1  024C               	subwf	??_ldexp^(0+128),w
  3321  0FC2  1D03               	skipz
  3322  0FC3  2FC6               	goto	u2845
  3323  0FC4  3000               	movlw	0
  3324  0FC5  024A               	subwf	ldexp@newexp^(0+128),w
  3325  0FC6                     u2845:	
  3326  0FC6  1C03               	skipc
  3327  0FC7  2FDE               	goto	l2690
  3328  0FC8  0021               	movlb	1	; select bank1
  3329  0FC9  0849               	movf	(ldexp@value+3)^(0+128),w
  3330  0FCA  00F3               	movwf	___flge@ff1+3
  3331  0FCB  0848               	movf	(ldexp@value+2)^(0+128),w
  3332  0FCC  00F2               	movwf	___flge@ff1+2
  3333  0FCD  0847               	movf	(ldexp@value+1)^(0+128),w
  3334  0FCE  00F1               	movwf	___flge@ff1+1
  3335  0FCF  0846               	movf	ldexp@value^(0+128),w
  3336  0FD0  3183  2387  3188   	fcall	PL40	;call to abstracted procedure
  3337  0FD3  24F9  3188         	fcall	___flge
  3338  0FD5  1803               	btfsc	3,0
  3339  0FD6  2FDB               	goto	l2686
  3340  0FD7  30FF               	movlw	255
  3341  0FD8  00C9               	movwf	(?_ldexp+3)^(0+128)
  3342  0FD9  307F               	movlw	127
  3343  0FDA  2FF6               	ljmp	PL72	;call to abstracted procedure
  3344  0FDB                     l2686:	
  3345  0FDB  307F               	movlw	127
  3346  0FDC  00C9               	movwf	(?_ldexp+3)^(0+128)
  3347  0FDD  2FF6               	ljmp	PL72	;call to abstracted procedure
  3348  0FDE                     l2690:	
  3349  0FDE  0021               	movlb	1	; select bank1
  3350  0FDF  084B               	movf	(ldexp@newexp+1)^(0+128),w
  3351  0FE0  00CD               	movwf	(??_ldexp^(0+128)+1)
  3352  0FE1  084A               	movf	ldexp@newexp^(0+128),w
  3353  0FE2  00CC               	movwf	??_ldexp^(0+128)
  3354  0FE3  0D4D               	rlf	(??_ldexp^(0+128)+1),w
  3355  0FE4  0CCD               	rrf	(??_ldexp^(0+128)+1),f
  3356  0FE5  0CCC               	rrf	??_ldexp^(0+128),f
  3357  0FE6  0849               	movf	(ldexp@value^(0+128)+3),w
  3358  0FE7  064C               	xorwf	??_ldexp^(0+128),w
  3359  0FE8  3980               	andlw	-128
  3360  0FE9  064C               	xorwf	??_ldexp^(0+128),w
  3361  0FEA  00C9               	movwf	(ldexp@value^(0+128)+3)
  3362  0FEB  084A               	movf	ldexp@newexp^(0+128),w
  3363  0FEC  3901               	andlw	1
  3364  0FED  00CC               	movwf	??_ldexp^(0+128)
  3365  0FEE  0CCC               	rrf	??_ldexp^(0+128),f
  3366  0FEF  0CCC               	rrf	??_ldexp^(0+128),f
  3367  0FF0  0848               	movf	(ldexp@value^(0+128)+2),w
  3368  0FF1  064C               	xorwf	??_ldexp^(0+128),w
  3369  0FF2  397F               	andlw	-129
  3370  0FF3  064C               	xorwf	??_ldexp^(0+128),w
  3371  0FF4  00C8               	movwf	(ldexp@value^(0+128)+2)
  3372  0FF5  0008               	return
  3373  0FF6                     __end_of_ldexp:	
  3374  0FF6                     PL72:	
  3375  0FF6  00C8               	movwf	(?_ldexp+2)^(0+128)
  3376  0FF7  30FF               	movlw	255
  3377  0FF8  00C7               	movwf	(?_ldexp+1)^(0+128)
  3378  0FF9  00C6               	movwf	?_ldexp^(0+128)
  3379  0FFA  0008               	return
  3380  0FFB                     __end_ofPL72:	
  3381  0FFB                     PL74:	
  3382  0FFB  01C6               	clrf	?_ldexp^(0+128)
  3383  0FFC  01C7               	clrf	(?_ldexp+1)^(0+128)
  3384  0FFD  01C8               	clrf	(?_ldexp+2)^(0+128)
  3385  0FFE  01C9               	clrf	(?_ldexp+3)^(0+128)
  3386  0FFF  0008               	return
  3387  1000                     __end_ofPL74:	
  3388                           
  3389                           	psect	bssBANK0
  3390  006F                     __pbssBANK0:	
  3391  006F                     _index_i2c:	
  3392  006F                     	ds	1
  3393                           
  3394                           	psect	dataBANK1
  3395  00EE                     __pdataBANK1:	
  3396  00EE                     _first_i2c:	
  3397  00EE                     	ds	1
  3398                           
  3399                           	psect	bssBANK2
  3400  0120                     __pbssBANK2:	
  3401  0120                     _I2C_buffer:	
  3402  0120                     	ds	29
  3403  013D                     _vacc:	
  3404  013D                     	ds	4
  3405  0141                     _iacc:	
  3406  0141                     	ds	4
  3407  0145                     _adc:	
  3408  0145                     	ds	4
  3409                           
  3410                           	psect	clrtext
  3411  0775                     clear_ram0:	
  3412                           ;	Called with FSR0 containing the base address, and
  3413                           ;	WREG with the size to clear
  3414                           
  3415  0775  0064               	clrwdt	;clear the watchdog before getting into this loop
  3416  0776                     clrloop0:	
  3417  0776  0180               	clrf	0	;clear RAM location pointed to by FSR
  3418  0777  3101               	addfsr 0,1
  3419  0778  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3420  0779  2F76               	goto	clrloop0	;have we reached the end yet?
  3421  077A  3400               	retlw	0	;all done for this memory range, return
  3422                           
  3423                           	psect	cstackBANK2
  3424  0149                     __pcstackBANK2:	
  3425  0149                     ?_main:	
  3426  0149                     main@argc:	
  3427                           ; 2 bytes @ 0x0
  3428                           
  3429                           
  3430                           ; 2 bytes @ 0x0
  3431  0149                     	ds	2
  3432  014B                     main@argv:	
  3433                           
  3434                           ; 2 bytes @ 0x2
  3435  014B                     	ds	2
  3436  014D                     ??_main:	
  3437                           
  3438                           ; 1 bytes @ 0x4
  3439  014D                     	ds	4
  3440  0151                     main@i:	
  3441                           
  3442                           ; 2 bytes @ 0x8
  3443  0151                     	ds	2
  3444  0153                     _main$1332:	
  3445                           
  3446                           ; 4 bytes @ 0xA
  3447  0153                     	ds	4
  3448                           
  3449                           	psect	cstackBANK1
  3450  00A0                     __pcstackBANK1:	
  3451  00A0                     ?_sqrt:	
  3452  00A0                     ?___fladd:	
  3453                           ; 4 bytes @ 0x0
  3454                           
  3455  00A0                     ___fladd@b:	
  3456                           ; 4 bytes @ 0x0
  3457                           
  3458  00A0                     sqrt@a:	
  3459                           ; 4 bytes @ 0x0
  3460                           
  3461                           
  3462                           ; 4 bytes @ 0x0
  3463  00A0                     	ds	4
  3464  00A4                     ??_sqrt:	
  3465  00A4                     ___fladd@a:	
  3466                           ; 1 bytes @ 0x4
  3467                           
  3468                           
  3469                           ; 4 bytes @ 0x4
  3470  00A4                     	ds	4
  3471  00A8                     ??___fladd:	
  3472  00A8                     sqrt@sign:	
  3473                           ; 1 bytes @ 0x8
  3474                           
  3475                           
  3476                           ; 1 bytes @ 0x8
  3477  00A8                     	ds	1
  3478  00A9                     sqrt@i:	
  3479                           
  3480                           ; 1 bytes @ 0x9
  3481  00A9                     	ds	1
  3482  00AA                     sqrt@tfrac:	
  3483                           
  3484                           ; 4 bytes @ 0xA
  3485  00AA                     	ds	4
  3486  00AE                     sqrt@grs:	
  3487                           
  3488                           ; 4 bytes @ 0xE
  3489  00AE                     	ds	2
  3490  00B0                     ___fladd@signs:	
  3491                           
  3492                           ; 1 bytes @ 0x10
  3493  00B0                     	ds	1
  3494  00B1                     ___fladd@aexp:	
  3495                           
  3496                           ; 1 bytes @ 0x11
  3497  00B1                     	ds	1
  3498  00B2                     ___fladd@bexp:	
  3499  00B2                     sqrt@p:	
  3500                           ; 1 bytes @ 0x12
  3501                           
  3502                           
  3503                           ; 1 bytes @ 0x12
  3504  00B2                     	ds	1
  3505  00B3                     ___fladd@grs:	
  3506  00B3                     sqrt@exp:	
  3507                           ; 1 bytes @ 0x13
  3508                           
  3509                           
  3510                           ; 2 bytes @ 0x13
  3511  00B3                     	ds	1
  3512  00B4                     ?_floor:	
  3513  00B4                     ?_eval_poly:	
  3514                           ; 4 bytes @ 0x14
  3515                           
  3516  00B4                     ?___flsub:	
  3517                           ; 4 bytes @ 0x14
  3518                           
  3519  00B4                     ___flsub@a:	
  3520                           ; 4 bytes @ 0x14
  3521                           
  3522  00B4                     floor@x:	
  3523                           ; 4 bytes @ 0x14
  3524                           
  3525  00B4                     eval_poly@x:	
  3526                           ; 4 bytes @ 0x14
  3527                           
  3528                           
  3529                           ; 4 bytes @ 0x14
  3530  00B4                     	ds	1
  3531  00B5                     sqrt@frac:	
  3532                           
  3533                           ; 4 bytes @ 0x15
  3534  00B5                     	ds	3
  3535  00B8                     eval_poly@d:	
  3536  00B8                     ___flsub@b:	
  3537                           ; 2 bytes @ 0x18
  3538                           
  3539  00B8                     floor@i:	
  3540                           ; 4 bytes @ 0x18
  3541                           
  3542                           
  3543                           ; 4 bytes @ 0x18
  3544  00B8                     	ds	1
  3545  00B9                     sqrt@root:	
  3546                           
  3547                           ; 4 bytes @ 0x19
  3548  00B9                     	ds	1
  3549  00BA                     eval_poly@n:	
  3550                           
  3551                           ; 2 bytes @ 0x1A
  3552  00BA                     	ds	2
  3553  00BC                     ??_eval_poly:	
  3554  00BC                     floor@expon:	
  3555                           ; 1 bytes @ 0x1C
  3556                           
  3557                           
  3558                           ; 2 bytes @ 0x1C
  3559  00BC                     	ds	6
  3560  00C2                     eval_poly@res:	
  3561                           
  3562                           ; 4 bytes @ 0x22
  3563  00C2                     	ds	4
  3564  00C6                     ?_log:	
  3565  00C6                     ?_ldexp:	
  3566                           ; 4 bytes @ 0x26
  3567                           
  3568  00C6                     ldexp@value:	
  3569                           ; 4 bytes @ 0x26
  3570                           
  3571  00C6                     log@x:	
  3572                           ; 4 bytes @ 0x26
  3573                           
  3574                           
  3575                           ; 4 bytes @ 0x26
  3576  00C6                     	ds	4
  3577  00CA                     ldexp@newexp:	
  3578  00CA                     log@exponent:	
  3579                           ; 2 bytes @ 0x2A
  3580                           
  3581                           
  3582                           ; 2 bytes @ 0x2A
  3583  00CA                     	ds	2
  3584  00CC                     ??_ldexp:	
  3585                           
  3586                           ; 1 bytes @ 0x2C
  3587  00CC                     	ds	2
  3588  00CE                     ?_exp:	
  3589  00CE                     exp@x:	
  3590                           ; 4 bytes @ 0x2E
  3591                           
  3592                           
  3593                           ; 4 bytes @ 0x2E
  3594  00CE                     	ds	4
  3595  00D2                     _exp$1335:	
  3596                           
  3597                           ; 4 bytes @ 0x32
  3598  00D2                     	ds	4
  3599  00D6                     exp@exponent:	
  3600                           
  3601                           ; 2 bytes @ 0x36
  3602  00D6                     	ds	2
  3603  00D8                     exp@sign:	
  3604                           
  3605                           ; 1 bytes @ 0x38
  3606  00D8                     	ds	1
  3607  00D9                     ?_pow:	
  3608  00D9                     pow@x:	
  3609                           ; 4 bytes @ 0x39
  3610                           
  3611                           
  3612                           ; 4 bytes @ 0x39
  3613  00D9                     	ds	4
  3614  00DD                     pow@y:	
  3615                           
  3616                           ; 4 bytes @ 0x3D
  3617  00DD                     	ds	4
  3618  00E1                     _pow$1333:	
  3619                           
  3620                           ; 4 bytes @ 0x41
  3621  00E1                     	ds	4
  3622  00E5                     _pow$1334:	
  3623                           
  3624                           ; 4 bytes @ 0x45
  3625  00E5                     	ds	4
  3626  00E9                     pow@sign:	
  3627                           
  3628                           ; 1 bytes @ 0x49
  3629  00E9                     	ds	1
  3630  00EA                     pow@yi:	
  3631                           
  3632                           ; 4 bytes @ 0x4A
  3633  00EA                     	ds	4
  3634                           
  3635                           	psect	cstackCOMMON
  3636  0070                     __pcstackCOMMON:	
  3637  0070                     ?___flge:	
  3638  0070                     ?_eeprom_read:	
  3639                           ; 1 bit 
  3640                           
  3641  0070                     ??_eeprom_read:	
  3642                           ; 1 bytes @ 0x0
  3643                           
  3644  0070                     ?_eeprom_write:	
  3645                           ; 1 bytes @ 0x0
  3646                           
  3647  0070                     ?_init_I2C_buffer:	
  3648                           ; 1 bytes @ 0x0
  3649                           
  3650  0070                     ?_isr:	
  3651                           ; 1 bytes @ 0x0
  3652                           
  3653  0070                     ??_isr:	
  3654                           ; 1 bytes @ 0x0
  3655                           
  3656  0070                     ?__Umul8_16:	
  3657                           ; 1 bytes @ 0x0
  3658                           
  3659  0070                     ?_ADC_read:	
  3660                           ; 2 bytes @ 0x0
  3661                           
  3662  0070                     ?___flneg:	
  3663                           ; 2 bytes @ 0x0
  3664                           
  3665  0070                     ?___fltol:	
  3666                           ; 4 bytes @ 0x0
  3667                           
  3668  0070                     eeprom_read@addr:	
  3669                           ; 4 bytes @ 0x0
  3670                           
  3671  0070                     eeprom_write@value:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     __Umul8_16@multiplicand:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ___flge@ff1:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ___flneg@f1:	
  3681                           ; 4 bytes @ 0x0
  3682                           
  3683  0070                     ___fltol@f1:	
  3684                           ; 4 bytes @ 0x0
  3685                           
  3686                           
  3687                           ; 4 bytes @ 0x0
  3688  0070                     	ds	1
  3689  0071                     ??_eeprom_write:	
  3690  0071                     ??_init_I2C_buffer:	
  3691                           ; 1 bytes @ 0x1
  3692                           
  3693  0071                     eeprom_write@addr:	
  3694                           ; 1 bytes @ 0x1
  3695                           
  3696                           
  3697                           ; 1 bytes @ 0x1
  3698  0071                     	ds	1
  3699  0072                     ??_ADC_read:	
  3700                           
  3701                           ; 1 bytes @ 0x2
  3702  0072                     	ds	1
  3703  0073                     ??__Umul8_16:	
  3704  0073                     ADC_read@channel:	
  3705                           ; 1 bytes @ 0x3
  3706                           
  3707  0073                     __Umul8_16@product:	
  3708                           ; 1 bytes @ 0x3
  3709                           
  3710                           
  3711                           ; 2 bytes @ 0x3
  3712  0073                     	ds	1
  3713  0074                     ??___flneg:	
  3714  0074                     ??___fltol:	
  3715                           ; 1 bytes @ 0x4
  3716                           
  3717  0074                     ___flge@ff2:	
  3718                           ; 1 bytes @ 0x4
  3719                           
  3720                           
  3721                           ; 4 bytes @ 0x4
  3722  0074                     	ds	1
  3723  0075                     __Umul8_16@word_mpld:	
  3724                           
  3725                           ; 2 bytes @ 0x5
  3726  0075                     	ds	2
  3727  0077                     __Umul8_16@multiplier:	
  3728                           
  3729                           ; 1 bytes @ 0x7
  3730  0077                     	ds	1
  3731  0078                     ??___flge:	
  3732  0078                     ___fltol@sign1:	
  3733                           ; 1 bytes @ 0x8
  3734                           
  3735                           
  3736                           ; 1 bytes @ 0x8
  3737  0078                     	ds	1
  3738  0079                     ___fltol@exp1:	
  3739                           
  3740                           ; 1 bytes @ 0x9
  3741  0079                     	ds	1
  3742  007A                     ?___xxtofl:	
  3743  007A                     ___xxtofl@val:	
  3744                           ; 4 bytes @ 0xA
  3745                           
  3746                           
  3747                           ; 4 bytes @ 0xA
  3748  007A                     	ds	4
  3749  007E                     ??_pow:	
  3750  007E                     ??_exp:	
  3751                           ; 1 bytes @ 0xE
  3752                           
  3753  007E                     ??_log:	
  3754                           ; 1 bytes @ 0xE
  3755                           
  3756  007E                     ??_floor:	
  3757                           ; 1 bytes @ 0xE
  3758                           
  3759  007E                     ??___flsub:	
  3760                           ; 1 bytes @ 0xE
  3761                           
  3762                           
  3763                           	psect	cstackBANK0
  3764  0020                     __pcstackBANK0:	
  3765                           ; 1 bytes @ 0xE
  3766                           
  3767  0020                     ??___xxtofl:	
  3768                           
  3769                           ; 1 bytes @ 0x0
  3770  0020                     	ds	4
  3771  0024                     ___xxtofl@sign:	
  3772                           
  3773                           ; 1 bytes @ 0x4
  3774  0024                     	ds	1
  3775  0025                     ___xxtofl@exp:	
  3776                           
  3777                           ; 1 bytes @ 0x5
  3778  0025                     	ds	1
  3779  0026                     ___xxtofl@arg:	
  3780                           
  3781                           ; 4 bytes @ 0x6
  3782  0026                     	ds	4
  3783  002A                     ?___fleq:	
  3784  002A                     ___fleq@ff1:	
  3785                           ; 1 bit 
  3786                           
  3787                           
  3788                           ; 4 bytes @ 0xA
  3789  002A                     	ds	4
  3790  002E                     ___fleq@ff2:	
  3791                           
  3792                           ; 4 bytes @ 0xE
  3793  002E                     	ds	4
  3794  0032                     ??___fleq:	
  3795                           
  3796                           ; 1 bytes @ 0x12
  3797  0032                     	ds	4
  3798  0036                     ?_frexp:	
  3799  0036                     frexp@value:	
  3800                           ; 4 bytes @ 0x16
  3801                           
  3802                           
  3803                           ; 4 bytes @ 0x16
  3804  0036                     	ds	4
  3805  003A                     frexp@eptr:	
  3806                           
  3807                           ; 1 bytes @ 0x1A
  3808  003A                     	ds	1
  3809  003B                     ??_frexp:	
  3810                           
  3811                           ; 1 bytes @ 0x1B
  3812  003B                     	ds	2
  3813  003D                     ?___flmul:	
  3814  003D                     ___flmul@b:	
  3815                           ; 4 bytes @ 0x1D
  3816                           
  3817                           
  3818                           ; 4 bytes @ 0x1D
  3819  003D                     	ds	4
  3820  0041                     ___flmul@a:	
  3821                           
  3822                           ; 4 bytes @ 0x21
  3823  0041                     	ds	4
  3824  0045                     ??___flmul:	
  3825                           
  3826                           ; 1 bytes @ 0x25
  3827  0045                     	ds	4
  3828  0049                     ___flmul@sign:	
  3829                           
  3830                           ; 1 bytes @ 0x29
  3831  0049                     	ds	1
  3832  004A                     ___flmul@aexp:	
  3833                           
  3834                           ; 1 bytes @ 0x2A
  3835  004A                     	ds	1
  3836  004B                     ___flmul@grs:	
  3837                           
  3838                           ; 4 bytes @ 0x2B
  3839  004B                     	ds	4
  3840  004F                     ___flmul@bexp:	
  3841                           
  3842                           ; 1 bytes @ 0x2F
  3843  004F                     	ds	1
  3844  0050                     ___flmul@prod:	
  3845                           
  3846                           ; 4 bytes @ 0x30
  3847  0050                     	ds	4
  3848  0054                     ___flmul@temp:	
  3849                           
  3850                           ; 2 bytes @ 0x34
  3851  0054                     	ds	2
  3852  0056                     ?___fldiv:	
  3853  0056                     ___fldiv@a:	
  3854                           ; 4 bytes @ 0x36
  3855                           
  3856                           
  3857                           ; 4 bytes @ 0x36
  3858  0056                     	ds	4
  3859  005A                     ___fldiv@b:	
  3860                           
  3861                           ; 4 bytes @ 0x3A
  3862  005A                     	ds	4
  3863  005E                     ??___fldiv:	
  3864                           
  3865                           ; 1 bytes @ 0x3E
  3866  005E                     	ds	4
  3867  0062                     ___fldiv@rem:	
  3868                           
  3869                           ; 4 bytes @ 0x42
  3870  0062                     	ds	4
  3871  0066                     ___fldiv@sign:	
  3872                           
  3873                           ; 1 bytes @ 0x46
  3874  0066                     	ds	1
  3875  0067                     ___fldiv@new_exp:	
  3876                           
  3877                           ; 2 bytes @ 0x47
  3878  0067                     	ds	2
  3879  0069                     ___fldiv@grs:	
  3880                           
  3881                           ; 4 bytes @ 0x49
  3882  0069                     	ds	4
  3883  006D                     ___fldiv@bexp:	
  3884                           
  3885                           ; 1 bytes @ 0x4D
  3886  006D                     	ds	1
  3887  006E                     ___fldiv@aexp:	
  3888                           
  3889                           ; 1 bytes @ 0x4E
  3890  006E                     	ds	1
  3891                           
  3892                           	psect	text1
  3893  0638                     __ptext1:	
  3894 ;; *************** function _sqrt *****************
  3895 ;; Defined at:
  3896 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcsqrt.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  a               4    0[BANK1 ] int 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  root            4   25[BANK1 ] struct .
  3901 ;;  frac            4   21[BANK1 ] unsigned long 
  3902 ;;  grs             4   14[BANK1 ] unsigned long 
  3903 ;;  tfrac           4   10[BANK1 ] unsigned long 
  3904 ;;  exp             2   19[BANK1 ] int 
  3905 ;;  p               1   18[BANK1 ] unsigned char 
  3906 ;;  i               1    9[BANK1 ] unsigned char 
  3907 ;;  sign            1    8[BANK1 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  4    0[BANK1 ] unsigned char 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 1F/1
  3914 ;;		On exit  : 1F/1
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3917 ;;      Params:         0       0       4       0
  3918 ;;      Locals:         0       0      21       0
  3919 ;;      Temps:          0       0       4       0
  3920 ;;      Totals:         0       0      29       0
  3921 ;;Total ram usage:       29 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _sqrt
  3933  0638                     _sqrt:	
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _sqrt: [wreg+status,2+status,0]
  3937  0638  0823               	movf	(sqrt@a^(0+128)+3),w
  3938  0639  00A8               	movwf	sqrt@sign^(0+128)
  3939  063A  3080               	movlw	128
  3940  063B  05A8               	andwf	sqrt@sign^(0+128),f
  3941  063C  3523               	lslf	(sqrt@a^(0+128)+3),w
  3942  063D  00B2               	movwf	sqrt@p^(0+128)
  3943  063E  1BA2               	btfsc	(sqrt@a^(0+128)+2),7
  3944  063F  1432               	bsf	sqrt@p^(0+128),0
  3945  0640  0832               	movf	sqrt@p^(0+128),w
  3946  0641  00B3               	movwf	sqrt@exp^(0+128)
  3947  0642  01B4               	clrf	(sqrt@exp+1)^(0+128)
  3948  0643  0823               	movf	(sqrt@a+3)^(0+128),w
  3949  0644  00B8               	movwf	(sqrt@frac+3)^(0+128)
  3950  0645  0822               	movf	(sqrt@a+2)^(0+128),w
  3951  0646  00B7               	movwf	(sqrt@frac+2)^(0+128)
  3952  0647  0821               	movf	(sqrt@a+1)^(0+128),w
  3953  0648  00B6               	movwf	(sqrt@frac+1)^(0+128)
  3954  0649  0820               	movf	sqrt@a^(0+128),w
  3955  064A  00B5               	movwf	sqrt@frac^(0+128)
  3956  064B  30FF               	movlw	255
  3957  064C  05B5               	andwf	sqrt@frac^(0+128),f
  3958  064D  05B6               	andwf	(sqrt@frac+1)^(0+128),f
  3959  064E  307F               	movlw	127
  3960  064F  05B7               	andwf	(sqrt@frac+2)^(0+128),f
  3961  0650  01B8               	clrf	(sqrt@frac+3)^(0+128)
  3962  0651  0833               	movf	sqrt@exp^(0+128),w
  3963  0652  0434               	iorwf	(sqrt@exp+1)^(0+128),w
  3964  0653  1903               	btfsc	3,2
  3965  0654  2E5A               	goto	l2870
  3966  0655  17B7               	bsf	(sqrt@frac^(0+128)+2),7
  3967  0656  0A33               	incf	sqrt@exp^(0+128),w
  3968  0657  0434               	iorwf	(sqrt@exp+1)^(0+128),w
  3969  0658  1D03               	btfss	3,2
  3970  0659  2E5E               	goto	l2872
  3971  065A                     l2870:	
  3972  065A  01B5               	clrf	sqrt@frac^(0+128)
  3973  065B  01B6               	clrf	(sqrt@frac+1)^(0+128)
  3974  065C  01B7               	clrf	(sqrt@frac+2)^(0+128)
  3975  065D  01B8               	clrf	(sqrt@frac+3)^(0+128)
  3976  065E                     l2872:	
  3977  065E  0833               	movf	sqrt@exp^(0+128),w
  3978  065F  0434               	iorwf	(sqrt@exp+1)^(0+128),w
  3979  0660  1D03               	btfss	3,2
  3980  0661  2E67               	goto	l2876
  3981  0662  01A0               	clrf	?_sqrt^(0+128)
  3982  0663  01A1               	clrf	(?_sqrt+1)^(0+128)
  3983  0664  01A2               	clrf	(?_sqrt+2)^(0+128)
  3984  0665  01A3               	clrf	(?_sqrt+3)^(0+128)
  3985  0666  0008               	return
  3986  0667                     l2876:	
  3987  0667  0828               	movf	sqrt@sign^(0+128),w
  3988  0668  1903               	btfsc	3,2
  3989  0669  2E74               	goto	l2882
  3990  066A  3040               	movlw	64
  3991  066B  01BC               	clrf	(sqrt@root+3)^(0+128)
  3992  066C  00BB               	movwf	(sqrt@root+2)^(0+128)
  3993  066D  3080               	movlw	128
  3994  066E  01BA               	clrf	(sqrt@root+1)^(0+128)
  3995  066F  01B9               	clrf	sqrt@root^(0+128)
  3996  0670  04BB               	iorwf	(sqrt@root^(0+128)+2),f
  3997  0671  30FF               	movlw	255
  3998  0672  04BC               	iorwf	((sqrt@root+1)^(0+128)+2),f
  3999  0673  2F17               	ljmp	PL30	;call to abstracted procedure
  4000  0674                     l2882:	
  4001  0674  0A33               	incf	sqrt@exp^(0+128),w
  4002  0675  0434               	iorwf	(sqrt@exp+1)^(0+128),w
  4003  0676  1D03               	btfss	3,2
  4004  0677  2E7F               	goto	l2888
  4005  0678  307F               	movlw	127
  4006  0679  00BC               	movwf	(sqrt@root+3)^(0+128)
  4007  067A  3080               	movlw	128
  4008  067B  00BB               	movwf	(sqrt@root+2)^(0+128)
  4009  067C  01BA               	clrf	(sqrt@root+1)^(0+128)
  4010  067D  01B9               	clrf	sqrt@root^(0+128)
  4011  067E  2F17               	ljmp	PL30	;call to abstracted procedure
  4012  067F                     l2888:	
  4013  067F  3081               	movlw	-127
  4014  0680  07B3               	addwf	sqrt@exp^(0+128),f
  4015  0681  1C03               	skipc
  4016  0682  03B4               	decf	(sqrt@exp+1)^(0+128),f
  4017  0683  0833               	movf	sqrt@exp^(0+128),w
  4018  0684  00B2               	movwf	sqrt@p^(0+128)
  4019  0685  3001               	movlw	1
  4020  0686  05B2               	andwf	sqrt@p^(0+128),f
  4021  0687  307F               	movlw	127
  4022  0688  37B4               	asrf	(sqrt@exp+1)^(0+128),f
  4023  0689  0CB3               	rrf	sqrt@exp^(0+128),f
  4024  068A  07B3               	addwf	sqrt@exp^(0+128),f
  4025  068B  1803               	skipnc
  4026  068C  0AB4               	incf	(sqrt@exp+1)^(0+128),f
  4027  068D  3535               	lslf	sqrt@frac^(0+128),w
  4028  068E  00AA               	movwf	sqrt@tfrac^(0+128)
  4029  068F  0D36               	rlf	(sqrt@frac+1)^(0+128),w
  4030  0690  00AB               	movwf	(sqrt@tfrac+1)^(0+128)
  4031  0691  0D37               	rlf	(sqrt@frac+2)^(0+128),w
  4032  0692  00AC               	movwf	(sqrt@tfrac+2)^(0+128)
  4033  0693  0D38               	rlf	(sqrt@frac+3)^(0+128),w
  4034  0694  00AD               	movwf	(sqrt@tfrac+3)^(0+128)
  4035  0695  3001               	movlw	1
  4036  0696  01B5               	clrf	sqrt@frac^(0+128)
  4037  0697  01B6               	clrf	(sqrt@frac+1)^(0+128)
  4038  0698  01B7               	clrf	(sqrt@frac+2)^(0+128)
  4039  0699  01B8               	clrf	(sqrt@frac+3)^(0+128)
  4040  069A  00B1               	movwf	(sqrt@grs+3)^(0+128)
  4041  069B  01B0               	clrf	(sqrt@grs+2)^(0+128)
  4042  069C  01AF               	clrf	(sqrt@grs+1)^(0+128)
  4043  069D  01AE               	clrf	sqrt@grs^(0+128)
  4044  069E  0832               	movf	sqrt@p^(0+128),w
  4045  069F  1903               	btfsc	3,2
  4046  06A0  2EA5               	goto	l2908
  4047  06A1  35AA               	lslf	sqrt@tfrac^(0+128),f
  4048  06A2  0DAB               	rlf	(sqrt@tfrac+1)^(0+128),f
  4049  06A3  0DAC               	rlf	(sqrt@tfrac+2)^(0+128),f
  4050  06A4  0DAD               	rlf	(sqrt@tfrac+3)^(0+128),f
  4051  06A5                     l2908:	
  4052  06A5  01A9               	clrf	sqrt@i^(0+128)
  4053  06A6                     l721:	
  4054  06A6  3019               	movlw	25
  4055  06A7  0229               	subwf	sqrt@i^(0+128),w
  4056  06A8  1803               	btfsc	3,0
  4057  06A9  2EE7               	goto	l2922
  4058  06AA  082E               	movf	sqrt@grs^(0+128),w
  4059  06AB  04B5               	iorwf	sqrt@frac^(0+128),f
  4060  06AC  082F               	movf	(sqrt@grs+1)^(0+128),w
  4061  06AD  04B6               	iorwf	(sqrt@frac+1)^(0+128),f
  4062  06AE  0830               	movf	(sqrt@grs+2)^(0+128),w
  4063  06AF  04B7               	iorwf	(sqrt@frac+2)^(0+128),f
  4064  06B0  0831               	movf	(sqrt@grs+3)^(0+128),w
  4065  06B1  04B8               	iorwf	(sqrt@frac+3)^(0+128),f
  4066  06B2  0838               	movf	(sqrt@frac+3)^(0+128),w
  4067  06B3  022D               	subwf	(sqrt@tfrac+3)^(0+128),w
  4068  06B4  1D03               	skipz
  4069  06B5  2EC0               	goto	u3135
  4070  06B6  0837               	movf	(sqrt@frac+2)^(0+128),w
  4071  06B7  022C               	subwf	(sqrt@tfrac+2)^(0+128),w
  4072  06B8  1D03               	skipz
  4073  06B9  2EC0               	goto	u3135
  4074  06BA  0836               	movf	(sqrt@frac+1)^(0+128),w
  4075  06BB  022B               	subwf	(sqrt@tfrac+1)^(0+128),w
  4076  06BC  1D03               	skipz
  4077  06BD  2EC0               	goto	u3135
  4078  06BE  0835               	movf	sqrt@frac^(0+128),w
  4079  06BF  022A               	subwf	sqrt@tfrac^(0+128),w
  4080  06C0                     u3135:	
  4081  06C0  1C03               	skipc
  4082  06C1  2ECD               	goto	l2914
  4083  06C2  0835               	movf	sqrt@frac^(0+128),w
  4084  06C3  02AA               	subwf	sqrt@tfrac^(0+128),f
  4085  06C4  0836               	movf	(sqrt@frac+1)^(0+128),w
  4086  06C5  3BAB               	subwfb	(sqrt@tfrac+1)^(0+128),f
  4087  06C6  0837               	movf	(sqrt@frac+2)^(0+128),w
  4088  06C7  3BAC               	subwfb	(sqrt@tfrac+2)^(0+128),f
  4089  06C8  0838               	movf	(sqrt@frac+3)^(0+128),w
  4090  06C9  3BAD               	subwfb	(sqrt@tfrac+3)^(0+128),f
  4091  06CA  2720  3186         	fcall	PL50	;call to abstracted procedure
  4092  06CC  2EDD               	goto	l2916
  4093  06CD                     l2914:	
  4094  06CD  092E               	comf	sqrt@grs^(0+128),w
  4095  06CE  00A4               	movwf	??_sqrt^(0+128)
  4096  06CF  092F               	comf	(sqrt@grs+1)^(0+128),w
  4097  06D0  00A5               	movwf	(??_sqrt^(0+128)+1)
  4098  06D1  0930               	comf	(sqrt@grs+2)^(0+128),w
  4099  06D2  00A6               	movwf	(??_sqrt^(0+128)+2)
  4100  06D3  0931               	comf	(sqrt@grs+3)^(0+128),w
  4101  06D4  00A7               	movwf	(??_sqrt^(0+128)+3)
  4102  06D5  0824               	movf	??_sqrt^(0+128),w
  4103  06D6  05B5               	andwf	sqrt@frac^(0+128),f
  4104  06D7  0825               	movf	(??_sqrt+1)^(0+128),w
  4105  06D8  05B6               	andwf	(sqrt@frac+1)^(0+128),f
  4106  06D9  0826               	movf	(??_sqrt+2)^(0+128),w
  4107  06DA  05B7               	andwf	(sqrt@frac+2)^(0+128),f
  4108  06DB  0827               	movf	(??_sqrt+3)^(0+128),w
  4109  06DC  05B8               	andwf	(sqrt@frac+3)^(0+128),f
  4110  06DD                     l2916:	
  4111  06DD  36B1               	lsrf	(sqrt@grs+3)^(0+128),f
  4112  06DE  0CB0               	rrf	(sqrt@grs+2)^(0+128),f
  4113  06DF  0CAF               	rrf	(sqrt@grs+1)^(0+128),f
  4114  06E0  0CAE               	rrf	sqrt@grs^(0+128),f
  4115  06E1  35AA               	lslf	sqrt@tfrac^(0+128),f
  4116  06E2  0DAB               	rlf	(sqrt@tfrac+1)^(0+128),f
  4117  06E3  0DAC               	rlf	(sqrt@tfrac+2)^(0+128),f
  4118  06E4  0DAD               	rlf	(sqrt@tfrac+3)^(0+128),f
  4119  06E5  0AA9               	incf	sqrt@i^(0+128),f
  4120  06E6  2EA6               	goto	l721
  4121  06E7                     l2922:	
  4122  06E7  36B8               	lsrf	(sqrt@frac+3)^(0+128),f
  4123  06E8  0CB7               	rrf	(sqrt@frac+2)^(0+128),f
  4124  06E9  0CB6               	rrf	(sqrt@frac+1)^(0+128),f
  4125  06EA  0CB5               	rrf	sqrt@frac^(0+128),f
  4126  06EB  0838               	movf	(sqrt@frac+3)^(0+128),w
  4127  06EC  00B1               	movwf	(sqrt@grs+3)^(0+128)
  4128  06ED  0837               	movf	(sqrt@frac+2)^(0+128),w
  4129  06EE  00B0               	movwf	(sqrt@grs+2)^(0+128)
  4130  06EF  0836               	movf	(sqrt@frac+1)^(0+128),w
  4131  06F0  00AF               	movwf	(sqrt@grs+1)^(0+128)
  4132  06F1  0835               	movf	sqrt@frac^(0+128),w
  4133  06F2  00AE               	movwf	sqrt@grs^(0+128)
  4134  06F3  3001               	movlw	1
  4135  06F4  05AE               	andwf	sqrt@grs^(0+128),f
  4136  06F5  01AF               	clrf	(sqrt@grs+1)^(0+128)
  4137  06F6  01B0               	clrf	(sqrt@grs+2)^(0+128)
  4138  06F7  01B1               	clrf	(sqrt@grs+3)^(0+128)
  4139  06F8  36B8               	lsrf	(sqrt@frac+3)^(0+128),f
  4140  06F9  0CB7               	rrf	(sqrt@frac+2)^(0+128),f
  4141  06FA  0CB6               	rrf	(sqrt@frac+1)^(0+128),f
  4142  06FB  0CB5               	rrf	sqrt@frac^(0+128),f
  4143  06FC  2720  3186         	fcall	PL50	;call to abstracted procedure
  4144  06FE  1C38               	btfss	(sqrt@frac+3)^(0+128),0
  4145  06FF  2F07               	goto	l2934
  4146  0700  36B8               	lsrf	(sqrt@frac+3)^(0+128),f
  4147  0701  0CB7               	rrf	(sqrt@frac+2)^(0+128),f
  4148  0702  0CB6               	rrf	(sqrt@frac+1)^(0+128),f
  4149  0703  0CB5               	rrf	sqrt@frac^(0+128),f
  4150  0704  0AB3               	incf	sqrt@exp^(0+128),f
  4151  0705  1903               	skipnz
  4152  0706  0AB4               	incf	(sqrt@exp+1)^(0+128),f
  4153  0707                     l2934:	
  4154  0707  0835               	movf	sqrt@frac^(0+128),w
  4155  0708  00B9               	movwf	sqrt@root^(0+128)
  4156  0709  0836               	movf	(sqrt@frac+1)^(0+128),w
  4157  070A  00BA               	movwf	(sqrt@root+1)^(0+128)
  4158  070B  307F               	movlw	127
  4159  070C  0537               	andwf	(sqrt@frac+2)^(0+128),w
  4160  070D  00BB               	movwf	(sqrt@root+2)^(0+128)
  4161  070E  01BC               	clrf	(sqrt@root+3)^(0+128)
  4162  070F  0833               	movf	sqrt@exp^(0+128),w
  4163  0710  00B2               	movwf	sqrt@p^(0+128)
  4164  0711  1832               	btfsc	sqrt@p^(0+128),0
  4165  0712  17BB               	bsf	(sqrt@root^(0+128)+2),7
  4166  0713  3632               	lsrf	sqrt@p^(0+128),w
  4167  0714  00BC               	movwf	(sqrt@root^(0+128)+3)
  4168  0715  13BC               	bcf	(sqrt@root^(0+128)+3),7
  4169  0716  2F17               	ljmp	PL30	;call to abstracted procedure
  4170  0717                     __end_of_sqrt:	
  4171  0717                     PL30:	
  4172  0717  083C               	movf	(sqrt@root+3)^(0+128),w
  4173  0718  00A3               	movwf	(?_sqrt+3)^(0+128)
  4174  0719  083B               	movf	(sqrt@root+2)^(0+128),w
  4175  071A  00A2               	movwf	(?_sqrt+2)^(0+128)
  4176  071B  083A               	movf	(sqrt@root+1)^(0+128),w
  4177  071C  00A1               	movwf	(?_sqrt+1)^(0+128)
  4178  071D  0839               	movf	sqrt@root^(0+128),w
  4179  071E  00A0               	movwf	?_sqrt^(0+128)
  4180  071F  0008               	return
  4181  0720                     __end_ofPL30:	
  4182  0720                     PL50:	
  4183  0720  082E               	movf	sqrt@grs^(0+128),w
  4184  0721  07B5               	addwf	sqrt@frac^(0+128),f
  4185  0722  082F               	movf	(sqrt@grs+1)^(0+128),w
  4186  0723  3DB6               	addwfc	(sqrt@frac+1)^(0+128),f
  4187  0724  0830               	movf	(sqrt@grs+2)^(0+128),w
  4188  0725  3DB7               	addwfc	(sqrt@frac+2)^(0+128),f
  4189  0726  0831               	movf	(sqrt@grs+3)^(0+128),w
  4190  0727  3DB8               	addwfc	(sqrt@frac+3)^(0+128),f
  4191  0728  0008               	return
  4192  0729                     __end_ofPL50:	
  4193                           
  4194                           	psect	text3
  4195  0070                     __ptext3:	
  4196 ;; *************** function _log *****************
  4197 ;; Defined at:
  4198 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\log.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  x               4   38[BANK1 ] unsigned char 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  exponent        2   42[BANK1 ] int 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  4   38[BANK1 ] int 
  4205 ;; Registers used:
  4206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 1F/1
  4209 ;;		On exit  : 1F/1
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4212 ;;      Params:         0       0       4       0
  4213 ;;      Locals:         0       0       2       0
  4214 ;;      Temps:          0       0       0       0
  4215 ;;      Totals:         0       0       6       0
  4216 ;;Total ram usage:        6 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    4
  4219 ;; This function calls:
  4220 ;;		___fladd
  4221 ;;		___fleq
  4222 ;;		___flge
  4223 ;;		___flmul
  4224 ;;		___xxtofl
  4225 ;;		_eval_poly
  4226 ;;		_frexp
  4227 ;; This function is called by:
  4228 ;;		_pow
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _log
  4234  0070                     _log:	
  4235                           
  4236                           ;incstack = 0
  4237                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4238  0070  0849               	movf	(log@x+3)^(0+128),w
  4239  0071  00F3               	movwf	___flge@ff1+3
  4240  0072  0848               	movf	(log@x+2)^(0+128),w
  4241  0073  00F2               	movwf	___flge@ff1+2
  4242  0074  0847               	movf	(log@x+1)^(0+128),w
  4243  0075  00F1               	movwf	___flge@ff1+1
  4244  0076  0846               	movf	log@x^(0+128),w
  4245  0077  2387               	fcall	PL40	;call to abstracted procedure
  4246  0078  318C  24F9  3180   	fcall	___flge
  4247  007B  1803               	btfsc	3,0
  4248  007C  287E               	goto	l2704
  4249  007D  2BA4               	ljmp	PL62	;call to abstracted procedure
  4250  007E                     l2704:	
  4251  007E  0849               	movf	(log@x+3)^(0+128),w
  4252  007F  0020               	movlb	0	; select bank0
  4253  0080  00AD               	movwf	___fleq@ff1+3
  4254  0081  0021               	movlb	1	; select bank1
  4255  0082  0848               	movf	(log@x+2)^(0+128),w
  4256  0083  0020               	movlb	0	; select bank0
  4257  0084  00AC               	movwf	___fleq@ff1+2
  4258  0085  0021               	movlb	1	; select bank1
  4259  0086  0847               	movf	(log@x+1)^(0+128),w
  4260  0087  0020               	movlb	0	; select bank0
  4261  0088  00AB               	movwf	___fleq@ff1+1
  4262  0089  0021               	movlb	1	; select bank1
  4263  008A  0846               	movf	log@x^(0+128),w
  4264  008B  318F  2706  3180   	fcall	PL34	;call to abstracted procedure
  4265  008E  318B  239B  3180   	fcall	___fleq
  4266  0091  1C03               	btfss	3,0
  4267  0092  2895               	goto	l2708
  4268  0093  0021               	movlb	1	; select bank1
  4269  0094  2BA4               	ljmp	PL62	;call to abstracted procedure
  4270  0095                     l2708:	
  4271  0095  30BF               	movlw	191
  4272  0096  0021               	movlb	1	; select bank1
  4273  0097  00A3               	movwf	(___fladd@b+3)^(0+128)
  4274  0098  3080               	movlw	128
  4275  0099  00A2               	movwf	(___fladd@b+2)^(0+128)
  4276  009A  3040               	movlw	64
  4277  009B  01A1               	clrf	(___fladd@b+1)^(0+128)
  4278  009C  01A0               	clrf	___fladd@b^(0+128)
  4279  009D  0020               	movlb	0	; select bank0
  4280  009E  00C0               	movwf	___flmul@b+3
  4281  009F  30CA               	movlw	(low (log@exponent| 0))& (0+255)
  4282  00A0  01BF               	clrf	___flmul@b+2
  4283  00A1  01BE               	clrf	___flmul@b+1
  4284  00A2  01BD               	clrf	___flmul@b
  4285  00A3  00BA               	movwf	frexp@eptr
  4286  00A4  0021               	movlb	1	; select bank1
  4287  00A5  0849               	movf	(log@x+3)^(0+128),w
  4288  00A6  0020               	movlb	0	; select bank0
  4289  00A7  00B9               	movwf	frexp@value+3
  4290  00A8  0021               	movlb	1	; select bank1
  4291  00A9  0848               	movf	(log@x+2)^(0+128),w
  4292  00AA  0020               	movlb	0	; select bank0
  4293  00AB  00B8               	movwf	frexp@value+2
  4294  00AC  0021               	movlb	1	; select bank1
  4295  00AD  0847               	movf	(log@x+1)^(0+128),w
  4296  00AE  0020               	movlb	0	; select bank0
  4297  00AF  00B7               	movwf	frexp@value+1
  4298  00B0  0021               	movlb	1	; select bank1
  4299  00B1  0846               	movf	log@x^(0+128),w
  4300  00B2  0020               	movlb	0	; select bank0
  4301  00B3  00B6               	movwf	frexp@value
  4302  00B4  219C               	fcall	_frexp
  4303  00B5  0839               	movf	?_frexp+3,w
  4304  00B6  00C4               	movwf	___flmul@a+3
  4305  00B7  0838               	movf	?_frexp+2,w
  4306  00B8  00C3               	movwf	___flmul@a+2
  4307  00B9  0837               	movf	?_frexp+1,w
  4308  00BA  00C2               	movwf	___flmul@a+1
  4309  00BB  0836               	movf	?_frexp,w
  4310  00BC  00C1               	movwf	___flmul@a
  4311  00BD  3183  23B8  3180   	fcall	___flmul
  4312  00C0  235F  3180         	fcall	PL8	;call to abstracted procedure
  4313  00C2  21DF  3180         	fcall	___fladd
  4314  00C4  0823               	movf	(?___fladd+3)^(0+128),w
  4315  00C5  00C9               	movwf	(log@x+3)^(0+128)
  4316  00C6  0822               	movf	(?___fladd+2)^(0+128),w
  4317  00C7  00C8               	movwf	(log@x+2)^(0+128)
  4318  00C8  0821               	movf	(?___fladd+1)^(0+128),w
  4319  00C9  00C7               	movwf	(log@x+1)^(0+128)
  4320  00CA  0820               	movf	?___fladd^(0+128),w
  4321  00CB  00C6               	movwf	log@x^(0+128)
  4322  00CC  30FF               	movlw	-1
  4323  00CD  07CA               	addwf	log@exponent^(0+128),f
  4324  00CE  1C03               	skipc
  4325  00CF  03CB               	decf	(log@exponent+1)^(0+128),f
  4326  00D0  0849               	movf	(log@x+3)^(0+128),w
  4327  00D1  00B7               	movwf	(eval_poly@x+3)^(0+128)
  4328  00D2  0848               	movf	(log@x+2)^(0+128),w
  4329  00D3  00B6               	movwf	(eval_poly@x+2)^(0+128)
  4330  00D4  0847               	movf	(log@x+1)^(0+128),w
  4331  00D5  00B5               	movwf	(eval_poly@x+1)^(0+128)
  4332  00D6  0846               	movf	log@x^(0+128),w
  4333  00D7  00B4               	movwf	eval_poly@x^(0+128)
  4334  00D8  3051               	movlw	low (log@coeff| (0+32768))
  4335  00D9  00B8               	movwf	eval_poly@d^(0+128)
  4336  00DA  3087               	movlw	high (log@coeff| (0+32768))
  4337  00DB  00B9               	movwf	(eval_poly@d^(0+128)+1)
  4338  00DC  3008               	movlw	8
  4339  00DD  00BA               	movwf	eval_poly@n^(0+128)
  4340  00DE  01BB               	clrf	(eval_poly@n+1)^(0+128)
  4341  00DF  230F               	fcall	_eval_poly
  4342  00E0  0837               	movf	(?_eval_poly+3)^(0+128),w
  4343  00E1  00C9               	movwf	(log@x+3)^(0+128)
  4344  00E2  0836               	movf	(?_eval_poly+2)^(0+128),w
  4345  00E3  00C8               	movwf	(log@x+2)^(0+128)
  4346  00E4  0835               	movf	(?_eval_poly+1)^(0+128),w
  4347  00E5  00C7               	movwf	(log@x+1)^(0+128)
  4348  00E6  0834               	movf	?_eval_poly^(0+128),w
  4349  00E7  00C6               	movwf	log@x^(0+128)
  4350  00E8  0849               	movf	(log@x+3)^(0+128),w
  4351  00E9  00A3               	movwf	(___fladd@b+3)^(0+128)
  4352  00EA  0848               	movf	(log@x+2)^(0+128),w
  4353  00EB  00A2               	movwf	(___fladd@b+2)^(0+128)
  4354  00EC  0847               	movf	(log@x+1)^(0+128),w
  4355  00ED  00A1               	movwf	(___fladd@b+1)^(0+128)
  4356  00EE  0846               	movf	log@x^(0+128),w
  4357  00EF  00A0               	movwf	___fladd@b^(0+128)
  4358  00F0  303F               	movlw	63
  4359  00F1  0020               	movlb	0	; select bank0
  4360  00F2  00C0               	movwf	___flmul@b+3
  4361  00F3  3031               	movlw	49
  4362  00F4  00BF               	movwf	___flmul@b+2
  4363  00F5  3072               	movlw	114
  4364  00F6  00BE               	movwf	___flmul@b+1
  4365  00F7  3018               	movlw	24
  4366  00F8  00BD               	movwf	___flmul@b
  4367  00F9  0021               	movlb	1	; select bank1
  4368  00FA  084A               	movf	log@exponent^(0+128),w
  4369  00FB  00FA               	movwf	___xxtofl@val
  4370  00FC  084B               	movf	(log@exponent+1)^(0+128),w
  4371  00FD  318E  26A5  3180   	fcall	PL12	;call to abstracted procedure
  4372  0100  318D  2555  3180   	fcall	___xxtofl
  4373  0103  087D               	movf	?___xxtofl+3,w
  4374  0104  00C4               	movwf	___flmul@a+3
  4375  0105  087C               	movf	?___xxtofl+2,w
  4376  0106  00C3               	movwf	___flmul@a+2
  4377  0107  087B               	movf	?___xxtofl+1,w
  4378  0108  00C2               	movwf	___flmul@a+1
  4379  0109  087A               	movf	?___xxtofl,w
  4380  010A  00C1               	movwf	___flmul@a
  4381  010B  3183  23B8  3180   	fcall	___flmul
  4382  010E  235F  3180         	fcall	PL8	;call to abstracted procedure
  4383  0110  21DF               	fcall	___fladd
  4384  0111  0823               	movf	(?___fladd+3)^(0+128),w
  4385  0112  00C9               	movwf	(?_log+3)^(0+128)
  4386  0113  0822               	movf	(?___fladd+2)^(0+128),w
  4387  0114  00C8               	movwf	(?_log+2)^(0+128)
  4388  0115  0821               	movf	(?___fladd+1)^(0+128),w
  4389  0116  00C7               	movwf	(?_log+1)^(0+128)
  4390  0117  0820               	movf	?___fladd^(0+128),w
  4391  0118  00C6               	movwf	?_log^(0+128)
  4392  0119  0008               	return
  4393  011A                     __end_of_log:	
  4394  011A                     __ptext6:	
  4395 ;; *************** function _floor *****************
  4396 ;; Defined at:
  4397 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\floor.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  x               4   20[BANK1 ] int 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  i               4   24[BANK1 ] int 
  4402 ;;  expon           2   28[BANK1 ] int 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  4   20[BANK1 ] int 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 1F/1
  4409 ;;		On exit  : 1F/1
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4412 ;;      Params:         0       0       4       0
  4413 ;;      Locals:         0       0       6       0
  4414 ;;      Temps:          0       0       0       0
  4415 ;;      Totals:         0       0      10       0
  4416 ;;Total ram usage:       10 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    3
  4419 ;; This function calls:
  4420 ;;		___fladd
  4421 ;;		___flge
  4422 ;;		___fltol
  4423 ;;		___xxtofl
  4424 ;;		_frexp
  4425 ;; This function is called by:
  4426 ;;		_exp
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _floor
  4432  011A                     _floor:	
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4436  011A  0837               	movf	(floor@x+3)^(0+128),w
  4437  011B  0020               	movlb	0	; select bank0
  4438  011C  00B9               	movwf	frexp@value+3
  4439  011D  0021               	movlb	1	; select bank1
  4440  011E  0836               	movf	(floor@x+2)^(0+128),w
  4441  011F  0020               	movlb	0	; select bank0
  4442  0120  00B8               	movwf	frexp@value+2
  4443  0121  0021               	movlb	1	; select bank1
  4444  0122  0835               	movf	(floor@x+1)^(0+128),w
  4445  0123  0020               	movlb	0	; select bank0
  4446  0124  00B7               	movwf	frexp@value+1
  4447  0125  0021               	movlb	1	; select bank1
  4448  0126  0834               	movf	floor@x^(0+128),w
  4449  0127  0020               	movlb	0	; select bank0
  4450  0128  00B6               	movwf	frexp@value
  4451  0129  30BC               	movlw	(low (floor@expon| 0))& (0+255)
  4452  012A  00BA               	movwf	frexp@eptr
  4453  012B  219C  3180         	fcall	_frexp
  4454  012D  0021               	movlb	1	; select bank1
  4455  012E  1FBD               	btfss	(floor@expon+1)^(0+128),7
  4456  012F  2945               	goto	l2640
  4457  0130  238D  3180         	fcall	PL42	;call to abstracted procedure
  4458  0132  2387               	fcall	PL40	;call to abstracted procedure
  4459  0133  318C  24F9  3180   	fcall	___flge
  4460  0136  1803               	btfsc	3,0
  4461  0137  2940               	goto	l813
  4462  0138  30BF               	movlw	191
  4463  0139  00B7               	movwf	(?_floor+3)^(0+128)
  4464  013A  3080               	movlw	128
  4465  013B  00B6               	movwf	(?_floor+2)^(0+128)
  4466  013C  3000               	movlw	0
  4467  013D  01B5               	clrf	(?_floor+1)^(0+128)
  4468  013E  01B4               	clrf	?_floor^(0+128)
  4469  013F  0008               	return
  4470  0140                     l813:	
  4471  0140  01B4               	clrf	?_floor^(0+128)
  4472  0141  01B5               	clrf	(?_floor+1)^(0+128)
  4473  0142  01B6               	clrf	(?_floor+2)^(0+128)
  4474  0143  01B7               	clrf	(?_floor+3)^(0+128)
  4475  0144  0008               	return
  4476  0145                     l2640:	
  4477  0145  3000               	movlw	0
  4478  0146  023D               	subwf	(floor@expon+1)^(0+128),w
  4479  0147  301D               	movlw	29
  4480  0148  1903               	skipnz
  4481  0149  023C               	subwf	floor@expon^(0+128),w
  4482  014A  1803               	btfsc	3,0
  4483  014B  0008               	return
  4484  014C  0837               	movf	(floor@x+3)^(0+128),w
  4485  014D  00F3               	movwf	___fltol@f1+3
  4486  014E  0836               	movf	(floor@x+2)^(0+128),w
  4487  014F  00F2               	movwf	___fltol@f1+2
  4488  0150  0835               	movf	(floor@x+1)^(0+128),w
  4489  0151  00F1               	movwf	___fltol@f1+1
  4490  0152  0834               	movf	floor@x^(0+128),w
  4491  0153  00F0               	movwf	___fltol@f1
  4492  0154  318D  25C8  3180   	fcall	___fltol
  4493  0157  0873               	movf	?___fltol+3,w
  4494  0158  00FD               	movwf	___xxtofl@val+3
  4495  0159  0872               	movf	?___fltol+2,w
  4496  015A  00FC               	movwf	___xxtofl@val+2
  4497  015B  0871               	movf	?___fltol+1,w
  4498  015C  00FB               	movwf	___xxtofl@val+1
  4499  015D  0870               	movf	?___fltol,w
  4500  015E  00FA               	movwf	___xxtofl@val
  4501  015F  3001               	movlw	1
  4502  0160  318D  2555  3180   	fcall	___xxtofl
  4503  0163  087D               	movf	?___xxtofl+3,w
  4504  0164  0021               	movlb	1	; select bank1
  4505  0165  00BB               	movwf	(floor@i+3)^(0+128)
  4506  0166  087C               	movf	?___xxtofl+2,w
  4507  0167  00BA               	movwf	(floor@i+2)^(0+128)
  4508  0168  087B               	movf	?___xxtofl+1,w
  4509  0169  00B9               	movwf	(floor@i+1)^(0+128)
  4510  016A  087A               	movf	?___xxtofl,w
  4511  016B  00B8               	movwf	floor@i^(0+128)
  4512  016C  238D               	fcall	PL42	;call to abstracted procedure
  4513  016D  00F0               	movwf	___flge@ff1
  4514  016E  083B               	movf	(floor@i+3)^(0+128),w
  4515  016F  00F7               	movwf	___flge@ff2+3
  4516  0170  083A               	movf	(floor@i+2)^(0+128),w
  4517  0171  00F6               	movwf	___flge@ff2+2
  4518  0172  0839               	movf	(floor@i+1)^(0+128),w
  4519  0173  00F5               	movwf	___flge@ff2+1
  4520  0174  0838               	movf	floor@i^(0+128),w
  4521  0175  00F4               	movwf	___flge@ff2
  4522  0176  318C  24F9  3180   	fcall	___flge
  4523  0179  1803               	btfsc	3,0
  4524  017A  2993               	goto	l2650
  4525  017B  30BF               	movlw	191
  4526  017C  00A3               	movwf	(___fladd@b+3)^(0+128)
  4527  017D  3080               	movlw	128
  4528  017E  00A2               	movwf	(___fladd@b+2)^(0+128)
  4529  017F  01A1               	clrf	(___fladd@b+1)^(0+128)
  4530  0180  01A0               	clrf	___fladd@b^(0+128)
  4531  0181  083B               	movf	(floor@i+3)^(0+128),w
  4532  0182  00A7               	movwf	(___fladd@a+3)^(0+128)
  4533  0183  083A               	movf	(floor@i+2)^(0+128),w
  4534  0184  00A6               	movwf	(___fladd@a+2)^(0+128)
  4535  0185  0839               	movf	(floor@i+1)^(0+128),w
  4536  0186  00A5               	movwf	(___fladd@a+1)^(0+128)
  4537  0187  0838               	movf	floor@i^(0+128),w
  4538  0188  00A4               	movwf	___fladd@a^(0+128)
  4539  0189  21DF               	fcall	___fladd
  4540  018A  0823               	movf	(?___fladd+3)^(0+128),w
  4541  018B  00B7               	movwf	(?_floor+3)^(0+128)
  4542  018C  0822               	movf	(?___fladd+2)^(0+128),w
  4543  018D  00B6               	movwf	(?_floor+2)^(0+128)
  4544  018E  0821               	movf	(?___fladd+1)^(0+128),w
  4545  018F  00B5               	movwf	(?_floor+1)^(0+128)
  4546  0190  0820               	movf	?___fladd^(0+128),w
  4547  0191  00B4               	movwf	?_floor^(0+128)
  4548  0192  0008               	return
  4549  0193                     l2650:	
  4550  0193  083B               	movf	(floor@i+3)^(0+128),w
  4551  0194  00B7               	movwf	(?_floor+3)^(0+128)
  4552  0195  083A               	movf	(floor@i+2)^(0+128),w
  4553  0196  00B6               	movwf	(?_floor+2)^(0+128)
  4554  0197  0839               	movf	(floor@i+1)^(0+128),w
  4555  0198  00B5               	movwf	(?_floor+1)^(0+128)
  4556  0199  0838               	movf	floor@i^(0+128),w
  4557  019A  00B4               	movwf	?_floor^(0+128)
  4558  019B  0008               	return
  4559  019C                     __end_of_floor:	
  4560  019C                     __ptext7:	
  4561 ;; *************** function _frexp *****************
  4562 ;; Defined at:
  4563 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  value           4   22[BANK0 ] int 
  4566 ;;  eptr            1   26[BANK0 ] PTR int 
  4567 ;;		 -> log@exponent(2), floor@expon(2), 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  4   22[BANK0 ] PTR int 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 1F/0
  4576 ;;		On exit  : 1F/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4579 ;;      Params:         0       5       0       0
  4580 ;;      Locals:         0       0       0       0
  4581 ;;      Temps:          0       2       0       0
  4582 ;;      Totals:         0       7       0       0
  4583 ;;Total ram usage:        7 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    2
  4586 ;; This function calls:
  4587 ;;		___fleq
  4588 ;; This function is called by:
  4589 ;;		_floor
  4590 ;;		_log
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           
  4595                           ;psect for function _frexp
  4596  019C                     _frexp:	
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4600  019C  0839               	movf	frexp@value+3,w
  4601  019D  00AD               	movwf	___fleq@ff1+3
  4602  019E  0838               	movf	frexp@value+2,w
  4603  019F  00AC               	movwf	___fleq@ff1+2
  4604  01A0  0837               	movf	frexp@value+1,w
  4605  01A1  00AB               	movwf	___fleq@ff1+1
  4606  01A2  0836               	movf	frexp@value,w
  4607  01A3  00AA               	movwf	___fleq@ff1
  4608  01A4  318F  2734  3180   	fcall	PL54	;call to abstracted procedure
  4609  01A7  318B  239B  3180   	fcall	___fleq
  4610  01AA  1C03               	btfss	3,0
  4611  01AB  29B7               	goto	l2466
  4612  01AC  083A               	movf	frexp@eptr,w
  4613  01AD  0086               	movwf	6
  4614  01AE  3000               	movlw	0
  4615  01AF  0187               	clrf	7
  4616  01B0  3FC0               	movwi [0]fsr1
  4617  01B1  3FC1               	movwi [1]fsr1
  4618  01B2  01B6               	clrf	?_frexp
  4619  01B3  01B7               	clrf	?_frexp+1
  4620  01B4  01B8               	clrf	?_frexp+2
  4621  01B5  01B9               	clrf	?_frexp+3
  4622  01B6  0008               	return
  4623  01B7                     l2466:	
  4624  01B7  0839               	movf	frexp@value+3,w
  4625  01B8  397F               	andlw	127
  4626  01B9  00BB               	movwf	??_frexp
  4627  01BA  01BC               	clrf	??_frexp+1
  4628  01BB  35BB               	lslf	??_frexp,f
  4629  01BC  0DBC               	rlf	??_frexp+1,f
  4630  01BD  083A               	movf	frexp@eptr,w
  4631  01BE  0086               	movwf	6
  4632  01BF  0187               	clrf	7
  4633  01C0  083B               	movf	??_frexp,w
  4634  01C1  3FC0               	movwi [0]fsr1
  4635  01C2  083C               	movf	??_frexp+1,w
  4636  01C3  3FC1               	movwi [1]fsr1
  4637  01C4  0D38               	rlf	frexp@value+2,w
  4638  01C5  0D38               	rlf	frexp@value+2,w
  4639  01C6  3901               	andlw	1
  4640  01C7  00BB               	movwf	??_frexp
  4641  01C8  01BC               	clrf	??_frexp+1
  4642  01C9  083A               	movf	frexp@eptr,w
  4643  01CA  0086               	movwf	6
  4644  01CB  083B               	movf	??_frexp,w
  4645  01CC  0481               	iorwf	1,f
  4646  01CD  3141               	addfsr 1,1
  4647  01CE  083C               	movf	??_frexp+1,w
  4648  01CF  0481               	iorwf	1,f
  4649  01D0  083A               	movf	frexp@eptr,w
  4650  01D1  0086               	movwf	6
  4651  01D2  3082               	movlw	130
  4652  01D3  0187               	clrf	7
  4653  01D4  0781               	addwf	1,f
  4654  01D5  30FF               	movlw	255
  4655  01D6  3141               	addfsr 1,1
  4656  01D7  3D81               	addwfc	1,f
  4657  01D8  317F               	addfsr 1,-1
  4658  01D9  0839               	movf	frexp@value+3,w
  4659  01DA  3980               	andlw	-128
  4660  01DB  383F               	iorlw	63
  4661  01DC  00B9               	movwf	frexp@value+3
  4662  01DD  13B8               	bcf	frexp@value+2,7
  4663  01DE  0008               	return
  4664  01DF                     __end_of_frexp:	
  4665  01DF                     __ptext16:	
  4666 ;; *************** function ___fladd *****************
  4667 ;; Defined at:
  4668 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  b               4    0[BANK1 ] unsigned int 
  4671 ;;  a               4    4[BANK1 ] unsigned int 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  grs             1   19[BANK1 ] unsigned char 
  4674 ;;  bexp            1   18[BANK1 ] unsigned char 
  4675 ;;  aexp            1   17[BANK1 ] unsigned char 
  4676 ;;  signs           1   16[BANK1 ] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  4    0[BANK1 ] unsigned char 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0
  4681 ;; Tracked objects:
  4682 ;;		On entry : 1F/1
  4683 ;;		On exit  : 1F/1
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4686 ;;      Params:         0       0       8       0
  4687 ;;      Locals:         0       0       4       0
  4688 ;;      Temps:          0       0       8       0
  4689 ;;      Totals:         0       0      20       0
  4690 ;;Total ram usage:       20 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;;		___flsub
  4698 ;;		_floor
  4699 ;;		_log
  4700 ;;		_eval_poly
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function ___fladd
  4706  01DF                     ___fladd:	
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  4710  01DF  0823               	movf	(___fladd@b^(0+128)+3),w
  4711  01E0  00B0               	movwf	___fladd@signs^(0+128)
  4712  01E1  3080               	movlw	128
  4713  01E2  05B0               	andwf	___fladd@signs^(0+128),f
  4714  01E3  3523               	lslf	(___fladd@b^(0+128)+3),w
  4715  01E4  00B2               	movwf	___fladd@bexp^(0+128)
  4716  01E5  1BA2               	btfsc	(___fladd@b^(0+128)+2),7
  4717  01E6  1432               	bsf	___fladd@bexp^(0+128),0
  4718  01E7  0832               	movf	___fladd@bexp^(0+128),w
  4719  01E8  1903               	btfsc	3,2
  4720  01E9  29F1               	goto	l589
  4721  01EA  0F32               	incfsz	___fladd@bexp^(0+128),w
  4722  01EB  29EE               	goto	l590
  4723  01EC  23B3  3180         	fcall	PL84	;call to abstracted procedure
  4724  01EE                     l590:	
  4725  01EE  17A2               	bsf	(___fladd@b^(0+128)+2),7
  4726  01EF  01A3               	clrf	(___fladd@b^(0+128)+3)
  4727  01F0  29F3               	goto	l2132
  4728  01F1                     l589:	
  4729  01F1  23B3  3180         	fcall	PL84	;call to abstracted procedure
  4730  01F3                     l2132:	
  4731  01F3  0827               	movf	(___fladd@a^(0+128)+3),w
  4732  01F4  00B1               	movwf	___fladd@aexp^(0+128)
  4733  01F5  3080               	movlw	128
  4734  01F6  05B1               	andwf	___fladd@aexp^(0+128),f
  4735  01F7  0831               	movf	___fladd@aexp^(0+128),w
  4736  01F8  0630               	xorwf	___fladd@signs^(0+128),w
  4737  01F9  1D03               	btfss	3,2
  4738  01FA  1730               	bsf	___fladd@signs^(0+128),6
  4739  01FB  3527               	lslf	(___fladd@a^(0+128)+3),w
  4740  01FC  00B1               	movwf	___fladd@aexp^(0+128)
  4741  01FD  1BA6               	btfsc	(___fladd@a^(0+128)+2),7
  4742  01FE  1431               	bsf	___fladd@aexp^(0+128),0
  4743  01FF  0831               	movf	___fladd@aexp^(0+128),w
  4744  0200  1903               	btfsc	3,2
  4745  0201  2A09               	goto	l594
  4746  0202  0F31               	incfsz	___fladd@aexp^(0+128),w
  4747  0203  2A06               	goto	l595
  4748  0204  23AE  3180         	fcall	PL78	;call to abstracted procedure
  4749  0206                     l595:	
  4750  0206  17A6               	bsf	(___fladd@a^(0+128)+2),7
  4751  0207  01A7               	clrf	(___fladd@a^(0+128)+3)
  4752  0208  2A0B               	goto	l2154
  4753  0209                     l594:	
  4754  0209  23AE  3180         	fcall	PL78	;call to abstracted procedure
  4755  020B                     l2154:	
  4756  020B  0832               	movf	___fladd@bexp^(0+128),w
  4757  020C  0231               	subwf	___fladd@aexp^(0+128),w
  4758  020D  1803               	skipnc
  4759  020E  2A31               	goto	l2190
  4760  020F  1F30               	btfss	___fladd@signs^(0+128),6
  4761  0210  2A13               	goto	l2160
  4762  0211  3080               	movlw	128
  4763  0212  06B0               	xorwf	___fladd@signs^(0+128),f
  4764  0213                     l2160:	
  4765  0213  0832               	movf	___fladd@bexp^(0+128),w
  4766  0214  00B3               	movwf	___fladd@grs^(0+128)
  4767  0215  0831               	movf	___fladd@aexp^(0+128),w
  4768  0216  00B2               	movwf	___fladd@bexp^(0+128)
  4769  0217  0833               	movf	___fladd@grs^(0+128),w
  4770  0218  00B1               	movwf	___fladd@aexp^(0+128)
  4771  0219  0820               	movf	___fladd@b^(0+128),w
  4772  021A  00B3               	movwf	___fladd@grs^(0+128)
  4773  021B  0824               	movf	___fladd@a^(0+128),w
  4774  021C  00A0               	movwf	___fladd@b^(0+128)
  4775  021D  0833               	movf	___fladd@grs^(0+128),w
  4776  021E  00A4               	movwf	___fladd@a^(0+128)
  4777  021F  0821               	movf	(___fladd@b^(0+128)+1),w
  4778  0220  00B3               	movwf	___fladd@grs^(0+128)
  4779  0221  0825               	movf	(___fladd@a^(0+128)+1),w
  4780  0222  00A1               	movwf	(___fladd@b^(0+128)+1)
  4781  0223  0833               	movf	___fladd@grs^(0+128),w
  4782  0224  00A5               	movwf	(___fladd@a^(0+128)+1)
  4783  0225  0822               	movf	(___fladd@b^(0+128)+2),w
  4784  0226  00B3               	movwf	___fladd@grs^(0+128)
  4785  0227  0826               	movf	(___fladd@a^(0+128)+2),w
  4786  0228  00A2               	movwf	(___fladd@b^(0+128)+2)
  4787  0229  0833               	movf	___fladd@grs^(0+128),w
  4788  022A  00A6               	movwf	(___fladd@a^(0+128)+2)
  4789  022B  0823               	movf	(___fladd@b^(0+128)+3),w
  4790  022C  00B3               	movwf	___fladd@grs^(0+128)
  4791  022D  0827               	movf	(___fladd@a^(0+128)+3),w
  4792  022E  00A3               	movwf	(___fladd@b^(0+128)+3)
  4793  022F  0833               	movf	___fladd@grs^(0+128),w
  4794  0230  00A7               	movwf	(___fladd@a^(0+128)+3)
  4795  0231                     l2190:	
  4796  0231  01B3               	clrf	___fladd@grs^(0+128)
  4797  0232  0831               	movf	___fladd@aexp^(0+128),w
  4798  0233  00A8               	movwf	??___fladd^(0+128)
  4799  0234  01A9               	clrf	(??___fladd^(0+128)+1)
  4800  0235  0829               	movf	(??___fladd+1)^(0+128),w
  4801  0236  00AB               	movwf	((??___fladd+2)^(0+128)+1)
  4802  0237  0832               	movf	___fladd@bexp^(0+128),w
  4803  0238  0228               	subwf	??___fladd^(0+128),w
  4804  0239  00AA               	movwf	(??___fladd+2)^(0+128)
  4805  023A  1C03               	skipc
  4806  023B  03AB               	decf	((??___fladd+2)^(0+128)+1),f
  4807  023C  082B               	movf	(??___fladd+3)^(0+128),w
  4808  023D  3A80               	xorlw	128
  4809  023E  00AC               	movwf	(??___fladd+4)^(0+128)
  4810  023F  3080               	movlw	128
  4811  0240  022C               	subwf	(??___fladd+4)^(0+128),w
  4812  0241  1D03               	skipz
  4813  0242  2A45               	goto	u1945
  4814  0243  301A               	movlw	26
  4815  0244  022A               	subwf	(??___fladd+2)^(0+128),w
  4816  0245                     u1945:	
  4817  0245  1C03               	skipc
  4818  0246  2A62               	goto	l2204
  4819  0247  0021               	movlb	1	; select bank1
  4820  0248  0823               	movf	(___fladd@b+3)^(0+128),w
  4821  0249  0422               	iorwf	(___fladd@b+2)^(0+128),w
  4822  024A  0421               	iorwf	(___fladd@b+1)^(0+128),w
  4823  024B  0420               	iorwf	___fladd@b^(0+128),w
  4824  024C  1903               	btfsc	3,2
  4825  024D  2A50               	goto	u1950
  4826  024E  3001               	movlw	1
  4827  024F  2A51               	goto	u1960
  4828  0250                     u1950:	
  4829  0250  3000               	movlw	0
  4830  0251                     u1960:	
  4831  0251  00B3               	movwf	___fladd@grs^(0+128)
  4832  0252  01A0               	clrf	___fladd@b^(0+128)
  4833  0253  01A1               	clrf	(___fladd@b+1)^(0+128)
  4834  0254  01A2               	clrf	(___fladd@b+2)^(0+128)
  4835  0255  01A3               	clrf	(___fladd@b+3)^(0+128)
  4836  0256  0831               	movf	___fladd@aexp^(0+128),w
  4837  0257  00B2               	movwf	___fladd@bexp^(0+128)
  4838  0258  2A67               	goto	l600
  4839  0259                     l602:	
  4840  0259  1C33               	btfss	___fladd@grs^(0+128),0
  4841  025A  2A5F               	goto	l603
  4842  025B  3633               	lsrf	___fladd@grs^(0+128),w
  4843  025C  3801               	iorlw	1
  4844  025D  00B3               	movwf	___fladd@grs^(0+128)
  4845  025E  2A60               	goto	l604
  4846  025F                     l603:	
  4847  025F  36B3               	lsrf	___fladd@grs^(0+128),f
  4848  0260                     l604:	
  4849  0260  2395  3180         	fcall	PL52	;call to abstracted procedure
  4850  0262                     l2204:	
  4851  0262  0021               	movlb	1	; select bank1
  4852  0263  0831               	movf	___fladd@aexp^(0+128),w
  4853  0264  0232               	subwf	___fladd@bexp^(0+128),w
  4854  0265  1C03               	skipc
  4855  0266  2A59               	goto	l602
  4856  0267                     l600:	
  4857  0267  1B30               	btfsc	___fladd@signs^(0+128),6
  4858  0268  2A81               	goto	l2222
  4859  0269  0832               	movf	___fladd@bexp^(0+128),w
  4860  026A  1D03               	btfss	3,2
  4861  026B  2A6D               	goto	l2210
  4862  026C  2BA9               	ljmp	PL68	;call to abstracted procedure
  4863  026D                     l2210:	
  4864  026D  0824               	movf	___fladd@a^(0+128),w
  4865  026E  07A0               	addwf	___fladd@b^(0+128),f
  4866  026F  0825               	movf	(___fladd@a+1)^(0+128),w
  4867  0270  3DA1               	addwfc	(___fladd@b+1)^(0+128),f
  4868  0271  0826               	movf	(___fladd@a+2)^(0+128),w
  4869  0272  3DA2               	addwfc	(___fladd@b+2)^(0+128),f
  4870  0273  0827               	movf	(___fladd@a+3)^(0+128),w
  4871  0274  3DA3               	addwfc	(___fladd@b+3)^(0+128),f
  4872  0275  1C23               	btfss	(___fladd@b+3)^(0+128),0
  4873  0276  2AE1               	goto	l2252
  4874  0277  1C33               	btfss	___fladd@grs^(0+128),0
  4875  0278  2A7D               	goto	l611
  4876  0279  3633               	lsrf	___fladd@grs^(0+128),w
  4877  027A  3801               	iorlw	1
  4878  027B  00B3               	movwf	___fladd@grs^(0+128)
  4879  027C  2A7E               	goto	l612
  4880  027D                     l611:	
  4881  027D  36B3               	lsrf	___fladd@grs^(0+128),f
  4882  027E                     l612:	
  4883  027E  2395  3180         	fcall	PL52	;call to abstracted procedure
  4884  0280  2AE1               	goto	l2252
  4885  0281                     l2222:	
  4886  0281  0823               	movf	(___fladd@b+3)^(0+128),w
  4887  0282  3A80               	xorlw	128
  4888  0283  00A8               	movwf	??___fladd^(0+128)
  4889  0284  0827               	movf	(___fladd@a+3)^(0+128),w
  4890  0285  3A80               	xorlw	128
  4891  0286  0228               	subwf	??___fladd^(0+128),w
  4892  0287  1D03               	skipz
  4893  0288  2A93               	goto	u2053
  4894  0289  0826               	movf	(___fladd@a+2)^(0+128),w
  4895  028A  0222               	subwf	(___fladd@b+2)^(0+128),w
  4896  028B  1D03               	skipz
  4897  028C  2A93               	goto	u2053
  4898  028D  0825               	movf	(___fladd@a+1)^(0+128),w
  4899  028E  0221               	subwf	(___fladd@b+1)^(0+128),w
  4900  028F  1D03               	skipz
  4901  0290  2A93               	goto	u2053
  4902  0291  0824               	movf	___fladd@a^(0+128),w
  4903  0292  0220               	subwf	___fladd@b^(0+128),w
  4904  0293                     u2053:	
  4905  0293  1803               	skipnc
  4906  0294  2ABE               	goto	l2232
  4907  0295  30FF               	movlw	255
  4908  0296  00A8               	movwf	??___fladd^(0+128)
  4909  0297  00A9               	movwf	(??___fladd^(0+128)+1)
  4910  0298  00AA               	movwf	(??___fladd^(0+128)+2)
  4911  0299  00AB               	movwf	(??___fladd^(0+128)+3)
  4912  029A  0820               	movf	___fladd@b^(0+128),w
  4913  029B  0224               	subwf	___fladd@a^(0+128),w
  4914  029C  00AC               	movwf	(??___fladd+4)^(0+128)
  4915  029D  0821               	movf	(___fladd@b+1)^(0+128),w
  4916  029E  3B25               	subwfb	(___fladd@a+1)^(0+128),w
  4917  029F  00AD               	movwf	((??___fladd+4)^(0+128)+1)
  4918  02A0  0822               	movf	(___fladd@b+2)^(0+128),w
  4919  02A1  3B26               	subwfb	(___fladd@a+2)^(0+128),w
  4920  02A2  00AE               	movwf	((??___fladd+4)^(0+128)+2)
  4921  02A3  0823               	movf	(___fladd@b+3)^(0+128),w
  4922  02A4  3B27               	subwfb	(___fladd@a+3)^(0+128),w
  4923  02A5  00AF               	movwf	((??___fladd+4)^(0+128)+3)
  4924  02A6  082C               	movf	(??___fladd+4)^(0+128),w
  4925  02A7  07A8               	addwf	??___fladd^(0+128),f
  4926  02A8  082D               	movf	(??___fladd+5)^(0+128),w
  4927  02A9  3DA9               	addwfc	(??___fladd^(0+128)+1),f
  4928  02AA  082E               	movf	(??___fladd+6)^(0+128),w
  4929  02AB  3DAA               	addwfc	(??___fladd^(0+128)+2),f
  4930  02AC  082F               	movf	(??___fladd+7)^(0+128),w
  4931  02AD  3DAB               	addwfc	(??___fladd^(0+128)+3),f
  4932  02AE  082B               	movf	(??___fladd+3)^(0+128),w
  4933  02AF  00A3               	movwf	(___fladd@b+3)^(0+128)
  4934  02B0  082A               	movf	(??___fladd+2)^(0+128),w
  4935  02B1  00A2               	movwf	(___fladd@b+2)^(0+128)
  4936  02B2  0829               	movf	(??___fladd+1)^(0+128),w
  4937  02B3  00A1               	movwf	(___fladd@b+1)^(0+128)
  4938  02B4  0828               	movf	??___fladd^(0+128),w
  4939  02B5  00A0               	movwf	___fladd@b^(0+128)
  4940  02B6  3080               	movlw	128
  4941  02B7  06B0               	xorwf	___fladd@signs^(0+128),f
  4942  02B8  09B3               	comf	___fladd@grs^(0+128),f
  4943  02B9  0FB3               	incfsz	___fladd@grs^(0+128),f
  4944  02BA  2AC6               	goto	l617
  4945  02BB  239D  3180         	fcall	PL56	;call to abstracted procedure
  4946  02BD  2AC6               	goto	l617
  4947  02BE                     l2232:	
  4948  02BE  0824               	movf	___fladd@a^(0+128),w
  4949  02BF  02A0               	subwf	___fladd@b^(0+128),f
  4950  02C0  0825               	movf	(___fladd@a+1)^(0+128),w
  4951  02C1  3BA1               	subwfb	(___fladd@b+1)^(0+128),f
  4952  02C2  0826               	movf	(___fladd@a+2)^(0+128),w
  4953  02C3  3BA2               	subwfb	(___fladd@b+2)^(0+128),f
  4954  02C4  0827               	movf	(___fladd@a+3)^(0+128),w
  4955  02C5  3BA3               	subwfb	(___fladd@b+3)^(0+128),f
  4956  02C6                     l617:	
  4957  02C6  0823               	movf	(___fladd@b+3)^(0+128),w
  4958  02C7  0422               	iorwf	(___fladd@b+2)^(0+128),w
  4959  02C8  0421               	iorwf	(___fladd@b+1)^(0+128),w
  4960  02C9  0420               	iorwf	___fladd@b^(0+128),w
  4961  02CA  1D03               	skipz
  4962  02CB  2ADF               	goto	l2250
  4963  02CC  0833               	movf	___fladd@grs^(0+128),w
  4964  02CD  1D03               	btfss	3,2
  4965  02CE  2ADF               	goto	l2250
  4966  02CF  2BA9               	ljmp	PL68	;call to abstracted procedure
  4967  02D0                     l2238:	
  4968  02D0  35A0               	lslf	___fladd@b^(0+128),f
  4969  02D1  0DA1               	rlf	(___fladd@b+1)^(0+128),f
  4970  02D2  0DA2               	rlf	(___fladd@b+2)^(0+128),f
  4971  02D3  0DA3               	rlf	(___fladd@b+3)^(0+128),f
  4972  02D4  1BB3               	btfsc	___fladd@grs^(0+128),7
  4973  02D5  1420               	bsf	___fladd@b^(0+128),0
  4974  02D6  1C33               	btfss	___fladd@grs^(0+128),0
  4975  02D7  2ADB               	goto	l622
  4976  02D8  1403               	setc
  4977  02D9  0DB3               	rlf	___fladd@grs^(0+128),f
  4978  02DA  2ADC               	goto	l2246
  4979  02DB                     l622:	
  4980  02DB  35B3               	lslf	___fladd@grs^(0+128),f
  4981  02DC                     l2246:	
  4982  02DC  0832               	movf	___fladd@bexp^(0+128),w
  4983  02DD  1D03               	btfss	3,2
  4984  02DE  03B2               	decf	___fladd@bexp^(0+128),f
  4985  02DF                     l2250:	
  4986  02DF  1FA2               	btfss	(___fladd@b+2)^(0+128),7
  4987  02E0  2AD0               	goto	l2238
  4988  02E1                     l2252:	
  4989  02E1  01B1               	clrf	___fladd@aexp^(0+128)
  4990  02E2  1FB3               	btfss	___fladd@grs^(0+128),7
  4991  02E3  2AEC               	goto	l2262
  4992  02E4  0833               	movf	___fladd@grs^(0+128),w
  4993  02E5  397F               	andlw	127
  4994  02E6  1903               	btfsc	3,2
  4995  02E7  1820               	btfsc	___fladd@b^(0+128),0
  4996  02E8  2AEA               	goto	l2258
  4997  02E9  2AEC               	goto	l2262
  4998  02EA                     l2258:	
  4999  02EA  01B1               	clrf	___fladd@aexp^(0+128)
  5000  02EB  0AB1               	incf	___fladd@aexp^(0+128),f
  5001  02EC                     l2262:	
  5002  02EC  0831               	movf	___fladd@aexp^(0+128),w
  5003  02ED  1903               	btfsc	3,2
  5004  02EE  2AF9               	goto	l2274
  5005  02EF  239D  3180         	fcall	PL56	;call to abstracted procedure
  5006  02F1  1C23               	btfss	(___fladd@b+3)^(0+128),0
  5007  02F2  2AF9               	goto	l2274
  5008  02F3  37A3               	asrf	(___fladd@b+3)^(0+128),f
  5009  02F4  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  5010  02F5  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  5011  02F6  0CA0               	rrf	___fladd@b^(0+128),f
  5012  02F7  0F32               	incfsz	___fladd@bexp^(0+128),w
  5013  02F8  0AB2               	incf	___fladd@bexp^(0+128),f
  5014  02F9                     l2274:	
  5015  02F9  0A32               	incf	___fladd@bexp^(0+128),w
  5016  02FA  1D03               	btfss	3,2
  5017  02FB  0832               	movf	___fladd@bexp^(0+128),w
  5018  02FC  1D03               	btfss	3,2
  5019  02FD  2B05               	goto	l2282
  5020  02FE  01A0               	clrf	___fladd@b^(0+128)
  5021  02FF  01A1               	clrf	(___fladd@b+1)^(0+128)
  5022  0300  01A2               	clrf	(___fladd@b+2)^(0+128)
  5023  0301  01A3               	clrf	(___fladd@b+3)^(0+128)
  5024  0302  0832               	movf	___fladd@bexp^(0+128),w
  5025  0303  1903               	btfsc	3,2
  5026  0304  01B0               	clrf	___fladd@signs^(0+128)
  5027  0305                     l2282:	
  5028  0305  1C32               	btfss	___fladd@bexp^(0+128),0
  5029  0306  2B09               	goto	l637
  5030  0307  17A2               	bsf	(___fladd@b^(0+128)+2),7
  5031  0308  2B0A               	goto	l2286
  5032  0309                     l637:	
  5033  0309  13A2               	bcf	(___fladd@b^(0+128)+2),7
  5034  030A                     l2286:	
  5035  030A  3632               	lsrf	___fladd@bexp^(0+128),w
  5036  030B  00A3               	movwf	(___fladd@b^(0+128)+3)
  5037  030C  1BB0               	btfsc	___fladd@signs^(0+128),7
  5038  030D  17A3               	bsf	(___fladd@b^(0+128)+3),7
  5039  030E  0008               	return
  5040  030F                     __end_of___fladd:	
  5041  030F                     __ptext12:	
  5042 ;; *************** function _eval_poly *****************
  5043 ;; Defined at:
  5044 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  x               4   20[BANK1 ] long 
  5047 ;;  d               2   24[BANK1 ] PTR const 
  5048 ;;		 -> log@coeff(36), exp@coeff(40), 
  5049 ;;  n               2   26[BANK1 ] int 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  res             4   34[BANK1 ] int 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  4   20[BANK1 ] int 
  5054 ;; Registers used:
  5055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 1F/1
  5058 ;;		On exit  : 1F/1
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5061 ;;      Params:         0       0       8       0
  5062 ;;      Locals:         0       0       4       0
  5063 ;;      Temps:          0       0       6       0
  5064 ;;      Totals:         0       0      18       0
  5065 ;;Total ram usage:       18 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    3
  5068 ;; This function calls:
  5069 ;;		___fladd
  5070 ;;		___flmul
  5071 ;; This function is called by:
  5072 ;;		_exp
  5073 ;;		_log
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _eval_poly
  5079  030F                     _eval_poly:	
  5080                           
  5081                           ;incstack = 0
  5082                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5083  030F  236F  3180         	fcall	PL10	;call to abstracted procedure
  5084  0311  00C5               	movwf	(eval_poly@res+3)^(0+128)
  5085  0312  0840               	movf	(??_eval_poly+4)^(0+128),w
  5086  0313  00C4               	movwf	(eval_poly@res+2)^(0+128)
  5087  0314  083F               	movf	(??_eval_poly+3)^(0+128),w
  5088  0315  00C3               	movwf	(eval_poly@res+1)^(0+128)
  5089  0316  083E               	movf	(??_eval_poly+2)^(0+128),w
  5090  0317                     L2:	
  5091  0317  00C2               	movwf	eval_poly@res^(0+128)
  5092  0318  083A               	movf	eval_poly@n^(0+128),w
  5093  0319  043B               	iorwf	(eval_poly@n+1)^(0+128),w
  5094  031A  1903               	btfsc	3,2
  5095  031B  2B56               	goto	l2660
  5096  031C  30FF               	movlw	-1
  5097  031D  07BA               	addwf	eval_poly@n^(0+128),f
  5098  031E  1C03               	skipc
  5099  031F  03BB               	decf	(eval_poly@n+1)^(0+128),f
  5100  0320  236F               	fcall	PL10	;call to abstracted procedure
  5101  0321  00A3               	movwf	(___fladd@b+3)^(0+128)
  5102  0322  0840               	movf	(??_eval_poly+4)^(0+128),w
  5103  0323  00A2               	movwf	(___fladd@b+2)^(0+128)
  5104  0324  083F               	movf	(??_eval_poly+3)^(0+128),w
  5105  0325  00A1               	movwf	(___fladd@b+1)^(0+128)
  5106  0326  083E               	movf	(??_eval_poly+2)^(0+128),w
  5107  0327  00A0               	movwf	___fladd@b^(0+128)
  5108  0328  0845               	movf	(eval_poly@res+3)^(0+128),w
  5109  0329  0020               	movlb	0	; select bank0
  5110  032A  00C0               	movwf	___flmul@b+3
  5111  032B  0021               	movlb	1	; select bank1
  5112  032C  0844               	movf	(eval_poly@res+2)^(0+128),w
  5113  032D  0020               	movlb	0	; select bank0
  5114  032E  00BF               	movwf	___flmul@b+2
  5115  032F  0021               	movlb	1	; select bank1
  5116  0330  0843               	movf	(eval_poly@res+1)^(0+128),w
  5117  0331  0020               	movlb	0	; select bank0
  5118  0332  00BE               	movwf	___flmul@b+1
  5119  0333  0021               	movlb	1	; select bank1
  5120  0334  0842               	movf	eval_poly@res^(0+128),w
  5121  0335  0020               	movlb	0	; select bank0
  5122  0336  00BD               	movwf	___flmul@b
  5123  0337  0021               	movlb	1	; select bank1
  5124  0338  0837               	movf	(eval_poly@x+3)^(0+128),w
  5125  0339  0020               	movlb	0	; select bank0
  5126  033A  00C4               	movwf	___flmul@a+3
  5127  033B  0021               	movlb	1	; select bank1
  5128  033C  0836               	movf	(eval_poly@x+2)^(0+128),w
  5129  033D  0020               	movlb	0	; select bank0
  5130  033E  00C3               	movwf	___flmul@a+2
  5131  033F  0021               	movlb	1	; select bank1
  5132  0340  0835               	movf	(eval_poly@x+1)^(0+128),w
  5133  0341  0020               	movlb	0	; select bank0
  5134  0342  00C2               	movwf	___flmul@a+1
  5135  0343  0021               	movlb	1	; select bank1
  5136  0344  0834               	movf	eval_poly@x^(0+128),w
  5137  0345  0020               	movlb	0	; select bank0
  5138  0346  00C1               	movwf	___flmul@a
  5139  0347  3183  23B8  3180   	fcall	___flmul
  5140  034A  235F  3180         	fcall	PL8	;call to abstracted procedure
  5141  034C  21DF  3180         	fcall	___fladd
  5142  034E  0823               	movf	(?___fladd+3)^(0+128),w
  5143  034F  00C5               	movwf	(eval_poly@res+3)^(0+128)
  5144  0350  0822               	movf	(?___fladd+2)^(0+128),w
  5145  0351  00C4               	movwf	(eval_poly@res+2)^(0+128)
  5146  0352  0821               	movf	(?___fladd+1)^(0+128),w
  5147  0353  00C3               	movwf	(eval_poly@res+1)^(0+128)
  5148  0354  0820               	movf	?___fladd^(0+128),w
  5149  0355  2B17               	goto	L2
  5150  0356                     l2660:	
  5151  0356  0845               	movf	(eval_poly@res+3)^(0+128),w
  5152  0357  00B7               	movwf	(?_eval_poly+3)^(0+128)
  5153  0358  0844               	movf	(eval_poly@res+2)^(0+128),w
  5154  0359  00B6               	movwf	(?_eval_poly+2)^(0+128)
  5155  035A  0843               	movf	(eval_poly@res+1)^(0+128),w
  5156  035B  00B5               	movwf	(?_eval_poly+1)^(0+128)
  5157  035C  0842               	movf	eval_poly@res^(0+128),w
  5158  035D  00B4               	movwf	?_eval_poly^(0+128)
  5159  035E  0008               	return
  5160  035F                     __end_of_eval_poly:	
  5161  035F                     PL8:	
  5162  035F  0840               	movf	?___flmul+3,w
  5163  0360  0021               	movlb	1	; select bank1
  5164  0361  00A7               	movwf	(___fladd@a+3)^(0+128)
  5165  0362  0020               	movlb	0	; select bank0
  5166  0363  083F               	movf	?___flmul+2,w
  5167  0364  0021               	movlb	1	; select bank1
  5168  0365  00A6               	movwf	(___fladd@a+2)^(0+128)
  5169  0366  0020               	movlb	0	; select bank0
  5170  0367  083E               	movf	?___flmul+1,w
  5171  0368  0021               	movlb	1	; select bank1
  5172  0369  00A5               	movwf	(___fladd@a+1)^(0+128)
  5173  036A  0020               	movlb	0	; select bank0
  5174  036B  083D               	movf	?___flmul,w
  5175  036C  0021               	movlb	1	; select bank1
  5176  036D  00A4               	movwf	___fladd@a^(0+128)
  5177  036E  0008               	return
  5178  036F                     __end_ofPL8:	
  5179  036F                     PL10:	
  5180  036F  083B               	movf	(eval_poly@n+1)^(0+128),w
  5181  0370  00BD               	movwf	(??_eval_poly^(0+128)+1)
  5182  0371  083A               	movf	eval_poly@n^(0+128),w
  5183  0372  00BC               	movwf	??_eval_poly^(0+128)
  5184  0373  35BC               	lslf	??_eval_poly^(0+128),f
  5185  0374  0DBD               	rlf	(??_eval_poly^(0+128)+1),f
  5186  0375  35BC               	lslf	??_eval_poly^(0+128),f
  5187  0376  0DBD               	rlf	(??_eval_poly^(0+128)+1),f
  5188  0377  0838               	movf	eval_poly@d^(0+128),w
  5189  0378  073C               	addwf	??_eval_poly^(0+128),w
  5190  0379  0084               	movwf	4
  5191  037A  0839               	movf	(eval_poly@d+1)^(0+128),w
  5192  037B  3D3D               	addwfc	(??_eval_poly+1)^(0+128),w
  5193  037C  0085               	movwf	5
  5194  037D  3F00               	moviw [0]fsr0
  5195  037E  00BE               	movwf	(??_eval_poly+2)^(0+128)
  5196  037F  3F01               	moviw [1]fsr0
  5197  0380  00BF               	movwf	((??_eval_poly+2)^(0+128)+1)
  5198  0381  3F02               	moviw [2]fsr0
  5199  0382  00C0               	movwf	((??_eval_poly+2)^(0+128)+2)
  5200  0383  3F03               	moviw [3]fsr0
  5201  0384  00C1               	movwf	((??_eval_poly+2)^(0+128)+3)
  5202  0385  0841               	movf	(??_eval_poly+5)^(0+128),w
  5203  0386  0008               	return
  5204  0387                     __end_ofPL10:	
  5205  0387                     PL40:	
  5206  0387  00F0               	movwf	___flge@ff1
  5207  0388  01F4               	clrf	___flge@ff2
  5208  0389  01F5               	clrf	___flge@ff2+1
  5209  038A  01F6               	clrf	___flge@ff2+2
  5210  038B  01F7               	clrf	___flge@ff2+3
  5211  038C  0008               	return
  5212  038D                     __end_ofPL40:	
  5213  038D                     PL42:	
  5214  038D  0837               	movf	(floor@x+3)^(0+128),w
  5215  038E  00F3               	movwf	___flge@ff1+3
  5216  038F  0836               	movf	(floor@x+2)^(0+128),w
  5217  0390  00F2               	movwf	___flge@ff1+2
  5218  0391  0835               	movf	(floor@x+1)^(0+128),w
  5219  0392  00F1               	movwf	___flge@ff1+1
  5220  0393  0834               	movf	floor@x^(0+128),w
  5221  0394  0008               	return
  5222  0395                     __end_ofPL42:	
  5223  0395                     PL52:	
  5224  0395  1820               	btfsc	___fladd@b^(0+128),0
  5225  0396  17B3               	bsf	___fladd@grs^(0+128),7
  5226  0397  37A3               	asrf	(___fladd@b+3)^(0+128),f
  5227  0398  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  5228  0399  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  5229  039A  0CA0               	rrf	___fladd@b^(0+128),f
  5230  039B  0AB2               	incf	___fladd@bexp^(0+128),f
  5231  039C  0008               	return
  5232  039D                     __end_ofPL52:	
  5233  039D                     PL56:	
  5234  039D  3001               	movlw	1
  5235  039E  07A0               	addwf	___fladd@b^(0+128),f
  5236  039F  3000               	movlw	0
  5237  03A0  3DA1               	addwfc	(___fladd@b+1)^(0+128),f
  5238  03A1  3DA2               	addwfc	(___fladd@b+2)^(0+128),f
  5239  03A2  3DA3               	addwfc	(___fladd@b+3)^(0+128),f
  5240  03A3  0008               	return
  5241  03A4                     __end_ofPL56:	
  5242  03A4                     PL62:	
  5243  03A4  01C6               	clrf	?_log^(0+128)
  5244  03A5  01C7               	clrf	(?_log+1)^(0+128)
  5245  03A6  01C8               	clrf	(?_log+2)^(0+128)
  5246  03A7  01C9               	clrf	(?_log+3)^(0+128)
  5247  03A8  0008               	return
  5248  03A9                     __end_ofPL62:	
  5249  03A9                     PL68:	
  5250  03A9  01A0               	clrf	?___fladd^(0+128)
  5251  03AA  01A1               	clrf	(?___fladd+1)^(0+128)
  5252  03AB  01A2               	clrf	(?___fladd+2)^(0+128)
  5253  03AC  01A3               	clrf	(?___fladd+3)^(0+128)
  5254  03AD  0008               	return
  5255  03AE                     __end_ofPL68:	
  5256  03AE                     PL78:	
  5257  03AE  01A4               	clrf	___fladd@a^(0+128)
  5258  03AF  01A5               	clrf	(___fladd@a+1)^(0+128)
  5259  03B0  01A6               	clrf	(___fladd@a+2)^(0+128)
  5260  03B1  01A7               	clrf	(___fladd@a+3)^(0+128)
  5261  03B2  0008               	return
  5262  03B3                     __end_ofPL78:	
  5263  03B3                     PL84:	
  5264  03B3  01A0               	clrf	___fladd@b^(0+128)
  5265  03B4  01A1               	clrf	(___fladd@b+1)^(0+128)
  5266  03B5  01A2               	clrf	(___fladd@b+2)^(0+128)
  5267  03B6  01A3               	clrf	(___fladd@b+3)^(0+128)
  5268  03B7  0008               	return
  5269  03B8                     __end_ofPL84:	
  5270                           
  5271                           	psect	text13
  5272  03B8                     __ptext13:	
  5273 ;; *************** function ___flmul *****************
  5274 ;; Defined at:
  5275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  b               4   29[BANK0 ] int 
  5278 ;;  a               4   33[BANK0 ] int 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  prod            4   48[BANK0 ] struct .
  5281 ;;  grs             4   43[BANK0 ] unsigned long 
  5282 ;;  temp            2   52[BANK0 ] struct .
  5283 ;;  bexp            1   47[BANK0 ] unsigned char 
  5284 ;;  aexp            1   42[BANK0 ] unsigned char 
  5285 ;;  sign            1   41[BANK0 ] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  4   29[BANK0 ] unsigned char 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0, pclath, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 1F/0
  5292 ;;		On exit  : 1F/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5295 ;;      Params:         0       8       0       0
  5296 ;;      Locals:         0      13       0       0
  5297 ;;      Temps:          0       4       0       0
  5298 ;;      Totals:         0      25       0       0
  5299 ;;Total ram usage:       25 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    2
  5302 ;; This function calls:
  5303 ;;		__Umul8_16
  5304 ;; This function is called by:
  5305 ;;		_main
  5306 ;;		_pow
  5307 ;;		_exp
  5308 ;;		_log
  5309 ;;		_eval_poly
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function ___flmul
  5315  03B8                     ___flmul:	
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5319  03B8  0840               	movf	___flmul@b+3,w
  5320  03B9  00C9               	movwf	___flmul@sign
  5321  03BA  3080               	movlw	128
  5322  03BB  05C9               	andwf	___flmul@sign,f
  5323  03BC  3540               	lslf	___flmul@b+3,w
  5324  03BD  00CF               	movwf	___flmul@bexp
  5325  03BE  1BBF               	btfsc	___flmul@b+2,7
  5326  03BF  144F               	bsf	___flmul@bexp,0
  5327  03C0  084F               	movf	___flmul@bexp,w
  5328  03C1  1903               	btfsc	3,2
  5329  03C2  2BC9               	goto	l682
  5330  03C3  0F4F               	incfsz	___flmul@bexp,w
  5331  03C4  2BC7               	goto	l683
  5332  03C5  2529  3183         	fcall	PL82	;call to abstracted procedure
  5333  03C7                     l683:	
  5334  03C7  17BF               	bsf	___flmul@b+2,7
  5335  03C8  2BCB               	goto	l2308
  5336  03C9                     l682:	
  5337  03C9  2529  3183         	fcall	PL82	;call to abstracted procedure
  5338  03CB                     l2308:	
  5339  03CB  0844               	movf	___flmul@a+3,w
  5340  03CC  3980               	andlw	128
  5341  03CD  06C9               	xorwf	___flmul@sign,f
  5342  03CE  3544               	lslf	___flmul@a+3,w
  5343  03CF  00CA               	movwf	___flmul@aexp
  5344  03D0  1BC3               	btfsc	___flmul@a+2,7
  5345  03D1  144A               	bsf	___flmul@aexp,0
  5346  03D2  084A               	movf	___flmul@aexp,w
  5347  03D3  1903               	btfsc	3,2
  5348  03D4  2BDB               	goto	l686
  5349  03D5  0F4A               	incfsz	___flmul@aexp,w
  5350  03D6  2BD9               	goto	l687
  5351  03D7  2524  3183         	fcall	PL80	;call to abstracted procedure
  5352  03D9                     l687:	
  5353  03D9  17C3               	bsf	___flmul@a+2,7
  5354  03DA  2BDD               	goto	l2320
  5355  03DB                     l686:	
  5356  03DB  2524  3183         	fcall	PL80	;call to abstracted procedure
  5357  03DD                     l2320:	
  5358  03DD  084A               	movf	___flmul@aexp,w
  5359  03DE  1D03               	btfss	3,2
  5360  03DF  084F               	movf	___flmul@bexp,w
  5361  03E0  1D03               	btfss	3,2
  5362  03E1  2BE7               	goto	l2324
  5363  03E2  01BD               	clrf	?___flmul
  5364  03E3  01BE               	clrf	?___flmul+1
  5365  03E4  01BF               	clrf	?___flmul+2
  5366  03E5  01C0               	clrf	?___flmul+3
  5367  03E6  0008               	return
  5368  03E7                     l2324:	
  5369  03E7  083D               	movf	___flmul@b,w
  5370  03E8  00F0               	movwf	__Umul8_16@multiplicand
  5371  03E9  0843               	movf	___flmul@a+2,w
  5372  03EA  24D2  3183         	fcall	__Umul8_16
  5373  03EC  0871               	movf	?__Umul8_16+1,w
  5374  03ED  00D5               	movwf	___flmul@temp+1
  5375  03EE  0870               	movf	?__Umul8_16,w
  5376  03EF  00D4               	movwf	___flmul@temp
  5377  03F0  00CB               	movwf	___flmul@grs
  5378  03F1  01CC               	clrf	___flmul@grs+1
  5379  03F2  01CD               	clrf	___flmul@grs+2
  5380  03F3  01CE               	clrf	___flmul@grs+3
  5381  03F4  0855               	movf	___flmul@temp+1,w
  5382  03F5  00D0               	movwf	___flmul@prod
  5383  03F6  01D1               	clrf	___flmul@prod+1
  5384  03F7  01D2               	clrf	___flmul@prod+2
  5385  03F8  01D3               	clrf	___flmul@prod+3
  5386  03F9  083E               	movf	___flmul@b+1,w
  5387  03FA  00F0               	movwf	__Umul8_16@multiplicand
  5388  03FB  0842               	movf	___flmul@a+1,w
  5389  03FC  24D2  3183         	fcall	__Umul8_16
  5390  03FE  0871               	movf	?__Umul8_16+1,w
  5391  03FF  2504  3183         	fcall	PL32	;call to abstracted procedure
  5392  0401  07D0               	addwf	___flmul@prod,f
  5393  0402  3001               	movlw	1
  5394  0403  1803               	skipnc
  5395  0404  07D1               	addwf	___flmul@prod+1,f
  5396  0405  1803               	skipnc
  5397  0406  07D2               	addwf	___flmul@prod+2,f
  5398  0407  1803               	skipnc
  5399  0408  07D3               	addwf	___flmul@prod+3,f
  5400  0409  083F               	movf	___flmul@b+2,w
  5401  040A  00F0               	movwf	__Umul8_16@multiplicand
  5402  040B  0841               	movf	___flmul@a,w
  5403  040C  24D2  3183         	fcall	__Umul8_16
  5404  040E  0871               	movf	?__Umul8_16+1,w
  5405  040F  2504  3183         	fcall	PL32	;call to abstracted procedure
  5406  0411  24F4  3183         	fcall	PL26	;call to abstracted procedure
  5407  0413  083E               	movf	___flmul@b+1,w
  5408  0414  00F0               	movwf	__Umul8_16@multiplicand
  5409  0415  0841               	movf	___flmul@a,w
  5410  0416  24D2  3183         	fcall	__Umul8_16
  5411  0418  24E9  3183         	fcall	PL14	;call to abstracted procedure
  5412  041A  083D               	movf	___flmul@b,w
  5413  041B  00F0               	movwf	__Umul8_16@multiplicand
  5414  041C  0842               	movf	___flmul@a+1,w
  5415  041D  24D2  3183         	fcall	__Umul8_16
  5416  041F  24E9  3183         	fcall	PL14	;call to abstracted procedure
  5417  0421  084D               	movf	___flmul@grs+2,w
  5418  0422  00CE               	movwf	___flmul@grs+3
  5419  0423  084C               	movf	___flmul@grs+1,w
  5420  0424  00CD               	movwf	___flmul@grs+2
  5421  0425  084B               	movf	___flmul@grs,w
  5422  0426  00CC               	movwf	___flmul@grs+1
  5423  0427  01CB               	clrf	___flmul@grs
  5424  0428  083D               	movf	___flmul@b,w
  5425  0429  00F0               	movwf	__Umul8_16@multiplicand
  5426  042A  0841               	movf	___flmul@a,w
  5427  042B  24D2  3183         	fcall	__Umul8_16
  5428  042D  24E9  3183         	fcall	PL14	;call to abstracted procedure
  5429  042F  083E               	movf	___flmul@b+1,w
  5430  0430  00F0               	movwf	__Umul8_16@multiplicand
  5431  0431  0843               	movf	___flmul@a+2,w
  5432  0432  24D2  3183         	fcall	__Umul8_16
  5433  0434  2511  3183         	fcall	PL38	;call to abstracted procedure
  5434  0436  0842               	movf	___flmul@a+1,w
  5435  0437  24D2  3183         	fcall	__Umul8_16
  5436  0439  2511  3183         	fcall	PL38	;call to abstracted procedure
  5437  043B  0843               	movf	___flmul@a+2,w
  5438  043C  24D2  3183         	fcall	__Umul8_16
  5439  043E  0871               	movf	?__Umul8_16+1,w
  5440  043F  00D5               	movwf	___flmul@temp+1
  5441  0440  0870               	movf	?__Umul8_16,w
  5442  0441  00D4               	movwf	___flmul@temp
  5443  0442  00C5               	movwf	??___flmul
  5444  0443  0855               	movf	___flmul@temp+1,w
  5445  0444  00C6               	movwf	??___flmul+1
  5446  0445  01C7               	clrf	??___flmul+2
  5447  0446  01C8               	clrf	??___flmul+3
  5448  0447  0847               	movf	??___flmul+2,w
  5449  0448  00C8               	movwf	??___flmul+3
  5450  0449  0846               	movf	??___flmul+1,w
  5451  044A  00C7               	movwf	??___flmul+2
  5452  044B  0845               	movf	??___flmul,w
  5453  044C  00C6               	movwf	??___flmul+1
  5454  044D  01C5               	clrf	??___flmul
  5455  044E  0845               	movf	??___flmul,w
  5456  044F  07D0               	addwf	___flmul@prod,f
  5457  0450  0846               	movf	??___flmul+1,w
  5458  0451  3DD1               	addwfc	___flmul@prod+1,f
  5459  0452  0847               	movf	??___flmul+2,w
  5460  0453  3DD2               	addwfc	___flmul@prod+2,f
  5461  0454  0848               	movf	??___flmul+3,w
  5462  0455  3DD3               	addwfc	___flmul@prod+3,f
  5463  0456  084E               	movf	___flmul@grs+3,w
  5464  0457  24F4  3183         	fcall	PL26	;call to abstracted procedure
  5465  0459  084F               	movf	___flmul@bexp,w
  5466  045A  00D4               	movwf	___flmul@temp
  5467  045B  01D5               	clrf	___flmul@temp+1
  5468  045C  084A               	movf	___flmul@aexp,w
  5469  045D  07D4               	addwf	___flmul@temp,f
  5470  045E  1803               	skipnc
  5471  045F  0AD5               	incf	___flmul@temp+1,f
  5472  0460  3082               	movlw	-126
  5473  0461                     L3:	
  5474  0461  07D4               	addwf	___flmul@temp,f
  5475  0462  1C03               	skipc
  5476  0463  03D5               	decf	___flmul@temp+1,f
  5477  0464  1BD2               	btfsc	___flmul@prod+2,7
  5478  0465  2C72               	goto	l2372
  5479  0466  35D0               	lslf	___flmul@prod,f
  5480  0467  0DD1               	rlf	___flmul@prod+1,f
  5481  0468  0DD2               	rlf	___flmul@prod+2,f
  5482  0469  0DD3               	rlf	___flmul@prod+3,f
  5483  046A  1BCE               	btfsc	___flmul@grs+3,7
  5484  046B  1450               	bsf	___flmul@prod,0
  5485  046C  30FF               	movlw	-1
  5486  046D  35CB               	lslf	___flmul@grs,f
  5487  046E  0DCC               	rlf	___flmul@grs+1,f
  5488  046F  0DCD               	rlf	___flmul@grs+2,f
  5489  0470  0DCE               	rlf	___flmul@grs+3,f
  5490  0471  2C61               	goto	L3
  5491  0472                     l2372:	
  5492  0472  01CA               	clrf	___flmul@aexp
  5493  0473  1FCE               	btfss	___flmul@grs+3,7
  5494  0474  2C87               	goto	l2382
  5495  0475  084B               	movf	___flmul@grs,w
  5496  0476  00C5               	movwf	??___flmul
  5497  0477  084C               	movf	___flmul@grs+1,w
  5498  0478  00C6               	movwf	??___flmul+1
  5499  0479  084D               	movf	___flmul@grs+2,w
  5500  047A  00C7               	movwf	??___flmul+2
  5501  047B  307F               	movlw	127
  5502  047C  054E               	andwf	___flmul@grs+3,w
  5503  047D  00C8               	movwf	??___flmul+3
  5504  047E  0447               	iorwf	??___flmul+2,w
  5505  047F  0446               	iorwf	??___flmul+1,w
  5506  0480  0445               	iorwf	??___flmul,w
  5507  0481  1903               	skipnz
  5508  0482  1850               	btfsc	___flmul@prod,0
  5509  0483  2C85               	goto	l2378
  5510  0484  2C87               	goto	l2382
  5511  0485                     l2378:	
  5512  0485  01CA               	clrf	___flmul@aexp
  5513  0486  0ACA               	incf	___flmul@aexp,f
  5514  0487                     l2382:	
  5515  0487  084A               	movf	___flmul@aexp,w
  5516  0488  1903               	btfsc	3,2
  5517  0489  2C99               	goto	l2392
  5518  048A  3001               	movlw	1
  5519  048B  07D0               	addwf	___flmul@prod,f
  5520  048C  3000               	movlw	0
  5521  048D  3DD1               	addwfc	___flmul@prod+1,f
  5522  048E  3DD2               	addwfc	___flmul@prod+2,f
  5523  048F  3DD3               	addwfc	___flmul@prod+3,f
  5524  0490  1C53               	btfss	___flmul@prod+3,0
  5525  0491  2C99               	goto	l2392
  5526  0492  37D3               	asrf	___flmul@prod+3,f
  5527  0493  0CD2               	rrf	___flmul@prod+2,f
  5528  0494  0CD1               	rrf	___flmul@prod+1,f
  5529  0495  0CD0               	rrf	___flmul@prod,f
  5530  0496  0AD4               	incf	___flmul@temp,f
  5531  0497  1903               	skipnz
  5532  0498  0AD5               	incf	___flmul@temp+1,f
  5533  0499                     l2392:	
  5534  0499  251E  3183         	fcall	PL70	;call to abstracted procedure
  5535  049B  1D03               	skipz
  5536  049C  2C9F               	goto	u2395
  5537  049D  30FF               	movlw	255
  5538  049E  0254               	subwf	___flmul@temp,w
  5539  049F                     u2395:	
  5540  049F  1C03               	skipc
  5541  04A0  2CA9               	goto	l2396
  5542  04A1  307F               	movlw	127
  5543  04A2  0020               	movlb	0	; select bank0
  5544  04A3  00D3               	movwf	___flmul@prod+3
  5545  04A4  3080               	movlw	128
  5546  04A5  00D2               	movwf	___flmul@prod+2
  5547  04A6  01D1               	clrf	___flmul@prod+1
  5548  04A7  01D0               	clrf	___flmul@prod
  5549  04A8  2CC7               	goto	l704
  5550  04A9                     l2396:	
  5551  04A9  0020               	movlb	0	; select bank0
  5552  04AA  251E  3183         	fcall	PL70	;call to abstracted procedure
  5553  04AC  1D03               	skipz
  5554  04AD  2CB0               	goto	u2405
  5555  04AE  3001               	movlw	1
  5556  04AF  0254               	subwf	___flmul@temp,w
  5557  04B0                     u2405:	
  5558  04B0  1803               	skipnc
  5559  04B1  2CB9               	goto	l2402
  5560  04B2  0020               	movlb	0	; select bank0
  5561  04B3  01D0               	clrf	___flmul@prod
  5562  04B4  01D1               	clrf	___flmul@prod+1
  5563  04B5  01D2               	clrf	___flmul@prod+2
  5564  04B6  01D3               	clrf	___flmul@prod+3
  5565  04B7  01C9               	clrf	___flmul@sign
  5566  04B8  2CC7               	goto	l704
  5567  04B9                     l2402:	
  5568  04B9  0020               	movlb	0	; select bank0
  5569  04BA  0854               	movf	___flmul@temp,w
  5570  04BB  00CF               	movwf	___flmul@bexp
  5571  04BC  30FF               	movlw	255
  5572  04BD  05D0               	andwf	___flmul@prod,f
  5573  04BE  05D1               	andwf	___flmul@prod+1,f
  5574  04BF  307F               	movlw	127
  5575  04C0  05D2               	andwf	___flmul@prod+2,f
  5576  04C1  3000               	movlw	0
  5577  04C2  01D3               	clrf	___flmul@prod+3
  5578  04C3  184F               	btfsc	___flmul@bexp,0
  5579  04C4  17D2               	bsf	___flmul@prod+2,7
  5580  04C5  364F               	lsrf	___flmul@bexp,w
  5581  04C6  00D3               	movwf	___flmul@prod+3
  5582  04C7                     l704:	
  5583  04C7  0849               	movf	___flmul@sign,w
  5584  04C8  04D3               	iorwf	___flmul@prod+3,f
  5585  04C9  0853               	movf	___flmul@prod+3,w
  5586  04CA  00C0               	movwf	?___flmul+3
  5587  04CB  0852               	movf	___flmul@prod+2,w
  5588  04CC  00BF               	movwf	?___flmul+2
  5589  04CD  0851               	movf	___flmul@prod+1,w
  5590  04CE  00BE               	movwf	?___flmul+1
  5591  04CF  0850               	movf	___flmul@prod,w
  5592  04D0  00BD               	movwf	?___flmul
  5593  04D1  0008               	return
  5594  04D2                     __end_of___flmul:	
  5595  04D2                     __ptext14:	
  5596 ;; *************** function __Umul8_16 *****************
  5597 ;; Defined at:
  5598 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  multiplier      1    wreg     unsigned char 
  5601 ;;  multiplicand    1    0[COMMON] unsigned char 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  multiplier      1    7[COMMON] unsigned char 
  5604 ;;  word_mpld       2    5[COMMON] unsigned int 
  5605 ;;  product         2    3[COMMON] unsigned int 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2    0[COMMON] unsigned int 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 1F/0
  5612 ;;		On exit  : 1F/0
  5613 ;;		Unchanged: 1F/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5615 ;;      Params:         3       0       0       0
  5616 ;;      Locals:         5       0       0       0
  5617 ;;      Temps:          0       0       0       0
  5618 ;;      Totals:         8       0       0       0
  5619 ;;Total ram usage:        8 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		___flmul
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function __Umul8_16
  5631  04D2                     __Umul8_16:	
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5635                           ;__Umul8_16@multiplier stored from wreg
  5636  04D2  00F7               	movwf	__Umul8_16@multiplier
  5637  04D3  01F3               	clrf	__Umul8_16@product
  5638  04D4  01F4               	clrf	__Umul8_16@product+1
  5639  04D5  0870               	movf	__Umul8_16@multiplicand,w
  5640  04D6  00F5               	movwf	__Umul8_16@word_mpld
  5641  04D7  01F6               	clrf	__Umul8_16@word_mpld+1
  5642  04D8                     l2048:	
  5643  04D8  1C77               	btfss	__Umul8_16@multiplier,0
  5644  04D9  2CDE               	goto	l2052
  5645  04DA  0875               	movf	__Umul8_16@word_mpld,w
  5646  04DB  07F3               	addwf	__Umul8_16@product,f
  5647  04DC  0876               	movf	__Umul8_16@word_mpld+1,w
  5648  04DD  3DF4               	addwfc	__Umul8_16@product+1,f
  5649  04DE                     l2052:	
  5650  04DE  35F5               	lslf	__Umul8_16@word_mpld,f
  5651  04DF  0DF6               	rlf	__Umul8_16@word_mpld+1,f
  5652  04E0  36F7               	lsrf	__Umul8_16@multiplier,f
  5653  04E1  0877               	movf	__Umul8_16@multiplier,w
  5654  04E2  1D03               	btfss	3,2
  5655  04E3  2CD8               	goto	l2048
  5656  04E4  0874               	movf	__Umul8_16@product+1,w
  5657  04E5  00F1               	movwf	?__Umul8_16+1
  5658  04E6  0873               	movf	__Umul8_16@product,w
  5659  04E7  00F0               	movwf	?__Umul8_16
  5660  04E8  0008               	return
  5661  04E9                     __end_of__Umul8_16:	
  5662  04E9                     PL14:	
  5663  04E9  0871               	movf	?__Umul8_16+1,w
  5664  04EA  00D5               	movwf	___flmul@temp+1
  5665  04EB  0870               	movf	?__Umul8_16,w
  5666  04EC  00D4               	movwf	___flmul@temp
  5667  04ED  07CB               	addwf	___flmul@grs,f
  5668  04EE  0855               	movf	___flmul@temp+1,w
  5669  04EF  3DCC               	addwfc	___flmul@grs+1,f
  5670  04F0  3000               	movlw	0
  5671  04F1  3DCD               	addwfc	___flmul@grs+2,f
  5672  04F2  3DCE               	addwfc	___flmul@grs+3,f
  5673  04F3  0008               	return
  5674  04F4                     __end_ofPL14:	
  5675  04F4                     PL26:	
  5676  04F4  07D0               	addwf	___flmul@prod,f
  5677  04F5  3001               	movlw	1
  5678  04F6  1803               	skipnc
  5679  04F7  07D1               	addwf	___flmul@prod+1,f
  5680  04F8  1803               	skipnc
  5681  04F9  07D2               	addwf	___flmul@prod+2,f
  5682  04FA  1803               	skipnc
  5683  04FB  07D3               	addwf	___flmul@prod+3,f
  5684  04FC  084D               	movf	___flmul@grs+2,w
  5685  04FD  00CE               	movwf	___flmul@grs+3
  5686  04FE  084C               	movf	___flmul@grs+1,w
  5687  04FF  00CD               	movwf	___flmul@grs+2
  5688  0500  084B               	movf	___flmul@grs,w
  5689  0501  00CC               	movwf	___flmul@grs+1
  5690  0502  01CB               	clrf	___flmul@grs
  5691  0503  0008               	return
  5692  0504                     __end_ofPL26:	
  5693  0504                     PL32:	
  5694  0504  00D5               	movwf	___flmul@temp+1
  5695  0505  0870               	movf	?__Umul8_16,w
  5696  0506  00D4               	movwf	___flmul@temp
  5697  0507  07CB               	addwf	___flmul@grs,f
  5698  0508  3001               	movlw	1
  5699  0509  1803               	skipnc
  5700  050A  07CC               	addwf	___flmul@grs+1,f
  5701  050B  1803               	skipnc
  5702  050C  07CD               	addwf	___flmul@grs+2,f
  5703  050D  1803               	skipnc
  5704  050E  07CE               	addwf	___flmul@grs+3,f
  5705  050F  0855               	movf	___flmul@temp+1,w
  5706  0510  0008               	return
  5707  0511                     __end_ofPL32:	
  5708  0511                     PL38:	
  5709  0511  0871               	movf	?__Umul8_16+1,w
  5710  0512  00D5               	movwf	___flmul@temp+1
  5711  0513  0870               	movf	?__Umul8_16,w
  5712  0514  00D4               	movwf	___flmul@temp
  5713  0515  07D0               	addwf	___flmul@prod,f
  5714  0516  0855               	movf	___flmul@temp+1,w
  5715  0517  3DD1               	addwfc	___flmul@prod+1,f
  5716  0518  3000               	movlw	0
  5717  0519  3DD2               	addwfc	___flmul@prod+2,f
  5718  051A  3DD3               	addwfc	___flmul@prod+3,f
  5719  051B  083F               	movf	___flmul@b+2,w
  5720  051C  00F0               	movwf	__Umul8_16@multiplicand
  5721  051D  0008               	return
  5722  051E                     __end_ofPL38:	
  5723  051E                     PL70:	
  5724  051E  0855               	movf	___flmul@temp+1,w
  5725  051F  3A80               	xorlw	128
  5726  0520  00C5               	movwf	??___flmul
  5727  0521  3080               	movlw	128
  5728  0522  0245               	subwf	??___flmul,w
  5729  0523  0008               	return
  5730  0524                     __end_ofPL70:	
  5731  0524                     PL80:	
  5732  0524  01C1               	clrf	___flmul@a
  5733  0525  01C2               	clrf	___flmul@a+1
  5734  0526  01C3               	clrf	___flmul@a+2
  5735  0527  01C4               	clrf	___flmul@a+3
  5736  0528  0008               	return
  5737  0529                     __end_ofPL80:	
  5738  0529                     PL82:	
  5739  0529  01BD               	clrf	___flmul@b
  5740  052A  01BE               	clrf	___flmul@b+1
  5741  052B  01BF               	clrf	___flmul@b+2
  5742  052C  01C0               	clrf	___flmul@b+3
  5743  052D  0008               	return
  5744  052E                     __end_ofPL82:	
  5745                           
  5746                           	psect	text18
  5747  052E                     __ptext18:	
  5748 ;; *************** function ___fldiv *****************
  5749 ;; Defined at:
  5750 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  a               4   54[BANK0 ] unsigned char 
  5753 ;;  b               4   58[BANK0 ] unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  grs             4   73[BANK0 ] unsigned long 
  5756 ;;  rem             4   66[BANK0 ] unsigned long 
  5757 ;;  new_exp         2   71[BANK0 ] int 
  5758 ;;  aexp            1   78[BANK0 ] unsigned char 
  5759 ;;  bexp            1   77[BANK0 ] unsigned char 
  5760 ;;  sign            1   70[BANK0 ] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  4   54[BANK0 ] unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0
  5765 ;; Tracked objects:
  5766 ;;		On entry : 1F/0
  5767 ;;		On exit  : 1F/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5770 ;;      Params:         0       8       0       0
  5771 ;;      Locals:         0      13       0       0
  5772 ;;      Temps:          0       4       0       0
  5773 ;;      Totals:         0      25       0       0
  5774 ;;Total ram usage:       25 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;;		_exp
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function ___fldiv
  5787  052E                     ___fldiv:	
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5791  052E  085D               	movf	___fldiv@b+3,w
  5792  052F  00E6               	movwf	___fldiv@sign
  5793  0530  3080               	movlw	128
  5794  0531  05E6               	andwf	___fldiv@sign,f
  5795  0532  355D               	lslf	___fldiv@b+3,w
  5796  0533  00ED               	movwf	___fldiv@bexp
  5797  0534  1BDC               	btfsc	___fldiv@b+2,7
  5798  0535  146D               	bsf	___fldiv@bexp,0
  5799  0536  086D               	movf	___fldiv@bexp,w
  5800  0537  1903               	btfsc	3,2
  5801  0538  2D41               	goto	l646
  5802  0539  0F6D               	incfsz	___fldiv@bexp,w
  5803  053A  2D3F               	goto	l647
  5804  053B  01DA               	clrf	___fldiv@b
  5805  053C  01DB               	clrf	___fldiv@b+1
  5806  053D  01DC               	clrf	___fldiv@b+2
  5807  053E  01DD               	clrf	___fldiv@b+3
  5808  053F                     l647:	
  5809  053F  17DC               	bsf	___fldiv@b+2,7
  5810  0540  2D44               	goto	L4
  5811  0541                     l646:	
  5812  0541  01DA               	clrf	___fldiv@b
  5813  0542  01DB               	clrf	___fldiv@b+1
  5814  0543  01DC               	clrf	___fldiv@b+2
  5815  0544                     L4:	
  5816  0544  01DD               	clrf	___fldiv@b+3
  5817  0545  0859               	movf	___fldiv@a+3,w
  5818  0546  3980               	andlw	128
  5819  0547  06E6               	xorwf	___fldiv@sign,f
  5820  0548  3559               	lslf	___fldiv@a+3,w
  5821  0549  00EE               	movwf	___fldiv@aexp
  5822  054A  1BD8               	btfsc	___fldiv@a+2,7
  5823  054B  146E               	bsf	___fldiv@aexp,0
  5824  054C  086E               	movf	___fldiv@aexp,w
  5825  054D  1903               	btfsc	3,2
  5826  054E  2D57               	goto	l650
  5827  054F  0F6E               	incfsz	___fldiv@aexp,w
  5828  0550  2D55               	goto	l651
  5829  0551  01D6               	clrf	___fldiv@a
  5830  0552  01D7               	clrf	___fldiv@a+1
  5831  0553  01D8               	clrf	___fldiv@a+2
  5832  0554  01D9               	clrf	___fldiv@a+3
  5833  0555                     l651:	
  5834  0555  17D8               	bsf	___fldiv@a+2,7
  5835  0556  2D5A               	goto	L5
  5836  0557                     l650:	
  5837  0557  01D6               	clrf	___fldiv@a
  5838  0558  01D7               	clrf	___fldiv@a+1
  5839  0559  01D8               	clrf	___fldiv@a+2
  5840  055A                     L5:	
  5841  055A  01D9               	clrf	___fldiv@a+3
  5842  055B  0859               	movf	___fldiv@a+3,w
  5843  055C  0458               	iorwf	___fldiv@a+2,w
  5844  055D  0457               	iorwf	___fldiv@a+1,w
  5845  055E  0456               	iorwf	___fldiv@a,w
  5846  055F  1D03               	skipz
  5847  0560  2D74               	goto	l2536
  5848  0561  3080               	movlw	128
  5849  0562  01DA               	clrf	___fldiv@b
  5850  0563  01DB               	clrf	___fldiv@b+1
  5851  0564  01DC               	clrf	___fldiv@b+2
  5852  0565  01DD               	clrf	___fldiv@b+3
  5853  0566  04DC               	iorwf	___fldiv@b+2,f
  5854  0567  307F               	movlw	127
  5855  0568  04DD               	iorwf	___fldiv@b+3,f
  5856  0569                     L6:	
  5857  0569  0866               	movf	___fldiv@sign,w
  5858  056A  04DD               	iorwf	___fldiv@b+3,f
  5859  056B  085D               	movf	___fldiv@b+3,w
  5860  056C  00D9               	movwf	?___fldiv+3
  5861  056D  085C               	movf	___fldiv@b+2,w
  5862  056E  00D8               	movwf	?___fldiv+2
  5863  056F  085B               	movf	___fldiv@b+1,w
  5864  0570  00D7               	movwf	?___fldiv+1
  5865  0571  085A               	movf	___fldiv@b,w
  5866  0572  00D6               	movwf	?___fldiv
  5867  0573  0008               	return
  5868  0574                     l2536:	
  5869  0574  086D               	movf	___fldiv@bexp,w
  5870  0575  1D03               	btfss	3,2
  5871  0576  2D7C               	goto	l2544
  5872  0577  01D6               	clrf	?___fldiv
  5873  0578  01D7               	clrf	?___fldiv+1
  5874  0579  01D8               	clrf	?___fldiv+2
  5875  057A  01D9               	clrf	?___fldiv+3
  5876  057B  0008               	return
  5877  057C                     l2544:	
  5878  057C  086D               	movf	___fldiv@bexp,w
  5879  057D  00E7               	movwf	___fldiv@new_exp
  5880  057E  01E8               	clrf	___fldiv@new_exp+1
  5881  057F  086E               	movf	___fldiv@aexp,w
  5882  0580  02E7               	subwf	___fldiv@new_exp,f
  5883  0581  1C03               	skipc
  5884  0582  03E8               	decf	___fldiv@new_exp+1,f
  5885  0583  307F               	movlw	127
  5886  0584  07E7               	addwf	___fldiv@new_exp,f
  5887  0585  1803               	skipnc
  5888  0586  0AE8               	incf	___fldiv@new_exp+1,f
  5889  0587  085D               	movf	___fldiv@b+3,w
  5890  0588  00E5               	movwf	___fldiv@rem+3
  5891  0589  085C               	movf	___fldiv@b+2,w
  5892  058A  00E4               	movwf	___fldiv@rem+2
  5893  058B  085B               	movf	___fldiv@b+1,w
  5894  058C  00E3               	movwf	___fldiv@rem+1
  5895  058D  085A               	movf	___fldiv@b,w
  5896  058E  00E2               	movwf	___fldiv@rem
  5897  058F  01DA               	clrf	___fldiv@b
  5898  0590  01DB               	clrf	___fldiv@b+1
  5899  0591  01DC               	clrf	___fldiv@b+2
  5900  0592  01DD               	clrf	___fldiv@b+3
  5901  0593  01E9               	clrf	___fldiv@grs
  5902  0594  01EA               	clrf	___fldiv@grs+1
  5903  0595  01EB               	clrf	___fldiv@grs+2
  5904  0596  01EC               	clrf	___fldiv@grs+3
  5905  0597  01EE               	clrf	___fldiv@aexp
  5906  0598                     l2570:	
  5907  0598  301A               	movlw	26
  5908  0599  026E               	subwf	___fldiv@aexp,w
  5909  059A  1803               	btfsc	3,0
  5910  059B  2DC8               	goto	l2572
  5911  059C  086E               	movf	___fldiv@aexp,w
  5912  059D  1903               	btfsc	3,2
  5913  059E  2DAD               	goto	l2562
  5914  059F  35E2               	lslf	___fldiv@rem,f
  5915  05A0  0DE3               	rlf	___fldiv@rem+1,f
  5916  05A1  0DE4               	rlf	___fldiv@rem+2,f
  5917  05A2  0DE5               	rlf	___fldiv@rem+3,f
  5918  05A3  35DA               	lslf	___fldiv@b,f
  5919  05A4  0DDB               	rlf	___fldiv@b+1,f
  5920  05A5  0DDC               	rlf	___fldiv@b+2,f
  5921  05A6  0DDD               	rlf	___fldiv@b+3,f
  5922  05A7  1BEC               	btfsc	___fldiv@grs+3,7
  5923  05A8  145A               	bsf	___fldiv@b,0
  5924  05A9  35E9               	lslf	___fldiv@grs,f
  5925  05AA  0DEA               	rlf	___fldiv@grs+1,f
  5926  05AB  0DEB               	rlf	___fldiv@grs+2,f
  5927  05AC  0DEC               	rlf	___fldiv@grs+3,f
  5928  05AD                     l2562:	
  5929  05AD  0859               	movf	___fldiv@a+3,w
  5930  05AE  0265               	subwf	___fldiv@rem+3,w
  5931  05AF  1D03               	skipz
  5932  05B0  2DBB               	goto	u2645
  5933  05B1  0858               	movf	___fldiv@a+2,w
  5934  05B2  0264               	subwf	___fldiv@rem+2,w
  5935  05B3  1D03               	skipz
  5936  05B4  2DBB               	goto	u2645
  5937  05B5  0857               	movf	___fldiv@a+1,w
  5938  05B6  0263               	subwf	___fldiv@rem+1,w
  5939  05B7  1D03               	skipz
  5940  05B8  2DBB               	goto	u2645
  5941  05B9  0856               	movf	___fldiv@a,w
  5942  05BA  0262               	subwf	___fldiv@rem,w
  5943  05BB                     u2645:	
  5944  05BB  1C03               	skipc
  5945  05BC  2DC6               	goto	l2568
  5946  05BD  176C               	bsf	___fldiv@grs+3,6
  5947  05BE  0856               	movf	___fldiv@a,w
  5948  05BF  02E2               	subwf	___fldiv@rem,f
  5949  05C0  0857               	movf	___fldiv@a+1,w
  5950  05C1  3BE3               	subwfb	___fldiv@rem+1,f
  5951  05C2  0858               	movf	___fldiv@a+2,w
  5952  05C3  3BE4               	subwfb	___fldiv@rem+2,f
  5953  05C4  0859               	movf	___fldiv@a+3,w
  5954  05C5  3BE5               	subwfb	___fldiv@rem+3,f
  5955  05C6                     l2568:	
  5956  05C6  0AEE               	incf	___fldiv@aexp,f
  5957  05C7  2D98               	goto	l2570
  5958  05C8                     l2572:	
  5959  05C8  0865               	movf	___fldiv@rem+3,w
  5960  05C9  0464               	iorwf	___fldiv@rem+2,w
  5961  05CA  0463               	iorwf	___fldiv@rem+1,w
  5962  05CB  0462               	iorwf	___fldiv@rem,w
  5963  05CC  1D03               	btfss	3,2
  5964  05CD  1469               	bsf	___fldiv@grs,0
  5965  05CE                     l2586:	
  5966  05CE  1BDC               	btfsc	___fldiv@b+2,7
  5967  05CF  2DDF               	goto	l2588
  5968  05D0  35DA               	lslf	___fldiv@b,f
  5969  05D1  0DDB               	rlf	___fldiv@b+1,f
  5970  05D2  0DDC               	rlf	___fldiv@b+2,f
  5971  05D3  0DDD               	rlf	___fldiv@b+3,f
  5972  05D4  1BEC               	btfsc	___fldiv@grs+3,7
  5973  05D5  145A               	bsf	___fldiv@b,0
  5974  05D6  30FF               	movlw	-1
  5975  05D7  35E9               	lslf	___fldiv@grs,f
  5976  05D8  0DEA               	rlf	___fldiv@grs+1,f
  5977  05D9  0DEB               	rlf	___fldiv@grs+2,f
  5978  05DA  0DEC               	rlf	___fldiv@grs+3,f
  5979  05DB  07E7               	addwf	___fldiv@new_exp,f
  5980  05DC  1C03               	skipc
  5981  05DD  03E8               	decf	___fldiv@new_exp+1,f
  5982  05DE  2DCE               	goto	l2586
  5983  05DF                     l2588:	
  5984  05DF  01EE               	clrf	___fldiv@aexp
  5985  05E0  1FEC               	btfss	___fldiv@grs+3,7
  5986  05E1  2DF4               	goto	l2598
  5987  05E2  0869               	movf	___fldiv@grs,w
  5988  05E3  00DE               	movwf	??___fldiv
  5989  05E4  086A               	movf	___fldiv@grs+1,w
  5990  05E5  00DF               	movwf	??___fldiv+1
  5991  05E6  086B               	movf	___fldiv@grs+2,w
  5992  05E7  00E0               	movwf	??___fldiv+2
  5993  05E8  307F               	movlw	127
  5994  05E9  056C               	andwf	___fldiv@grs+3,w
  5995  05EA  00E1               	movwf	??___fldiv+3
  5996  05EB  0460               	iorwf	??___fldiv+2,w
  5997  05EC  045F               	iorwf	??___fldiv+1,w
  5998  05ED  045E               	iorwf	??___fldiv,w
  5999  05EE  1903               	skipnz
  6000  05EF  185A               	btfsc	___fldiv@b,0
  6001  05F0  2DF2               	goto	l2594
  6002  05F1  2DF4               	goto	l2598
  6003  05F2                     l2594:	
  6004  05F2  01EE               	clrf	___fldiv@aexp
  6005  05F3  0AEE               	incf	___fldiv@aexp,f
  6006  05F4                     l2598:	
  6007  05F4  086E               	movf	___fldiv@aexp,w
  6008  05F5  1903               	btfsc	3,2
  6009  05F6  2E06               	goto	l2608
  6010  05F7  3001               	movlw	1
  6011  05F8  07DA               	addwf	___fldiv@b,f
  6012  05F9  3000               	movlw	0
  6013  05FA  3DDB               	addwfc	___fldiv@b+1,f
  6014  05FB  3DDC               	addwfc	___fldiv@b+2,f
  6015  05FC  3DDD               	addwfc	___fldiv@b+3,f
  6016  05FD  1C5D               	btfss	___fldiv@b+3,0
  6017  05FE  2E06               	goto	l2608
  6018  05FF  37DD               	asrf	___fldiv@b+3,f
  6019  0600  0CDC               	rrf	___fldiv@b+2,f
  6020  0601  0CDB               	rrf	___fldiv@b+1,f
  6021  0602  0CDA               	rrf	___fldiv@b,f
  6022  0603  0AE7               	incf	___fldiv@new_exp,f
  6023  0604  1903               	skipnz
  6024  0605  0AE8               	incf	___fldiv@new_exp+1,f
  6025  0606                     l2608:	
  6026  0606  262C  3185         	fcall	PL58	;call to abstracted procedure
  6027  0608  1D03               	skipz
  6028  0609  2E0C               	goto	u2745
  6029  060A  30FF               	movlw	255
  6030  060B  0267               	subwf	___fldiv@new_exp,w
  6031  060C                     u2745:	
  6032  060C  1C03               	skipc
  6033  060D  2E13               	goto	l673
  6034  060E  30FF               	movlw	255
  6035  060F  0020               	movlb	0	; select bank0
  6036  0610  00E7               	movwf	___fldiv@new_exp
  6037  0611  2632  3185         	fcall	PL76	;call to abstracted procedure
  6038  0613                     l673:	
  6039  0613  0020               	movlb	0	; select bank0
  6040  0614  262C  3185         	fcall	PL58	;call to abstracted procedure
  6041  0616  1D03               	skipz
  6042  0617  2E1A               	goto	u2755
  6043  0618  3001               	movlw	1
  6044  0619  0267               	subwf	___fldiv@new_exp,w
  6045  061A                     u2755:	
  6046  061A  1803               	skipnc
  6047  061B  2E21               	goto	l2618
  6048  061C  0020               	movlb	0	; select bank0
  6049  061D  01E7               	clrf	___fldiv@new_exp
  6050  061E  2632  3185         	fcall	PL76	;call to abstracted procedure
  6051  0620  01E6               	clrf	___fldiv@sign
  6052  0621                     l2618:	
  6053  0621  0020               	movlb	0	; select bank0
  6054  0622  0867               	movf	___fldiv@new_exp,w
  6055  0623  00ED               	movwf	___fldiv@bexp
  6056  0624  1C6D               	btfss	___fldiv@bexp,0
  6057  0625  2E28               	goto	l675
  6058  0626  17DC               	bsf	___fldiv@b+2,7
  6059  0627  2E29               	goto	l2624
  6060  0628                     l675:	
  6061  0628  13DC               	bcf	___fldiv@b+2,7
  6062  0629                     l2624:	
  6063  0629  366D               	lsrf	___fldiv@bexp,w
  6064  062A  00DD               	movwf	___fldiv@b+3
  6065  062B  2D69               	goto	L6
  6066  062C                     __end_of___fldiv:	
  6067  062C                     PL58:	
  6068  062C  0868               	movf	___fldiv@new_exp+1,w
  6069  062D  3A80               	xorlw	128
  6070  062E  00DE               	movwf	??___fldiv
  6071  062F  3080               	movlw	128
  6072  0630  025E               	subwf	??___fldiv,w
  6073  0631  0008               	return
  6074  0632                     __end_ofPL58:	
  6075  0632                     PL76:	
  6076  0632  01E8               	clrf	___fldiv@new_exp+1
  6077  0633  01DA               	clrf	___fldiv@b
  6078  0634  01DB               	clrf	___fldiv@b+1
  6079  0635  01DC               	clrf	___fldiv@b+2
  6080  0636  01DD               	clrf	___fldiv@b+3
  6081  0637  0008               	return
  6082  0638                     __end_ofPL76:	
  6083                           
  6084                           	psect	intentry
  6085  0004                     __pintentry:	
  6086 ;; *************** function _isr *****************
  6087 ;; Defined at:
  6088 ;;		line 106 in file "main.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 1F/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6102 ;;      Params:         0       0       0       0
  6103 ;;      Locals:         0       0       0       0
  6104 ;;      Temps:          0       0       0       0
  6105 ;;      Totals:         0       0       0       0
  6106 ;;Total ram usage:        0 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		Interrupt level 1
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115  0004                     _isr:	
  6116                           
  6117                           ;incstack = 0
  6118  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6119                           
  6120                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  6121  0005  3180               	pagesel	$
  6122                           
  6123                           ;main.c: 108: static unsigned char junk = 0;;main.c: 110: if (PIR1bits.SSP1IF)
  6124  0006  0020               	movlb	0	; select bank0
  6125  0007  1D91               	btfss	17,3	;volatile
  6126  0008  2861               	goto	i1l3010
  6127                           
  6128                           ;main.c: 111: {;main.c: 112: INTCONbits.IOCIE = 0;
  6129  0009  118B               	bcf	11,3	;volatile
  6130                           
  6131                           ;main.c: 113: PIE1bits.TMR1IE = 0;
  6132  000A  0021               	movlb	1	; select bank1
  6133  000B  1011               	bcf	17,0	;volatile
  6134                           
  6135                           ;main.c: 114: if (SSP1STATbits.R_nW)
  6136  000C  0024               	movlb	4	; select bank4
  6137  000D  1D14               	btfss	20,2	;volatile
  6138  000E  282D               	goto	i1l2970
  6139                           
  6140                           ;main.c: 115: {;main.c: 116: if (!SSP1STATbits.D_nA)
  6141  000F  1A94               	btfsc	20,5	;volatile
  6142  0010  281E               	goto	i1l2962
  6143                           
  6144                           ;main.c: 117: {;main.c: 118: SSP1BUF = I2C_buffer.byte[index_i2c++];
  6145  0011  0020               	movlb	0	; select bank0
  6146  0012  086F               	movf	_index_i2c,w
  6147  0013  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  6148  0014  0086               	movwf	6
  6149  0015  3001               	movlw	1	; select bank2/3
  6150  0016  0087               	movwf	7
  6151  0017  0801               	movf	1,w
  6152  0018  0024               	movlb	4	; select bank4
  6153  0019  0091               	movwf	17	;volatile
  6154  001A  0020               	movlb	0	; select bank0
  6155  001B  0AEF               	incf	_index_i2c,f
  6156                           
  6157                           ;main.c: 119: SSP1CON1bits.CKP = 1;
  6158  001C  0024               	movlb	4	; select bank4
  6159  001D  1615               	bsf	21,4	;volatile
  6160  001E                     i1l2962:	
  6161                           
  6162                           ;main.c: 120: };main.c: 121: if (SSP1STATbits.D_nA)
  6163  001E  1E94               	btfss	20,5	;volatile
  6164  001F  282D               	goto	i1l2970
  6165                           
  6166                           ;main.c: 122: {;main.c: 123: SSP1BUF = I2C_buffer.byte[index_i2c++];
  6167  0020  0020               	movlb	0	; select bank0
  6168  0021  086F               	movf	_index_i2c,w
  6169  0022  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  6170  0023  0086               	movwf	6
  6171  0024  3001               	movlw	1	; select bank2/3
  6172  0025  0087               	movwf	7
  6173  0026  0801               	movf	1,w
  6174  0027  0024               	movlb	4	; select bank4
  6175  0028  0091               	movwf	17	;volatile
  6176  0029  0020               	movlb	0	; select bank0
  6177  002A  0AEF               	incf	_index_i2c,f
  6178                           
  6179                           ;main.c: 124: SSP1CON1bits.CKP = 1;
  6180  002B  0024               	movlb	4	; select bank4
  6181  002C  1615               	bsf	21,4	;volatile
  6182  002D                     i1l2970:	
  6183                           
  6184                           ;main.c: 125: };main.c: 126: };main.c: 127: if (!SSP1STATbits.R_nW)
  6185  002D  1914               	btfsc	20,2	;volatile
  6186  002E  285C               	goto	i1l3004
  6187                           
  6188                           ;main.c: 128: {;main.c: 129: if (!SSP1STATbits.D_nA)
  6189  002F  1A94               	btfsc	20,5	;volatile
  6190  0030  2837               	goto	i1l2980
  6191                           
  6192                           ;main.c: 130: {;main.c: 131: first_i2c = 1;
  6193  0031  0021               	movlb	1	; select bank1
  6194  0032  01EE               	clrf	_first_i2c^(0+128)
  6195  0033  0AEE               	incf	_first_i2c^(0+128),f
  6196                           
  6197                           ;main.c: 132: junk = SSP1BUF;
  6198  0034  0024               	movlb	4	; select bank4
  6199  0035  0811               	movf	17,w	;volatile
  6200                           
  6201                           ;main.c: 133: SSP1CON1bits.CKP = 1;
  6202  0036  1615               	bsf	21,4	;volatile
  6203  0037                     i1l2980:	
  6204                           
  6205                           ;main.c: 134: };main.c: 135: if (SSP1STATbits.D_nA)
  6206  0037  1E94               	btfss	20,5	;volatile
  6207  0038  285C               	goto	i1l3004
  6208                           
  6209                           ;main.c: 136: {;main.c: 137: if (first_i2c) {
  6210  0039  0021               	movlb	1	; select bank1
  6211  003A  086E               	movf	_first_i2c^(0+128),w
  6212  003B  1903               	btfsc	3,2
  6213  003C  2844               	goto	i1l2988
  6214                           
  6215                           ;main.c: 138: index_i2c = SSP1BUF;
  6216  003D  0024               	movlb	4	; select bank4
  6217  003E  0811               	movf	17,w	;volatile
  6218  003F  0020               	movlb	0	; select bank0
  6219  0040  00EF               	movwf	_index_i2c
  6220                           
  6221                           ;main.c: 139: first_i2c = 0;
  6222  0041  0021               	movlb	1	; select bank1
  6223  0042  01EE               	clrf	_first_i2c^(0+128)
  6224                           
  6225                           ;main.c: 140: }
  6226  0043  2856               	goto	i1l2996
  6227  0044                     i1l2988:	
  6228                           
  6229                           ;main.c: 142: else {;main.c: 143: if (index_i2c < RX_ELMNTS)
  6230  0044  301D               	movlw	29
  6231  0045  0020               	movlb	0	; select bank0
  6232  0046  026F               	subwf	_index_i2c,w
  6233  0047  1803               	skipnc
  6234  0048  2854               	goto	i1l2994
  6235                           
  6236                           ;main.c: 144: {;main.c: 145: I2C_buffer.byte[index_i2c++] = SSP1BUF;
  6237  0049  086F               	movf	_index_i2c,w
  6238  004A  3E20               	addlw	(low (_I2C_buffer| (0+256)))& (0+255)
  6239  004B  0086               	movwf	6
  6240  004C  3001               	movlw	1	; select bank2/3
  6241  004D  0087               	movwf	7
  6242  004E  0024               	movlb	4	; select bank4
  6243  004F  0811               	movf	17,w	;volatile
  6244  0050  0081               	movwf	1
  6245  0051  0020               	movlb	0	; select bank0
  6246  0052  0AEF               	incf	_index_i2c,f
  6247                           
  6248                           ;main.c: 146: } else {
  6249  0053  2856               	goto	i1l2996
  6250  0054                     i1l2994:	
  6251                           
  6252                           ;main.c: 147: junk = SSP1BUF;
  6253  0054  0024               	movlb	4	; select bank4
  6254  0055  0811               	movf	17,w	;volatile
  6255  0056                     i1l2996:	
  6256                           
  6257                           ;main.c: 148: };main.c: 149: };main.c: 150: if (SSP1CON1bits.WCOL)
  6258  0056  0024               	movlb	4	; select bank4
  6259  0057  1F95               	btfss	21,7	;volatile
  6260  0058  285B               	goto	i1l3002
  6261                           
  6262                           ;main.c: 151: {;main.c: 152: SSP1CON1bits.WCOL = 0;
  6263  0059  1395               	bcf	21,7	;volatile
  6264                           
  6265                           ;main.c: 153: junk = SSP1BUF;
  6266  005A  0811               	movf	17,w	;volatile
  6267  005B                     i1l3002:	
  6268                           
  6269                           ;main.c: 154: };main.c: 155: SSP1CON1bits.CKP = 1;
  6270  005B  1615               	bsf	21,4	;volatile
  6271  005C                     i1l3004:	
  6272                           
  6273                           ;main.c: 156: };main.c: 157: };main.c: 158: PIR1bits.SSP1IF = 0;
  6274  005C  0020               	movlb	0	; select bank0
  6275  005D  1191               	bcf	17,3	;volatile
  6276                           
  6277                           ;main.c: 159: INTCONbits.IOCIE = 1;
  6278  005E  158B               	bsf	11,3	;volatile
  6279                           
  6280                           ;main.c: 160: PIE1bits.TMR1IE = 1;
  6281  005F  0021               	movlb	1	; select bank1
  6282  0060  1411               	bsf	17,0	;volatile
  6283  0061                     i1l3010:	
  6284                           
  6285                           ;main.c: 161: };main.c: 163: if (PIR2bits.BCL1IF)
  6286  0061  0020               	movlb	0	; select bank0
  6287  0062  1D92               	btfss	18,3	;volatile
  6288  0063  286C               	goto	i1l103
  6289                           
  6290                           ;main.c: 164: {;main.c: 165: junk = SSP1BUF;
  6291  0064  0024               	movlb	4	; select bank4
  6292  0065  0811               	movf	17,w	;volatile
  6293                           
  6294                           ;main.c: 166: PIR2bits.BCL1IF = 0;
  6295  0066  0020               	movlb	0	; select bank0
  6296  0067  1192               	bcf	18,3	;volatile
  6297                           
  6298                           ;main.c: 167: SSP1CON1bits.CKP = 1;
  6299  0068  0024               	movlb	4	; select bank4
  6300  0069  1615               	bsf	21,4	;volatile
  6301                           
  6302                           ;main.c: 168: PIR1bits.SSP1IF = 0;
  6303  006A  0020               	movlb	0	; select bank0
  6304  006B  1191               	bcf	17,3	;volatile
  6305  006C                     i1l103:	
  6306  006C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6307  006D  0009               	retfie
  6308  006E                     __end_of_isr:	
  6309  007E                     btemp	set	126	;btemp
  6310  007E                     int$flags	set	126
  6311  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    76
    Data        1
    BSS         42
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     78      79
    BANK2            80     14      55

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sqrt->___xxtofl
    _pow->___xxtofl
    _log->___xxtofl
    _exp->___xxtofl
    _floor->___xxtofl
    ___fleq->___xxtofl
    ___xxtofl->___fltol
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___fldiv->___xxtofl
    _init_I2C_buffer->_eeprom_read

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fldiv
    _sqrt->___fldiv
    _exp->___fldiv
    _frexp->___fleq
    ___fleq->___xxtofl
    ___flmul->_frexp
    ___fladd->___fldiv
    ___fldiv->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    ___flsub->___fladd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    10      4   78047
                                              0 BANK2     14    10      4
                           _ADC_read
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                       _eeprom_write
                    _init_I2C_buffer
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (1) _sqrt                                                29    25      4     949
                                              0 BANK1     29    25      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pow                                                 21    13      8   65555
                                             57 BANK1     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     2      4   21464
                                             38 BANK1      6     2      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 11     7      4   34866
                                             46 BANK1     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                                8     2      6    3256
                                             38 BANK1      8     2      6
                             ___fleq
                             ___flge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                               10     6      4    8734
                                             20 BANK1     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                7     2      5    1834
                                             22 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    1306
                                             10 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1082
                                             10 COMMON     4     0      4
                                              0 BANK0     10    10      0
                           _ADC_read (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1550
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           18    10      8    8011
                                             20 BANK1     18    10      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3893
                                             29 BANK0     25    17      8
                          __Umul8_16
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            8     5      3     799
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3681
                                             20 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3484
                                              0 BANK1     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     273
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2166
                                             54 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_I2C_buffer                                      0     0      0      22
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1     804
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
       ___xxtofl (ARG)
         _ADC_read (ARG)
         ___fltol (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _ADC_read (ARG)
         ___fltol (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
     ___xxtofl (ARG)
       _ADC_read (ARG)
       ___fltol (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         _ADC_read (ARG)
         ___fltol (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
     ___xxtofl (ARG)
       _ADC_read (ARG)
       ___fltol (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
       _ADC_read (ARG)
       ___fltol (ARG)
     _frexp (ARG)
       ___fleq
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
   ___xxtofl
     _ADC_read (ARG)
     ___fltol (ARG)
   _eeprom_write
   _init_I2C_buffer
     _eeprom_read
   _pow
     ___fleq
       ___xxtofl (ARG)
         _ADC_read (ARG)
         ___fltol (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
         _ADC_read (ARG)
         ___fltol (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
     ___flneg
     ___fltol
     ___xxtofl
       _ADC_read (ARG)
       ___fltol (ARG)
     _exp
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
       ___fleq
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         _ADC_read (ARG)
         ___fltol (ARG)
       _eval_poly
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
       _floor
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___flge
         ___fltol
         ___xxtofl
           _ADC_read (ARG)
           ___fltol (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
       _ldexp
         ___fleq
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
         ___flge
         _eval_poly (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       _ADC_read (ARG)
                       ___fltol (ARG)
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
       _log (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___fleq
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___xxtofl
           _ADC_read (ARG)
           ___fltol (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       _ADC_read (ARG)
                       ___fltol (ARG)
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
     _log
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
       ___fleq
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
       ___xxtofl
         _ADC_read (ARG)
         ___fltol (ARG)
       _eval_poly
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     _ADC_read (ARG)
                     ___fltol (ARG)
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   _ADC_read (ARG)
                   ___fltol (ARG)
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 _ADC_read (ARG)
                 ___fltol (ARG)
       _frexp
         ___fleq
           ___xxtofl (ARG)
             _ADC_read (ARG)
             ___fltol (ARG)
   _sqrt
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           _ADC_read (ARG)
           ___fltol (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               _ADC_read (ARG)
               ___fltol (ARG)
       ___xxtofl (ARG)
         _ADC_read (ARG)
         ___fltol (ARG)
     ___xxtofl (ARG)
       _ADC_read (ARG)
       ___fltol (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4E      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      E      37      10       68.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      E4      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 05 14:36:08 2020

            ___fldiv@aexp 006E              ___fldiv@bexp 006D              ___fldiv@sign 0066  
             __CFG_CP$OFF 0000                        PL2 0E30                        PL4 0E5F  
                      PL6 0E85                        PL8 035F                        l77 0A92  
     __Umul8_16@word_mpld 0075                       PL10 036F                       PL20 0ECC  
                     PL12 0EA5                       PL30 0717                       PL22 0EDC  
                     PL14 04E9                       PL40 0387                       PL32 0504  
                     PL24 0EEC                       PL16 0EAC                       PL50 0720  
                     PL42 038D                       PL34 0F06                       PL26 04F4  
                     PL18 0EBC                       PL60 0F39                       PL52 0395  
                     PL44 0F1A                       PL36 0F0D                       PL28 0EFC  
                     PL70 051E                       PL62 03A4                       PL54 0F34  
                     PL46 0F23                       PL38 0511                       PL80 0524  
                     PL72 0FF6                       PL64 0F3E                       PL56 039D  
                     PL48 0F2B                       PL82 0529                       PL74 0FFB  
                     PL66 0F44                       PL58 062C                       PL84 03B3  
                     PL76 0632                       PL68 03A9                       PL86 0F49  
                     PL78 03AE                       l108 086E                       l600 0267  
                     l273 0F88                       l602 0259                       l611 027D  
                     l603 025F                       l612 027E                       l604 0260  
                     l293 0A6A                       l622 02DB                       l704 04C7  
                     l480 0D43                       l617 02C6                       l721 06A6  
                     l650 0557                       l651 0555                       l637 0309  
                     l813 0140                       l646 0541                       l590 01EE  
                     l478 0D1B                       l750 0D73                       l647 053F  
                     l673 0613                       l594 0209                       l682 03C9  
                     l675 0628                       l595 0206                       l683 03C7  
                     l763 0DA1                       l589 01F1                       l686 03DB  
                     l687 03D9              __CFG_CPD$OFF 0000                       _adc 0145  
                     _exp 0BCF                       _log 0070                       _isr 0004  
                     _pow 0A9B              __CFG_BORV$LO 0000                       wreg 0009  
            ___flmul@aexp 004A              ___flmul@bexp 004F              ___flmul@sign 0049  
            ___flmul@temp 0054              ___flmul@prod 0050              __CFG_LVP$OFF 0000  
            ___fltol@exp1 0079                      l2110 0E04                      l2102 0DF7  
                    l2040 0BCD                      l2032 0BAC                      l2210 026D  
                    l2204 0262                      l2132 01F3                      l2052 04DE  
                    l2108 0DFB                      l2036 0BBB                      l3100 08C6  
                    l3020 0845                      l2222 0281                      l2070 0D2F  
                    l3110 0A5F                      l3102 0998                      l2232 02BE  
                    l2160 0213                      l2048 04D8                      l2320 03DD  
                    l2064 0D0A                      l2250 02DF                      l2154 020B  
                    l2402 04B9                      l2082 0DCF                      l2252 02E1  
                    l2324 03E7                      l2308 03CB                      l2084 0DD4  
                    l2420 0D6B                      l2262 02EC                      l2246 02DC  
                    l2238 02D0                      l2190 0231                      l2430 0D88  
                    l2440 0D9F                      l2424 0D7E                      l2282 0305  
                    l2274 02F9                      l2258 02EA                      l2098 0DF0  
                    l2442 0D96                      l2372 0472                      l2436 0D91  
                    l2428 0D80                      l3076 08BC                      l3068 0873  
                    l2286 030A                      l2382 0487                      l2454 0DB6  
                    l2624 0629                      l2608 0606                      l2544 057C  
                    l2536 0574                      l2392 0499                      l2640 0145  
                    l2704 007E                      l2618 0621                      l2562 05AD  
                    l2570 0598                      l2378 0485                      l2466 01B7  
                    l2650 0193                      l2730 0BFC                      l2572 05C8  
                    l2396 04A9                      l2660 0356                      l2740 0C2C  
                    l2724 0BE0                      l2708 0095                      l2734 0C0C  
                    l2830 0ADC                      l2568 05C6                      l2824 0ABF  
                    l2594 05F2                      l2586 05CE                      l2690 0FDE  
                    l2842 0B36                      l2922 06E7                      l2914 06CD  
                    l2588 05DF                      l2676 0FBD                      l2668 0FA9  
                    l2756 0CD1                      l2836 0B26                      l2916 06DD  
                    l2908 06A5                      l2598 05F4                      l2686 0FDB  
                    l2934 0707                      l2870 065A                      l2872 065E  
                    l2882 0674                      l2876 0667                      l2888 067F  
                    ?_exp 00CE                      ?_log 00C6                      ?_isr 0070  
                    ?_pow 00D9              __CFG_WDTE$ON 0000                      u2053 0293  
                    u2405 04B0                      u3310 0A5D                      u3135 06C0  
                    u3305 08D0                      u3337 08B5                      u2395 049F  
                    u3347 0A63                      u3357 0A8B                      u2645 05BB  
                    u1950 0250                      u1695 0BC9                      u1960 0251  
                    u2920 0C16                      u2745 060C                      u1945 0245  
                    u1785 0DDD                      u2930 0C17                      u2755 061A  
                    u2861 0F87                      u2845 0FC6                      _WPUA 020C  
          ??_eeprom_write 0071              __CFG_WRT$OFF 0000                      _iacc 0141  
                    _main 0845                      _vacc 013D                      fsr0h 0005  
                    fsr1h 0007                      indf0 0000                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
                    _sqrt 0638                      exp@x 00CE                      log@x 00C6  
           __CFG_BOREN$ON 0000                      pow@x 00D9                      pow@y 00DD  
                    start 006E          __end_of_ADC_read 0A9B             __CFG_IESO$OFF 0000  
         ___fldiv@new_exp 0067             __CFG_MCLRE$ON 0000                     ??_exp 007E  
                   ??_log 007E                     ??_isr 0070                     ??_pow 007E  
           __CFG_PLLEN$ON 0000             ___fltol@sign1 0078           __end_of___fladd 030F  
                   ?_main 0149           __end_of___fldiv 062C           __end_of___flneg 0DC8  
                   _EEADR 0191           __end_of___flmul 04D2           __end_of___flsub 0E30  
         __end_of___fltol 0E13                     ?_sqrt 00A0                     i1l103 006C  
                   _TRISA 008C             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   _floor 011A                     _ldexp 0F94                     _frexp 019C  
                   main@i 0151                     pow@yi 00EA                     sqrt@a 00A0  
                   sqrt@i 00A9                     sqrt@p 00B2                     status 0003  
                   wtemp0 007E               exp@exponent 00D6               ldexp@newexp 00CA  
         __initialization 0835               log@exponent 00CA              __end_of_main 0A69  
            __end_of_sqrt 0717                    ??_main 014D                    ??_sqrt 00A4  
                  _ADCON0 009D                    _ADCON1 009E                    ?_floor 00B4  
                  ?_ldexp 00C6                    ?_frexp 0036                    _ADRESH 009C  
                  _ADRESL 009B                    _EEDATA 0193                    _EECON1 0195  
                  _EECON2 0196                    _ANSELA 018C                    i1l3002 005B  
                  i1l3010 0061                    i1l3004 005C                    i1l2962 001E  
                  i1l2970 002D                    i1l2980 0037                    i1l2994 0054  
                  i1l2996 0056                    i1l2988 0044                    _INTCON 000B  
                  _OSCCON 0099          __end_of___xxtofl 0DBF      __size_of_eeprom_read 000F  
                  ___flge 0CF9                    ___fleq 0B9B                 ??___fladd 00A8  
               ??___fldiv 005E                 ??___flneg 0074            __CFG_STVREN$ON 0000  
               ??___flmul 0045                 ??___flsub 007E                 ??___fltol 0074  
    __end_of_eeprom_write 0A82                    floor@i 00B8                    floor@x 00B4  
__size_of_init_I2C_buffer 0037        __size_of__Umul8_16 0017                 ?_ADC_read 0070  
              ___flge@ff1 0070                ___flge@ff2 0074              ___xxtofl@arg 0026  
        __end_ofexp@coeff 0751              ___xxtofl@exp 0025              ___xxtofl@val 007A  
              ___fleq@ff1 002A                ___fleq@ff2 002E          __end_oflog@coeff 0775  
 __end_of__initialization 0842                ___flneg@f1 0070           eeprom_read@addr 0070  
            eval_poly@res 00C2                ___fltol@f1 0070            __pcstackCOMMON 0070  
            __pidataBANK1 0000             __end_of_floor 019C             __end_of_ldexp 0FF6  
           __end_of_frexp 01DF                __end_ofPL2 0E5F                __end_ofPL4 0E85  
              __end_ofPL6 0EA5                __end_ofPL8 036F            _OPTION_REGbits 0095  
         ADC_read@channel 0073                ??_ADC_read 0072         eeprom_write@value 0070  
                 ??_floor 007E                   ??_ldexp 00CC                   ??_frexp 003B  
              __pbssBANK0 006F                __pbssBANK2 0120        __size_of_eval_poly 0050  
       __end_of__Umul8_16 04E9                __pmaintext 0845                   ?___flge 0070  
                 ?___fleq 002A                __pintentry 0004                 ?___xxtofl 007A  
                 _SSP1ADD 0212                   _SSP1BUF 0211         ??_init_I2C_buffer 0071  
   __size_of_eeprom_write 0019           __size_of___flge 005C           __size_of___fleq 0034  
                 ___fladd 01DF                   ___fldiv 052E                   ___flneg 0DBF  
                 ___flmul 03B8                   ___flsub 0E13                   ___fltol 0DC8  
       __end_of_eval_poly 035F                   __ptext1 0638                   __ptext2 0A9B  
                 __ptext3 0070                   __ptext4 0BCF                   __ptext5 0F94  
                 __ptext6 011A                   __ptext7 019C                   __ptext8 0B9B  
                 __ptext9 0D55              __size_of_exp 012A              __size_of_log 00AA  
            __size_of_isr 006A              __size_of_pow 0100                ??___xxtofl 0020  
                 clrloop0 0776      end_of_initialization 0842                   exp@sign 00D8  
            _eeprom_write 0A69                   pow@sign 00E9                   sqrt@grs 00AE  
                 sqrt@exp 00B3               ___fladd@grs 00B3          __CFG_FOSC$INTOSC 0000  
           ___xxtofl@sign 0024               ___fldiv@grs 0069               ___fldiv@rem 0062  
       __size_of_ADC_read 0019               ___flmul@grs 004B             ??_eeprom_read 0070  
          __end_of___flge 0D55            __end_of___fleq 0BCF                floor@expon 00BC  
             __end_ofPL10 0387               __end_ofPL20 0EDC               __end_ofPL12 0EAC  
             __end_ofPL30 0720               __end_ofPL22 0EEC               __end_ofPL14 04F4  
             __end_ofPL40 038D               __end_ofPL32 0511               __end_ofPL24 0EFC  
             __end_ofPL16 0EBC               __end_ofPL50 0729               __end_ofPL42 0395  
             __end_ofPL34 0F0D               __end_ofPL26 0504               __end_ofPL18 0ECC  
             __end_ofPL60 0F3E               __end_ofPL52 039D               __end_ofPL44 0F23  
             __end_ofPL36 0F1A               __end_ofPL28 0F06               __end_ofPL70 0524  
             __end_ofPL62 03A9               __end_ofPL54 0F39               __end_ofPL46 0F2B  
             __end_ofPL38 051E               __end_ofPL80 0529               __end_ofPL72 0FFB  
             __end_ofPL64 0F44               __end_ofPL56 03A4               __end_ofPL48 0F34  
             __end_ofPL82 052E               __end_ofPL74 1000               __end_ofPL66 0F49  
             __end_ofPL58 0632               __end_ofPL84 03B8               __end_ofPL76 0638  
             __end_ofPL68 03AE               __end_ofPL86 0F4E               __end_ofPL78 03B3  
     start_initialization 0835                eval_poly@d 00B8                eval_poly@n 00BA  
              eval_poly@x 00B4                ldexp@value 00C6               __end_of_exp 0CF9  
             __end_of_log 011A               __end_of_isr 006E               __end_of_pow 0B9B  
              frexp@value 0036                  ??___flge 0078                  ??___fleq 0032  
     __end_of_eeprom_read 0F94                 __Umul8_16 04D2               __pdataBANK1 00EE  
         _init_I2C_buffer 0F4E                 ___fladd@a 00A4                 ___fladd@b 00A0  
               ___fldiv@a 0056                 ___fldiv@b 005A                 ___flmul@a 0041  
               ___flmul@b 003D                 ___flsub@a 00B4                 ___flsub@b 00B8  
               ___latbits 0001             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK2 0149         __size_of___xxtofl 006A          eeprom_write@addr 0071  
               _main$1332 0153                  ?___fladd 00A0                  ?___fldiv 0056  
                ?___flneg 0070                  ?___flmul 003D                  ?___flsub 00B4  
                ?___fltol 0070                ?__Umul8_16 0070                 _first_i2c 00EE  
               _eval_poly 030F                 _index_i2c 006F                  _ADC_read 0A82  
          __size_of_floor 0082            __size_of_ldexp 0062            __size_of_frexp 0043  
                _LATAbits 010C                 clear_ram0 0775               _eeprom_read 0F85  
                _PIE1bits 0091                  _PIE2bits 0092                  _PIR1bits 0011  
                _PIR2bits 0012   __end_of_init_I2C_buffer 0F85                  _SSP1CON1 0215  
                _SSP1STAT 0214                _ADCON0bits 009D                ?_eval_poly 00B4  
              _I2C_buffer 0120                 frexp@eptr 003A                _EECON1bits 0195  
             ??__Umul8_16 0073          __size_of___fladd 0130          __size_of___fldiv 00FE  
        __size_of___flneg 0009          __size_of___flmul 011A          __size_of___flsub 001D  
        __size_of___fltol 004B                  _exp$1335 00D2                  ___xxtofl 0D55  
                __ptext10 0DC8                  __ptext11 0CF9                  __ptext20 0F85  
                __ptext12 030F                  __ptext21 0A69                  __ptext13 03B8  
                __ptext22 0A82                  __ptext14 04D2                  __ptext15 0E13  
                __ptext16 01DF                  __ptext17 0DBF                  __ptext18 052E  
                __ptext19 0F4E              _SSP1CON1bits 0215              _SSP1CON2bits 0216  
            _SSP1CON3bits 0217                  _pow$1333 00E1                  _pow$1334 00E5  
           __size_of_main 0224             __size_of_sqrt 00DF          ?_init_I2C_buffer 0070  
                int$flags 007E                  main@argc 0149                  main@argv 014B  
            _SSP1STATbits 0214                  exp@coeff 0729                  log@coeff 0751  
              _INTCONbits 000B               ??_eval_poly 00BC                 sqrt@tfrac 00AA  
                intlevel1 0000         __CFG_CLKOUTEN$OFF 0000             __pstringtext1 0729  
           __pstringtext2 0751                  sqrt@frac 00B5                  sqrt@sign 00A8  
                sqrt@root 00B9    __Umul8_16@multiplicand 0070             ___fladd@signs 00B0  
           ?_eeprom_write 0070              ___fladd@aexp 00B1              ___fladd@bexp 00B2  
              _STATUSbits 0003      __Umul8_16@multiplier 0077              ?_eeprom_read 0070  
       __Umul8_16@product 0073  
